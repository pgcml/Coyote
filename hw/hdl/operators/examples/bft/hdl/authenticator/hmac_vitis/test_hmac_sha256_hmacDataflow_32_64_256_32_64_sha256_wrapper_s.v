// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module test_hmac_sha256_hmacDataflow_32_64_256_32_64_sha256_wrapper_s (
        keyStrm_dout,
        keyStrm_empty_n,
        keyStrm_read,
        msgStrm_dout,
        msgStrm_empty_n,
        msgStrm_read,
        lenStrm_dout,
        lenStrm_empty_n,
        lenStrm_read,
        eLenStrm_dout,
        eLenStrm_empty_n,
        eLenStrm_read,
        hshStrm_din,
        hshStrm_full_n,
        hshStrm_write,
        eHshStrm_din,
        eHshStrm_full_n,
        eHshStrm_write,
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_ready,
        ap_idle,
        ap_continue
);


input  [31:0] keyStrm_dout;
input   keyStrm_empty_n;
output   keyStrm_read;
input  [31:0] msgStrm_dout;
input   msgStrm_empty_n;
output   msgStrm_read;
input  [63:0] lenStrm_dout;
input   lenStrm_empty_n;
output   lenStrm_read;
input  [0:0] eLenStrm_dout;
input   eLenStrm_empty_n;
output   eLenStrm_read;
output  [255:0] hshStrm_din;
input   hshStrm_full_n;
output   hshStrm_write;
output  [0:0] eHshStrm_din;
input   eHshStrm_full_n;
output   eHshStrm_write;
input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_ready;
output   ap_idle;
input   ap_continue;

wire    kpad_32_64_256_32_64_sha256_wrapper_U0_ap_start;
wire    kpad_32_64_256_32_64_sha256_wrapper_U0_ap_done;
wire    kpad_32_64_256_32_64_sha256_wrapper_U0_ap_continue;
wire    kpad_32_64_256_32_64_sha256_wrapper_U0_ap_idle;
wire    kpad_32_64_256_32_64_sha256_wrapper_U0_ap_ready;
wire    kpad_32_64_256_32_64_sha256_wrapper_U0_start_out;
wire    kpad_32_64_256_32_64_sha256_wrapper_U0_start_write;
wire    kpad_32_64_256_32_64_sha256_wrapper_U0_keyStrm_read;
wire    kpad_32_64_256_32_64_sha256_wrapper_U0_eLenStrm_read;
wire   [511:0] kpad_32_64_256_32_64_sha256_wrapper_U0_kipadStrm7_din;
wire    kpad_32_64_256_32_64_sha256_wrapper_U0_kipadStrm7_write;
wire   [511:0] kpad_32_64_256_32_64_sha256_wrapper_U0_kopadStrm8_din;
wire    kpad_32_64_256_32_64_sha256_wrapper_U0_kopadStrm8_write;
wire   [0:0] kpad_32_64_256_32_64_sha256_wrapper_U0_eKipadStrm6_din;
wire    kpad_32_64_256_32_64_sha256_wrapper_U0_eKipadStrm6_write;
wire    msgHash_32_64_256_32_64_sha256_wrapper_U0_ap_start;
wire    msgHash_32_64_256_32_64_sha256_wrapper_U0_start_out;
wire    msgHash_32_64_256_32_64_sha256_wrapper_U0_start_write;
wire    msgHash_32_64_256_32_64_sha256_wrapper_U0_kipadStrm7_read;
wire    msgHash_32_64_256_32_64_sha256_wrapper_U0_kopadStrm8_read;
wire    msgHash_32_64_256_32_64_sha256_wrapper_U0_msgStrm_read;
wire    msgHash_32_64_256_32_64_sha256_wrapper_U0_lenStrm_read;
wire    msgHash_32_64_256_32_64_sha256_wrapper_U0_eKipadStrm6_read;
wire   [511:0] msgHash_32_64_256_32_64_sha256_wrapper_U0_kopad2Strm9_din;
wire    msgHash_32_64_256_32_64_sha256_wrapper_U0_kopad2Strm9_write;
wire   [255:0] msgHash_32_64_256_32_64_sha256_wrapper_U0_msgHashStrm10_din;
wire    msgHash_32_64_256_32_64_sha256_wrapper_U0_msgHashStrm10_write;
wire   [0:0] msgHash_32_64_256_32_64_sha256_wrapper_U0_eMsgHashStrm11_din;
wire    msgHash_32_64_256_32_64_sha256_wrapper_U0_eMsgHashStrm11_write;
wire    msgHash_32_64_256_32_64_sha256_wrapper_U0_ap_done;
wire    msgHash_32_64_256_32_64_sha256_wrapper_U0_ap_ready;
wire    msgHash_32_64_256_32_64_sha256_wrapper_U0_ap_idle;
wire    msgHash_32_64_256_32_64_sha256_wrapper_U0_ap_continue;
wire    resHash_32_64_256_32_64_sha256_wrapper_U0_kopad2Strm9_read;
wire    resHash_32_64_256_32_64_sha256_wrapper_U0_msgHashStrm10_read;
wire    resHash_32_64_256_32_64_sha256_wrapper_U0_eMsgHashStrm11_read;
wire   [255:0] resHash_32_64_256_32_64_sha256_wrapper_U0_hshStrm_din;
wire    resHash_32_64_256_32_64_sha256_wrapper_U0_hshStrm_write;
wire   [0:0] resHash_32_64_256_32_64_sha256_wrapper_U0_eHshStrm_din;
wire    resHash_32_64_256_32_64_sha256_wrapper_U0_eHshStrm_write;
wire    resHash_32_64_256_32_64_sha256_wrapper_U0_ap_start;
wire    resHash_32_64_256_32_64_sha256_wrapper_U0_ap_done;
wire    resHash_32_64_256_32_64_sha256_wrapper_U0_ap_ready;
wire    resHash_32_64_256_32_64_sha256_wrapper_U0_ap_idle;
wire    resHash_32_64_256_32_64_sha256_wrapper_U0_ap_continue;
wire    kipadStrm_full_n;
wire   [511:0] kipadStrm_dout;
wire   [2:0] kipadStrm_num_data_valid;
wire   [2:0] kipadStrm_fifo_cap;
wire    kipadStrm_empty_n;
wire    kopadStrm_full_n;
wire   [511:0] kopadStrm_dout;
wire   [2:0] kopadStrm_num_data_valid;
wire   [2:0] kopadStrm_fifo_cap;
wire    kopadStrm_empty_n;
wire    eKipadStrm_full_n;
wire   [0:0] eKipadStrm_dout;
wire   [2:0] eKipadStrm_num_data_valid;
wire   [2:0] eKipadStrm_fifo_cap;
wire    eKipadStrm_empty_n;
wire    kopad2Strm_full_n;
wire   [511:0] kopad2Strm_dout;
wire   [2:0] kopad2Strm_num_data_valid;
wire   [2:0] kopad2Strm_fifo_cap;
wire    kopad2Strm_empty_n;
wire    msgHashStrm_full_n;
wire   [255:0] msgHashStrm_dout;
wire   [2:0] msgHashStrm_num_data_valid;
wire   [2:0] msgHashStrm_fifo_cap;
wire    msgHashStrm_empty_n;
wire    eMsgHashStrm_full_n;
wire   [0:0] eMsgHashStrm_dout;
wire   [2:0] eMsgHashStrm_num_data_valid;
wire   [2:0] eMsgHashStrm_fifo_cap;
wire    eMsgHashStrm_empty_n;
wire   [0:0] start_for_msgHash_32_64_256_32_64_sha256_wrapper_U0_din;
wire    start_for_msgHash_32_64_256_32_64_sha256_wrapper_U0_full_n;
wire   [0:0] start_for_msgHash_32_64_256_32_64_sha256_wrapper_U0_dout;
wire    start_for_msgHash_32_64_256_32_64_sha256_wrapper_U0_empty_n;
wire   [0:0] start_for_resHash_32_64_256_32_64_sha256_wrapper_U0_din;
wire    start_for_resHash_32_64_256_32_64_sha256_wrapper_U0_full_n;
wire   [0:0] start_for_resHash_32_64_256_32_64_sha256_wrapper_U0_dout;
wire    start_for_resHash_32_64_256_32_64_sha256_wrapper_U0_empty_n;

test_hmac_sha256_kpad_32_64_256_32_64_sha256_wrapper_s kpad_32_64_256_32_64_sha256_wrapper_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(kpad_32_64_256_32_64_sha256_wrapper_U0_ap_start),
    .start_full_n(start_for_msgHash_32_64_256_32_64_sha256_wrapper_U0_full_n),
    .ap_done(kpad_32_64_256_32_64_sha256_wrapper_U0_ap_done),
    .ap_continue(kpad_32_64_256_32_64_sha256_wrapper_U0_ap_continue),
    .ap_idle(kpad_32_64_256_32_64_sha256_wrapper_U0_ap_idle),
    .ap_ready(kpad_32_64_256_32_64_sha256_wrapper_U0_ap_ready),
    .start_out(kpad_32_64_256_32_64_sha256_wrapper_U0_start_out),
    .start_write(kpad_32_64_256_32_64_sha256_wrapper_U0_start_write),
    .keyStrm_dout(keyStrm_dout),
    .keyStrm_empty_n(keyStrm_empty_n),
    .keyStrm_read(kpad_32_64_256_32_64_sha256_wrapper_U0_keyStrm_read),
    .eLenStrm_dout(eLenStrm_dout),
    .eLenStrm_empty_n(eLenStrm_empty_n),
    .eLenStrm_read(kpad_32_64_256_32_64_sha256_wrapper_U0_eLenStrm_read),
    .kipadStrm7_din(kpad_32_64_256_32_64_sha256_wrapper_U0_kipadStrm7_din),
    .kipadStrm7_num_data_valid(kipadStrm_num_data_valid),
    .kipadStrm7_fifo_cap(kipadStrm_fifo_cap),
    .kipadStrm7_full_n(kipadStrm_full_n),
    .kipadStrm7_write(kpad_32_64_256_32_64_sha256_wrapper_U0_kipadStrm7_write),
    .kopadStrm8_din(kpad_32_64_256_32_64_sha256_wrapper_U0_kopadStrm8_din),
    .kopadStrm8_num_data_valid(kopadStrm_num_data_valid),
    .kopadStrm8_fifo_cap(kopadStrm_fifo_cap),
    .kopadStrm8_full_n(kopadStrm_full_n),
    .kopadStrm8_write(kpad_32_64_256_32_64_sha256_wrapper_U0_kopadStrm8_write),
    .eKipadStrm6_din(kpad_32_64_256_32_64_sha256_wrapper_U0_eKipadStrm6_din),
    .eKipadStrm6_num_data_valid(eKipadStrm_num_data_valid),
    .eKipadStrm6_fifo_cap(eKipadStrm_fifo_cap),
    .eKipadStrm6_full_n(eKipadStrm_full_n),
    .eKipadStrm6_write(kpad_32_64_256_32_64_sha256_wrapper_U0_eKipadStrm6_write)
);

test_hmac_sha256_msgHash_32_64_256_32_64_sha256_wrapper_s msgHash_32_64_256_32_64_sha256_wrapper_U0(
    .ap_start(msgHash_32_64_256_32_64_sha256_wrapper_U0_ap_start),
    .start_full_n(start_for_resHash_32_64_256_32_64_sha256_wrapper_U0_full_n),
    .start_out(msgHash_32_64_256_32_64_sha256_wrapper_U0_start_out),
    .start_write(msgHash_32_64_256_32_64_sha256_wrapper_U0_start_write),
    .kipadStrm7_dout(kipadStrm_dout),
    .kipadStrm7_empty_n(kipadStrm_empty_n),
    .kipadStrm7_read(msgHash_32_64_256_32_64_sha256_wrapper_U0_kipadStrm7_read),
    .kopadStrm8_dout(kopadStrm_dout),
    .kopadStrm8_empty_n(kopadStrm_empty_n),
    .kopadStrm8_read(msgHash_32_64_256_32_64_sha256_wrapper_U0_kopadStrm8_read),
    .msgStrm_dout(msgStrm_dout),
    .msgStrm_empty_n(msgStrm_empty_n),
    .msgStrm_read(msgHash_32_64_256_32_64_sha256_wrapper_U0_msgStrm_read),
    .lenStrm_dout(lenStrm_dout),
    .lenStrm_empty_n(lenStrm_empty_n),
    .lenStrm_read(msgHash_32_64_256_32_64_sha256_wrapper_U0_lenStrm_read),
    .eKipadStrm6_dout(eKipadStrm_dout),
    .eKipadStrm6_empty_n(eKipadStrm_empty_n),
    .eKipadStrm6_read(msgHash_32_64_256_32_64_sha256_wrapper_U0_eKipadStrm6_read),
    .kopad2Strm9_din(msgHash_32_64_256_32_64_sha256_wrapper_U0_kopad2Strm9_din),
    .kopad2Strm9_full_n(kopad2Strm_full_n),
    .kopad2Strm9_write(msgHash_32_64_256_32_64_sha256_wrapper_U0_kopad2Strm9_write),
    .msgHashStrm10_din(msgHash_32_64_256_32_64_sha256_wrapper_U0_msgHashStrm10_din),
    .msgHashStrm10_full_n(msgHashStrm_full_n),
    .msgHashStrm10_write(msgHash_32_64_256_32_64_sha256_wrapper_U0_msgHashStrm10_write),
    .eMsgHashStrm11_din(msgHash_32_64_256_32_64_sha256_wrapper_U0_eMsgHashStrm11_din),
    .eMsgHashStrm11_full_n(eMsgHashStrm_full_n),
    .eMsgHashStrm11_write(msgHash_32_64_256_32_64_sha256_wrapper_U0_eMsgHashStrm11_write),
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_done(msgHash_32_64_256_32_64_sha256_wrapper_U0_ap_done),
    .ap_ready(msgHash_32_64_256_32_64_sha256_wrapper_U0_ap_ready),
    .ap_idle(msgHash_32_64_256_32_64_sha256_wrapper_U0_ap_idle),
    .ap_continue(msgHash_32_64_256_32_64_sha256_wrapper_U0_ap_continue)
);

test_hmac_sha256_resHash_32_64_256_32_64_sha256_wrapper_s resHash_32_64_256_32_64_sha256_wrapper_U0(
    .kopad2Strm9_dout(kopad2Strm_dout),
    .kopad2Strm9_empty_n(kopad2Strm_empty_n),
    .kopad2Strm9_read(resHash_32_64_256_32_64_sha256_wrapper_U0_kopad2Strm9_read),
    .msgHashStrm10_dout(msgHashStrm_dout),
    .msgHashStrm10_empty_n(msgHashStrm_empty_n),
    .msgHashStrm10_read(resHash_32_64_256_32_64_sha256_wrapper_U0_msgHashStrm10_read),
    .eMsgHashStrm11_dout(eMsgHashStrm_dout),
    .eMsgHashStrm11_empty_n(eMsgHashStrm_empty_n),
    .eMsgHashStrm11_read(resHash_32_64_256_32_64_sha256_wrapper_U0_eMsgHashStrm11_read),
    .hshStrm_din(resHash_32_64_256_32_64_sha256_wrapper_U0_hshStrm_din),
    .hshStrm_full_n(hshStrm_full_n),
    .hshStrm_write(resHash_32_64_256_32_64_sha256_wrapper_U0_hshStrm_write),
    .eHshStrm_din(resHash_32_64_256_32_64_sha256_wrapper_U0_eHshStrm_din),
    .eHshStrm_full_n(eHshStrm_full_n),
    .eHshStrm_write(resHash_32_64_256_32_64_sha256_wrapper_U0_eHshStrm_write),
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(resHash_32_64_256_32_64_sha256_wrapper_U0_ap_start),
    .ap_done(resHash_32_64_256_32_64_sha256_wrapper_U0_ap_done),
    .ap_ready(resHash_32_64_256_32_64_sha256_wrapper_U0_ap_ready),
    .ap_idle(resHash_32_64_256_32_64_sha256_wrapper_U0_ap_idle),
    .ap_continue(resHash_32_64_256_32_64_sha256_wrapper_U0_ap_continue)
);

test_hmac_sha256_fifo_w512_d4_D kipadStrm_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(kpad_32_64_256_32_64_sha256_wrapper_U0_kipadStrm7_din),
    .if_full_n(kipadStrm_full_n),
    .if_write(kpad_32_64_256_32_64_sha256_wrapper_U0_kipadStrm7_write),
    .if_dout(kipadStrm_dout),
    .if_num_data_valid(kipadStrm_num_data_valid),
    .if_fifo_cap(kipadStrm_fifo_cap),
    .if_empty_n(kipadStrm_empty_n),
    .if_read(msgHash_32_64_256_32_64_sha256_wrapper_U0_kipadStrm7_read)
);

test_hmac_sha256_fifo_w512_d4_D kopadStrm_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(kpad_32_64_256_32_64_sha256_wrapper_U0_kopadStrm8_din),
    .if_full_n(kopadStrm_full_n),
    .if_write(kpad_32_64_256_32_64_sha256_wrapper_U0_kopadStrm8_write),
    .if_dout(kopadStrm_dout),
    .if_num_data_valid(kopadStrm_num_data_valid),
    .if_fifo_cap(kopadStrm_fifo_cap),
    .if_empty_n(kopadStrm_empty_n),
    .if_read(msgHash_32_64_256_32_64_sha256_wrapper_U0_kopadStrm8_read)
);

test_hmac_sha256_fifo_w1_d4_D_x0 eKipadStrm_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(kpad_32_64_256_32_64_sha256_wrapper_U0_eKipadStrm6_din),
    .if_full_n(eKipadStrm_full_n),
    .if_write(kpad_32_64_256_32_64_sha256_wrapper_U0_eKipadStrm6_write),
    .if_dout(eKipadStrm_dout),
    .if_num_data_valid(eKipadStrm_num_data_valid),
    .if_fifo_cap(eKipadStrm_fifo_cap),
    .if_empty_n(eKipadStrm_empty_n),
    .if_read(msgHash_32_64_256_32_64_sha256_wrapper_U0_eKipadStrm6_read)
);

test_hmac_sha256_fifo_w512_d4_D kopad2Strm_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(msgHash_32_64_256_32_64_sha256_wrapper_U0_kopad2Strm9_din),
    .if_full_n(kopad2Strm_full_n),
    .if_write(msgHash_32_64_256_32_64_sha256_wrapper_U0_kopad2Strm9_write),
    .if_dout(kopad2Strm_dout),
    .if_num_data_valid(kopad2Strm_num_data_valid),
    .if_fifo_cap(kopad2Strm_fifo_cap),
    .if_empty_n(kopad2Strm_empty_n),
    .if_read(resHash_32_64_256_32_64_sha256_wrapper_U0_kopad2Strm9_read)
);

test_hmac_sha256_fifo_w256_d4_D msgHashStrm_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(msgHash_32_64_256_32_64_sha256_wrapper_U0_msgHashStrm10_din),
    .if_full_n(msgHashStrm_full_n),
    .if_write(msgHash_32_64_256_32_64_sha256_wrapper_U0_msgHashStrm10_write),
    .if_dout(msgHashStrm_dout),
    .if_num_data_valid(msgHashStrm_num_data_valid),
    .if_fifo_cap(msgHashStrm_fifo_cap),
    .if_empty_n(msgHashStrm_empty_n),
    .if_read(resHash_32_64_256_32_64_sha256_wrapper_U0_msgHashStrm10_read)
);

test_hmac_sha256_fifo_w1_d4_D_x0 eMsgHashStrm_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(msgHash_32_64_256_32_64_sha256_wrapper_U0_eMsgHashStrm11_din),
    .if_full_n(eMsgHashStrm_full_n),
    .if_write(msgHash_32_64_256_32_64_sha256_wrapper_U0_eMsgHashStrm11_write),
    .if_dout(eMsgHashStrm_dout),
    .if_num_data_valid(eMsgHashStrm_num_data_valid),
    .if_fifo_cap(eMsgHashStrm_fifo_cap),
    .if_empty_n(eMsgHashStrm_empty_n),
    .if_read(resHash_32_64_256_32_64_sha256_wrapper_U0_eMsgHashStrm11_read)
);

test_hmac_sha256_start_for_msgHash_32_64_256_32_64_sha256_wrapper_U0 start_for_msgHash_32_64_256_32_64_sha256_wrapper_U0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_msgHash_32_64_256_32_64_sha256_wrapper_U0_din),
    .if_full_n(start_for_msgHash_32_64_256_32_64_sha256_wrapper_U0_full_n),
    .if_write(kpad_32_64_256_32_64_sha256_wrapper_U0_start_write),
    .if_dout(start_for_msgHash_32_64_256_32_64_sha256_wrapper_U0_dout),
    .if_empty_n(start_for_msgHash_32_64_256_32_64_sha256_wrapper_U0_empty_n),
    .if_read(msgHash_32_64_256_32_64_sha256_wrapper_U0_ap_ready)
);

test_hmac_sha256_start_for_resHash_32_64_256_32_64_sha256_wrapper_U0 start_for_resHash_32_64_256_32_64_sha256_wrapper_U0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_resHash_32_64_256_32_64_sha256_wrapper_U0_din),
    .if_full_n(start_for_resHash_32_64_256_32_64_sha256_wrapper_U0_full_n),
    .if_write(msgHash_32_64_256_32_64_sha256_wrapper_U0_start_write),
    .if_dout(start_for_resHash_32_64_256_32_64_sha256_wrapper_U0_dout),
    .if_empty_n(start_for_resHash_32_64_256_32_64_sha256_wrapper_U0_empty_n),
    .if_read(resHash_32_64_256_32_64_sha256_wrapper_U0_ap_ready)
);

assign ap_done = resHash_32_64_256_32_64_sha256_wrapper_U0_ap_done;

assign ap_idle = (resHash_32_64_256_32_64_sha256_wrapper_U0_ap_idle & msgHash_32_64_256_32_64_sha256_wrapper_U0_ap_idle & kpad_32_64_256_32_64_sha256_wrapper_U0_ap_idle);

assign ap_ready = kpad_32_64_256_32_64_sha256_wrapper_U0_ap_ready;

assign eHshStrm_din = resHash_32_64_256_32_64_sha256_wrapper_U0_eHshStrm_din;

assign eHshStrm_write = resHash_32_64_256_32_64_sha256_wrapper_U0_eHshStrm_write;

assign eLenStrm_read = kpad_32_64_256_32_64_sha256_wrapper_U0_eLenStrm_read;

assign hshStrm_din = resHash_32_64_256_32_64_sha256_wrapper_U0_hshStrm_din;

assign hshStrm_write = resHash_32_64_256_32_64_sha256_wrapper_U0_hshStrm_write;

assign keyStrm_read = kpad_32_64_256_32_64_sha256_wrapper_U0_keyStrm_read;

assign kpad_32_64_256_32_64_sha256_wrapper_U0_ap_continue = 1'b1;

assign kpad_32_64_256_32_64_sha256_wrapper_U0_ap_start = ap_start;

assign lenStrm_read = msgHash_32_64_256_32_64_sha256_wrapper_U0_lenStrm_read;

assign msgHash_32_64_256_32_64_sha256_wrapper_U0_ap_continue = 1'b1;

assign msgHash_32_64_256_32_64_sha256_wrapper_U0_ap_start = start_for_msgHash_32_64_256_32_64_sha256_wrapper_U0_empty_n;

assign msgStrm_read = msgHash_32_64_256_32_64_sha256_wrapper_U0_msgStrm_read;

assign resHash_32_64_256_32_64_sha256_wrapper_U0_ap_continue = ap_continue;

assign resHash_32_64_256_32_64_sha256_wrapper_U0_ap_start = start_for_resHash_32_64_256_32_64_sha256_wrapper_U0_empty_n;

assign start_for_msgHash_32_64_256_32_64_sha256_wrapper_U0_din = 1'b1;

assign start_for_resHash_32_64_256_32_64_sha256_wrapper_U0_din = 1'b1;

endmodule //test_hmac_sha256_hmacDataflow_32_64_256_32_64_sha256_wrapper_s
