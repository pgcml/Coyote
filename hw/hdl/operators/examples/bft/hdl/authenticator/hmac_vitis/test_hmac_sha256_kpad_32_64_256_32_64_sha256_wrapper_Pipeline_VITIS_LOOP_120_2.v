// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module test_hmac_sha256_kpad_32_64_256_32_64_sha256_wrapper_Pipeline_VITIS_LOOP_120_2 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        keyStrm_dout,
        keyStrm_empty_n,
        keyStrm_read,
        kipadStrm7_din,
        kipadStrm7_num_data_valid,
        kipadStrm7_fifo_cap,
        kipadStrm7_full_n,
        kipadStrm7_write,
        kopadStrm8_din,
        kopadStrm8_num_data_valid,
        kopadStrm8_fifo_cap,
        kopadStrm8_full_n,
        kopadStrm8_write,
        eKipadStrm6_din,
        eKipadStrm6_num_data_valid,
        eKipadStrm6_fifo_cap,
        eKipadStrm6_full_n,
        eKipadStrm6_write
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] keyStrm_dout;
input   keyStrm_empty_n;
output   keyStrm_read;
output  [511:0] kipadStrm7_din;
input  [2:0] kipadStrm7_num_data_valid;
input  [2:0] kipadStrm7_fifo_cap;
input   kipadStrm7_full_n;
output   kipadStrm7_write;
output  [511:0] kopadStrm8_din;
input  [2:0] kopadStrm8_num_data_valid;
input  [2:0] kopadStrm8_fifo_cap;
input   kopadStrm8_full_n;
output   kopadStrm8_write;
output  [0:0] eKipadStrm6_din;
input  [2:0] eKipadStrm6_num_data_valid;
input  [2:0] eKipadStrm6_fifo_cap;
input   eKipadStrm6_full_n;
output   eKipadStrm6_write;

reg ap_idle;
reg keyStrm_read;
reg kipadStrm7_write;
reg kopadStrm8_write;
reg eKipadStrm6_write;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
reg    ap_block_state2_pp0_stage0_iter1;
reg   [0:0] icmp_ln120_1_reg_2065;
reg   [0:0] icmp_ln120_1_reg_2065_pp0_iter1_reg;
reg    ap_block_state3_pp0_stage0_iter2;
reg    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln120_fu_357_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    keyStrm_blk_n;
wire    ap_block_pp0_stage0;
reg    kipadStrm7_blk_n;
reg    kopadStrm8_blk_n;
reg    eKipadStrm6_blk_n;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln120_1_fu_369_p2;
reg   [31:0] tmp_V_reg_2069;
reg   [511:0] p_Val2_s_fu_308;
wire   [511:0] empty_fu_2036_p2;
wire    ap_loop_init;
reg   [3:0] i_fu_312;
wire   [3:0] i_9_fu_363_p2;
reg   [3:0] ap_sig_allocacmp_i_8;
reg    ap_block_pp0_stage0_01001;
wire   [7:0] tmp_s_fu_394_p4;
wire   [7:0] tmp_43_fu_416_p4;
wire   [7:0] tmp_44_fu_438_p4;
wire   [7:0] tmp_45_fu_460_p4;
wire   [7:0] tmp_46_fu_482_p4;
wire   [7:0] tmp_47_fu_504_p4;
wire   [7:0] tmp_48_fu_526_p4;
wire   [7:0] tmp_49_fu_548_p4;
wire   [7:0] tmp_50_fu_570_p4;
wire   [7:0] tmp_51_fu_592_p4;
wire   [7:0] tmp_52_fu_614_p4;
wire   [7:0] tmp_53_fu_636_p4;
wire   [7:0] tmp_54_fu_658_p4;
wire   [7:0] tmp_55_fu_680_p4;
wire   [7:0] tmp_56_fu_702_p4;
wire   [7:0] tmp_57_fu_724_p4;
wire   [7:0] tmp_58_fu_746_p4;
wire   [7:0] tmp_59_fu_768_p4;
wire   [7:0] tmp_60_fu_790_p4;
wire   [7:0] tmp_61_fu_812_p4;
wire   [7:0] tmp_62_fu_834_p4;
wire   [7:0] tmp_63_fu_856_p4;
wire   [7:0] tmp_64_fu_878_p4;
wire   [7:0] tmp_65_fu_900_p4;
wire   [7:0] tmp_66_fu_922_p4;
wire   [7:0] tmp_67_fu_944_p4;
wire   [7:0] tmp_68_fu_966_p4;
wire   [7:0] tmp_69_fu_988_p4;
wire   [7:0] tmp_70_fu_1010_p4;
wire   [7:0] tmp_71_fu_1032_p4;
wire   [7:0] tmp_72_fu_1054_p4;
wire   [7:0] trunc_ln674_fu_1076_p1;
wire   [7:0] tmp_34_fu_1091_p4;
wire   [7:0] tmp_35_fu_1112_p4;
wire   [7:0] tmp_36_fu_1133_p4;
wire   [7:0] tmp_73_fu_1154_p4;
wire   [7:0] tmp_74_fu_1176_p4;
wire   [7:0] tmp_75_fu_1198_p4;
wire   [7:0] tmp_76_fu_1220_p4;
wire   [7:0] tmp_77_fu_1242_p4;
wire   [7:0] tmp_78_fu_1264_p4;
wire   [7:0] tmp_79_fu_1286_p4;
wire   [7:0] tmp_80_fu_1308_p4;
wire   [7:0] tmp_81_fu_1330_p4;
wire   [7:0] tmp_82_fu_1352_p4;
wire   [7:0] tmp_83_fu_1374_p4;
wire   [7:0] tmp_84_fu_1396_p4;
wire   [7:0] tmp_85_fu_1418_p4;
wire   [7:0] tmp_86_fu_1440_p4;
wire   [7:0] tmp_87_fu_1462_p4;
wire   [7:0] tmp_88_fu_1484_p4;
wire   [7:0] tmp_89_fu_1506_p4;
wire   [7:0] tmp_90_fu_1528_p4;
wire   [7:0] tmp_91_fu_1550_p4;
wire   [7:0] tmp_92_fu_1572_p4;
wire   [7:0] tmp_93_fu_1594_p4;
wire   [7:0] tmp_94_fu_1616_p4;
wire   [7:0] tmp_95_fu_1638_p4;
wire   [7:0] tmp_96_fu_1660_p4;
wire   [7:0] tmp_97_fu_1682_p4;
wire   [7:0] tmp_98_fu_1704_p4;
wire   [7:0] tmp_99_fu_1726_p4;
wire   [7:0] tmp_100_fu_1748_p4;
wire   [7:0] xor_ln414_124_fu_1758_p2;
wire   [7:0] xor_ln414_122_fu_1736_p2;
wire   [7:0] xor_ln414_120_fu_1714_p2;
wire   [7:0] xor_ln414_118_fu_1692_p2;
wire   [7:0] xor_ln414_116_fu_1670_p2;
wire   [7:0] xor_ln414_114_fu_1648_p2;
wire   [7:0] xor_ln414_112_fu_1626_p2;
wire   [7:0] xor_ln414_110_fu_1604_p2;
wire   [7:0] xor_ln414_108_fu_1582_p2;
wire   [7:0] xor_ln414_106_fu_1560_p2;
wire   [7:0] xor_ln414_104_fu_1538_p2;
wire   [7:0] xor_ln414_102_fu_1516_p2;
wire   [7:0] xor_ln414_100_fu_1494_p2;
wire   [7:0] xor_ln414_98_fu_1472_p2;
wire   [7:0] xor_ln414_96_fu_1450_p2;
wire   [7:0] xor_ln414_94_fu_1428_p2;
wire   [7:0] xor_ln414_92_fu_1406_p2;
wire   [7:0] xor_ln414_90_fu_1384_p2;
wire   [7:0] xor_ln414_88_fu_1362_p2;
wire   [7:0] xor_ln414_86_fu_1340_p2;
wire   [7:0] xor_ln414_84_fu_1318_p2;
wire   [7:0] xor_ln414_82_fu_1296_p2;
wire   [7:0] xor_ln414_80_fu_1274_p2;
wire   [7:0] xor_ln414_78_fu_1252_p2;
wire   [7:0] xor_ln414_76_fu_1230_p2;
wire   [7:0] xor_ln414_74_fu_1208_p2;
wire   [7:0] xor_ln414_72_fu_1186_p2;
wire   [7:0] xor_ln414_70_fu_1164_p2;
wire   [7:0] xor_ln414_68_fu_1142_p2;
wire   [7:0] xor_ln414_66_fu_1121_p2;
wire   [7:0] xor_ln414_64_fu_1100_p2;
wire   [7:0] xor_ln414_62_fu_1079_p2;
wire   [7:0] xor_ln414_60_fu_1064_p2;
wire   [7:0] xor_ln414_58_fu_1042_p2;
wire   [7:0] xor_ln414_56_fu_1020_p2;
wire   [7:0] xor_ln414_54_fu_998_p2;
wire   [7:0] xor_ln414_52_fu_976_p2;
wire   [7:0] xor_ln414_50_fu_954_p2;
wire   [7:0] xor_ln414_48_fu_932_p2;
wire   [7:0] xor_ln414_46_fu_910_p2;
wire   [7:0] xor_ln414_44_fu_888_p2;
wire   [7:0] xor_ln414_42_fu_866_p2;
wire   [7:0] xor_ln414_40_fu_844_p2;
wire   [7:0] xor_ln414_38_fu_822_p2;
wire   [7:0] xor_ln414_36_fu_800_p2;
wire   [7:0] xor_ln414_34_fu_778_p2;
wire   [7:0] xor_ln414_32_fu_756_p2;
wire   [7:0] xor_ln414_30_fu_734_p2;
wire   [7:0] xor_ln414_28_fu_712_p2;
wire   [7:0] xor_ln414_26_fu_690_p2;
wire   [7:0] xor_ln414_24_fu_668_p2;
wire   [7:0] xor_ln414_22_fu_646_p2;
wire   [7:0] xor_ln414_20_fu_624_p2;
wire   [7:0] xor_ln414_18_fu_602_p2;
wire   [7:0] xor_ln414_16_fu_580_p2;
wire   [7:0] xor_ln414_14_fu_558_p2;
wire   [7:0] xor_ln414_12_fu_536_p2;
wire   [7:0] xor_ln414_10_fu_514_p2;
wire   [7:0] xor_ln414_8_fu_492_p2;
wire   [7:0] xor_ln414_6_fu_470_p2;
wire   [7:0] xor_ln414_4_fu_448_p2;
wire   [7:0] xor_ln414_2_fu_426_p2;
wire   [7:0] xor_ln414_fu_404_p2;
wire   [7:0] xor_ln414_125_fu_1897_p2;
wire   [7:0] xor_ln414_123_fu_1742_p2;
wire   [7:0] xor_ln414_121_fu_1720_p2;
wire   [7:0] xor_ln414_119_fu_1698_p2;
wire   [7:0] xor_ln414_117_fu_1676_p2;
wire   [7:0] xor_ln414_115_fu_1654_p2;
wire   [7:0] xor_ln414_113_fu_1632_p2;
wire   [7:0] xor_ln414_111_fu_1610_p2;
wire   [7:0] xor_ln414_109_fu_1588_p2;
wire   [7:0] xor_ln414_107_fu_1566_p2;
wire   [7:0] xor_ln414_105_fu_1544_p2;
wire   [7:0] xor_ln414_103_fu_1522_p2;
wire   [7:0] xor_ln414_101_fu_1500_p2;
wire   [7:0] xor_ln414_99_fu_1478_p2;
wire   [7:0] xor_ln414_97_fu_1456_p2;
wire   [7:0] xor_ln414_95_fu_1434_p2;
wire   [7:0] xor_ln414_93_fu_1412_p2;
wire   [7:0] xor_ln414_91_fu_1390_p2;
wire   [7:0] xor_ln414_89_fu_1368_p2;
wire   [7:0] xor_ln414_87_fu_1346_p2;
wire   [7:0] xor_ln414_85_fu_1324_p2;
wire   [7:0] xor_ln414_83_fu_1302_p2;
wire   [7:0] xor_ln414_81_fu_1280_p2;
wire   [7:0] xor_ln414_79_fu_1258_p2;
wire   [7:0] xor_ln414_77_fu_1236_p2;
wire   [7:0] xor_ln414_75_fu_1214_p2;
wire   [7:0] xor_ln414_73_fu_1192_p2;
wire   [7:0] xor_ln414_71_fu_1170_p2;
wire   [7:0] xor_ln414_69_fu_1148_p2;
wire   [7:0] xor_ln414_67_fu_1127_p2;
wire   [7:0] xor_ln414_65_fu_1106_p2;
wire   [7:0] xor_ln414_63_fu_1085_p2;
wire   [7:0] xor_ln414_61_fu_1070_p2;
wire   [7:0] xor_ln414_59_fu_1048_p2;
wire   [7:0] xor_ln414_57_fu_1026_p2;
wire   [7:0] xor_ln414_55_fu_1004_p2;
wire   [7:0] xor_ln414_53_fu_982_p2;
wire   [7:0] xor_ln414_51_fu_960_p2;
wire   [7:0] xor_ln414_49_fu_938_p2;
wire   [7:0] xor_ln414_47_fu_916_p2;
wire   [7:0] xor_ln414_45_fu_894_p2;
wire   [7:0] xor_ln414_43_fu_872_p2;
wire   [7:0] xor_ln414_41_fu_850_p2;
wire   [7:0] xor_ln414_39_fu_828_p2;
wire   [7:0] xor_ln414_37_fu_806_p2;
wire   [7:0] xor_ln414_35_fu_784_p2;
wire   [7:0] xor_ln414_33_fu_762_p2;
wire   [7:0] xor_ln414_31_fu_740_p2;
wire   [7:0] xor_ln414_29_fu_718_p2;
wire   [7:0] xor_ln414_27_fu_696_p2;
wire   [7:0] xor_ln414_25_fu_674_p2;
wire   [7:0] xor_ln414_23_fu_652_p2;
wire   [7:0] xor_ln414_21_fu_630_p2;
wire   [7:0] xor_ln414_19_fu_608_p2;
wire   [7:0] xor_ln414_17_fu_586_p2;
wire   [7:0] xor_ln414_15_fu_564_p2;
wire   [7:0] xor_ln414_13_fu_542_p2;
wire   [7:0] xor_ln414_11_fu_520_p2;
wire   [7:0] xor_ln414_9_fu_498_p2;
wire   [7:0] xor_ln414_7_fu_476_p2;
wire   [7:0] xor_ln414_5_fu_454_p2;
wire   [7:0] xor_ln414_3_fu_432_p2;
wire   [7:0] xor_ln414_1_fu_410_p2;
wire   [511:0] p_Result_s_fu_383_p5;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_done_reg = 1'b0;
end

test_hmac_sha256_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln120_fu_357_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            i_fu_312 <= i_9_fu_363_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            i_fu_312 <= 4'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
                        p_Val2_s_fu_308[32] <= 1'b0;
            p_Val2_s_fu_308[33] <= 1'b0;
            p_Val2_s_fu_308[34] <= 1'b0;
            p_Val2_s_fu_308[35] <= 1'b0;
            p_Val2_s_fu_308[36] <= 1'b0;
            p_Val2_s_fu_308[37] <= 1'b0;
            p_Val2_s_fu_308[38] <= 1'b0;
            p_Val2_s_fu_308[39] <= 1'b0;
            p_Val2_s_fu_308[40] <= 1'b0;
            p_Val2_s_fu_308[41] <= 1'b0;
            p_Val2_s_fu_308[42] <= 1'b0;
            p_Val2_s_fu_308[43] <= 1'b0;
            p_Val2_s_fu_308[44] <= 1'b0;
            p_Val2_s_fu_308[45] <= 1'b0;
            p_Val2_s_fu_308[46] <= 1'b0;
            p_Val2_s_fu_308[47] <= 1'b0;
            p_Val2_s_fu_308[48] <= 1'b0;
            p_Val2_s_fu_308[49] <= 1'b0;
            p_Val2_s_fu_308[50] <= 1'b0;
            p_Val2_s_fu_308[51] <= 1'b0;
            p_Val2_s_fu_308[52] <= 1'b0;
            p_Val2_s_fu_308[53] <= 1'b0;
            p_Val2_s_fu_308[54] <= 1'b0;
            p_Val2_s_fu_308[55] <= 1'b0;
            p_Val2_s_fu_308[56] <= 1'b0;
            p_Val2_s_fu_308[57] <= 1'b0;
            p_Val2_s_fu_308[58] <= 1'b0;
            p_Val2_s_fu_308[59] <= 1'b0;
            p_Val2_s_fu_308[60] <= 1'b0;
            p_Val2_s_fu_308[61] <= 1'b0;
            p_Val2_s_fu_308[62] <= 1'b0;
            p_Val2_s_fu_308[63] <= 1'b0;
            p_Val2_s_fu_308[64] <= 1'b0;
            p_Val2_s_fu_308[65] <= 1'b0;
            p_Val2_s_fu_308[66] <= 1'b0;
            p_Val2_s_fu_308[67] <= 1'b0;
            p_Val2_s_fu_308[68] <= 1'b0;
            p_Val2_s_fu_308[69] <= 1'b0;
            p_Val2_s_fu_308[70] <= 1'b0;
            p_Val2_s_fu_308[71] <= 1'b0;
            p_Val2_s_fu_308[72] <= 1'b0;
            p_Val2_s_fu_308[73] <= 1'b0;
            p_Val2_s_fu_308[74] <= 1'b0;
            p_Val2_s_fu_308[75] <= 1'b0;
            p_Val2_s_fu_308[76] <= 1'b0;
            p_Val2_s_fu_308[77] <= 1'b0;
            p_Val2_s_fu_308[78] <= 1'b0;
            p_Val2_s_fu_308[79] <= 1'b0;
            p_Val2_s_fu_308[80] <= 1'b0;
            p_Val2_s_fu_308[81] <= 1'b0;
            p_Val2_s_fu_308[82] <= 1'b0;
            p_Val2_s_fu_308[83] <= 1'b0;
            p_Val2_s_fu_308[84] <= 1'b0;
            p_Val2_s_fu_308[85] <= 1'b0;
            p_Val2_s_fu_308[86] <= 1'b0;
            p_Val2_s_fu_308[87] <= 1'b0;
            p_Val2_s_fu_308[88] <= 1'b0;
            p_Val2_s_fu_308[89] <= 1'b0;
            p_Val2_s_fu_308[90] <= 1'b0;
            p_Val2_s_fu_308[91] <= 1'b0;
            p_Val2_s_fu_308[92] <= 1'b0;
            p_Val2_s_fu_308[93] <= 1'b0;
            p_Val2_s_fu_308[94] <= 1'b0;
            p_Val2_s_fu_308[95] <= 1'b0;
            p_Val2_s_fu_308[96] <= 1'b0;
            p_Val2_s_fu_308[97] <= 1'b0;
            p_Val2_s_fu_308[98] <= 1'b0;
            p_Val2_s_fu_308[99] <= 1'b0;
            p_Val2_s_fu_308[100] <= 1'b0;
            p_Val2_s_fu_308[101] <= 1'b0;
            p_Val2_s_fu_308[102] <= 1'b0;
            p_Val2_s_fu_308[103] <= 1'b0;
            p_Val2_s_fu_308[104] <= 1'b0;
            p_Val2_s_fu_308[105] <= 1'b0;
            p_Val2_s_fu_308[106] <= 1'b0;
            p_Val2_s_fu_308[107] <= 1'b0;
            p_Val2_s_fu_308[108] <= 1'b0;
            p_Val2_s_fu_308[109] <= 1'b0;
            p_Val2_s_fu_308[110] <= 1'b0;
            p_Val2_s_fu_308[111] <= 1'b0;
            p_Val2_s_fu_308[112] <= 1'b0;
            p_Val2_s_fu_308[113] <= 1'b0;
            p_Val2_s_fu_308[114] <= 1'b0;
            p_Val2_s_fu_308[115] <= 1'b0;
            p_Val2_s_fu_308[116] <= 1'b0;
            p_Val2_s_fu_308[117] <= 1'b0;
            p_Val2_s_fu_308[118] <= 1'b0;
            p_Val2_s_fu_308[119] <= 1'b0;
            p_Val2_s_fu_308[120] <= 1'b0;
            p_Val2_s_fu_308[121] <= 1'b0;
            p_Val2_s_fu_308[122] <= 1'b0;
            p_Val2_s_fu_308[123] <= 1'b0;
            p_Val2_s_fu_308[124] <= 1'b0;
            p_Val2_s_fu_308[125] <= 1'b0;
            p_Val2_s_fu_308[126] <= 1'b0;
            p_Val2_s_fu_308[127] <= 1'b0;
            p_Val2_s_fu_308[128] <= 1'b0;
            p_Val2_s_fu_308[129] <= 1'b0;
            p_Val2_s_fu_308[130] <= 1'b0;
            p_Val2_s_fu_308[131] <= 1'b0;
            p_Val2_s_fu_308[132] <= 1'b0;
            p_Val2_s_fu_308[133] <= 1'b0;
            p_Val2_s_fu_308[134] <= 1'b0;
            p_Val2_s_fu_308[135] <= 1'b0;
            p_Val2_s_fu_308[136] <= 1'b0;
            p_Val2_s_fu_308[137] <= 1'b0;
            p_Val2_s_fu_308[138] <= 1'b0;
            p_Val2_s_fu_308[139] <= 1'b0;
            p_Val2_s_fu_308[140] <= 1'b0;
            p_Val2_s_fu_308[141] <= 1'b0;
            p_Val2_s_fu_308[142] <= 1'b0;
            p_Val2_s_fu_308[143] <= 1'b0;
            p_Val2_s_fu_308[144] <= 1'b0;
            p_Val2_s_fu_308[145] <= 1'b0;
            p_Val2_s_fu_308[146] <= 1'b0;
            p_Val2_s_fu_308[147] <= 1'b0;
            p_Val2_s_fu_308[148] <= 1'b0;
            p_Val2_s_fu_308[149] <= 1'b0;
            p_Val2_s_fu_308[150] <= 1'b0;
            p_Val2_s_fu_308[151] <= 1'b0;
            p_Val2_s_fu_308[152] <= 1'b0;
            p_Val2_s_fu_308[153] <= 1'b0;
            p_Val2_s_fu_308[154] <= 1'b0;
            p_Val2_s_fu_308[155] <= 1'b0;
            p_Val2_s_fu_308[156] <= 1'b0;
            p_Val2_s_fu_308[157] <= 1'b0;
            p_Val2_s_fu_308[158] <= 1'b0;
            p_Val2_s_fu_308[159] <= 1'b0;
            p_Val2_s_fu_308[160] <= 1'b0;
            p_Val2_s_fu_308[161] <= 1'b0;
            p_Val2_s_fu_308[162] <= 1'b0;
            p_Val2_s_fu_308[163] <= 1'b0;
            p_Val2_s_fu_308[164] <= 1'b0;
            p_Val2_s_fu_308[165] <= 1'b0;
            p_Val2_s_fu_308[166] <= 1'b0;
            p_Val2_s_fu_308[167] <= 1'b0;
            p_Val2_s_fu_308[168] <= 1'b0;
            p_Val2_s_fu_308[169] <= 1'b0;
            p_Val2_s_fu_308[170] <= 1'b0;
            p_Val2_s_fu_308[171] <= 1'b0;
            p_Val2_s_fu_308[172] <= 1'b0;
            p_Val2_s_fu_308[173] <= 1'b0;
            p_Val2_s_fu_308[174] <= 1'b0;
            p_Val2_s_fu_308[175] <= 1'b0;
            p_Val2_s_fu_308[176] <= 1'b0;
            p_Val2_s_fu_308[177] <= 1'b0;
            p_Val2_s_fu_308[178] <= 1'b0;
            p_Val2_s_fu_308[179] <= 1'b0;
            p_Val2_s_fu_308[180] <= 1'b0;
            p_Val2_s_fu_308[181] <= 1'b0;
            p_Val2_s_fu_308[182] <= 1'b0;
            p_Val2_s_fu_308[183] <= 1'b0;
            p_Val2_s_fu_308[184] <= 1'b0;
            p_Val2_s_fu_308[185] <= 1'b0;
            p_Val2_s_fu_308[186] <= 1'b0;
            p_Val2_s_fu_308[187] <= 1'b0;
            p_Val2_s_fu_308[188] <= 1'b0;
            p_Val2_s_fu_308[189] <= 1'b0;
            p_Val2_s_fu_308[190] <= 1'b0;
            p_Val2_s_fu_308[191] <= 1'b0;
            p_Val2_s_fu_308[192] <= 1'b0;
            p_Val2_s_fu_308[193] <= 1'b0;
            p_Val2_s_fu_308[194] <= 1'b0;
            p_Val2_s_fu_308[195] <= 1'b0;
            p_Val2_s_fu_308[196] <= 1'b0;
            p_Val2_s_fu_308[197] <= 1'b0;
            p_Val2_s_fu_308[198] <= 1'b0;
            p_Val2_s_fu_308[199] <= 1'b0;
            p_Val2_s_fu_308[200] <= 1'b0;
            p_Val2_s_fu_308[201] <= 1'b0;
            p_Val2_s_fu_308[202] <= 1'b0;
            p_Val2_s_fu_308[203] <= 1'b0;
            p_Val2_s_fu_308[204] <= 1'b0;
            p_Val2_s_fu_308[205] <= 1'b0;
            p_Val2_s_fu_308[206] <= 1'b0;
            p_Val2_s_fu_308[207] <= 1'b0;
            p_Val2_s_fu_308[208] <= 1'b0;
            p_Val2_s_fu_308[209] <= 1'b0;
            p_Val2_s_fu_308[210] <= 1'b0;
            p_Val2_s_fu_308[211] <= 1'b0;
            p_Val2_s_fu_308[212] <= 1'b0;
            p_Val2_s_fu_308[213] <= 1'b0;
            p_Val2_s_fu_308[214] <= 1'b0;
            p_Val2_s_fu_308[215] <= 1'b0;
            p_Val2_s_fu_308[216] <= 1'b0;
            p_Val2_s_fu_308[217] <= 1'b0;
            p_Val2_s_fu_308[218] <= 1'b0;
            p_Val2_s_fu_308[219] <= 1'b0;
            p_Val2_s_fu_308[220] <= 1'b0;
            p_Val2_s_fu_308[221] <= 1'b0;
            p_Val2_s_fu_308[222] <= 1'b0;
            p_Val2_s_fu_308[223] <= 1'b0;
            p_Val2_s_fu_308[224] <= 1'b0;
            p_Val2_s_fu_308[225] <= 1'b0;
            p_Val2_s_fu_308[226] <= 1'b0;
            p_Val2_s_fu_308[227] <= 1'b0;
            p_Val2_s_fu_308[228] <= 1'b0;
            p_Val2_s_fu_308[229] <= 1'b0;
            p_Val2_s_fu_308[230] <= 1'b0;
            p_Val2_s_fu_308[231] <= 1'b0;
            p_Val2_s_fu_308[232] <= 1'b0;
            p_Val2_s_fu_308[233] <= 1'b0;
            p_Val2_s_fu_308[234] <= 1'b0;
            p_Val2_s_fu_308[235] <= 1'b0;
            p_Val2_s_fu_308[236] <= 1'b0;
            p_Val2_s_fu_308[237] <= 1'b0;
            p_Val2_s_fu_308[238] <= 1'b0;
            p_Val2_s_fu_308[239] <= 1'b0;
            p_Val2_s_fu_308[240] <= 1'b0;
            p_Val2_s_fu_308[241] <= 1'b0;
            p_Val2_s_fu_308[242] <= 1'b0;
            p_Val2_s_fu_308[243] <= 1'b0;
            p_Val2_s_fu_308[244] <= 1'b0;
            p_Val2_s_fu_308[245] <= 1'b0;
            p_Val2_s_fu_308[246] <= 1'b0;
            p_Val2_s_fu_308[247] <= 1'b0;
            p_Val2_s_fu_308[248] <= 1'b0;
            p_Val2_s_fu_308[249] <= 1'b0;
            p_Val2_s_fu_308[250] <= 1'b0;
            p_Val2_s_fu_308[251] <= 1'b0;
            p_Val2_s_fu_308[252] <= 1'b0;
            p_Val2_s_fu_308[253] <= 1'b0;
            p_Val2_s_fu_308[254] <= 1'b0;
            p_Val2_s_fu_308[255] <= 1'b0;
            p_Val2_s_fu_308[256] <= 1'b0;
            p_Val2_s_fu_308[257] <= 1'b0;
            p_Val2_s_fu_308[258] <= 1'b0;
            p_Val2_s_fu_308[259] <= 1'b0;
            p_Val2_s_fu_308[260] <= 1'b0;
            p_Val2_s_fu_308[261] <= 1'b0;
            p_Val2_s_fu_308[262] <= 1'b0;
            p_Val2_s_fu_308[263] <= 1'b0;
            p_Val2_s_fu_308[264] <= 1'b0;
            p_Val2_s_fu_308[265] <= 1'b0;
            p_Val2_s_fu_308[266] <= 1'b0;
            p_Val2_s_fu_308[267] <= 1'b0;
            p_Val2_s_fu_308[268] <= 1'b0;
            p_Val2_s_fu_308[269] <= 1'b0;
            p_Val2_s_fu_308[270] <= 1'b0;
            p_Val2_s_fu_308[271] <= 1'b0;
            p_Val2_s_fu_308[272] <= 1'b0;
            p_Val2_s_fu_308[273] <= 1'b0;
            p_Val2_s_fu_308[274] <= 1'b0;
            p_Val2_s_fu_308[275] <= 1'b0;
            p_Val2_s_fu_308[276] <= 1'b0;
            p_Val2_s_fu_308[277] <= 1'b0;
            p_Val2_s_fu_308[278] <= 1'b0;
            p_Val2_s_fu_308[279] <= 1'b0;
            p_Val2_s_fu_308[280] <= 1'b0;
            p_Val2_s_fu_308[281] <= 1'b0;
            p_Val2_s_fu_308[282] <= 1'b0;
            p_Val2_s_fu_308[283] <= 1'b0;
            p_Val2_s_fu_308[284] <= 1'b0;
            p_Val2_s_fu_308[285] <= 1'b0;
            p_Val2_s_fu_308[286] <= 1'b0;
            p_Val2_s_fu_308[287] <= 1'b0;
            p_Val2_s_fu_308[288] <= 1'b0;
            p_Val2_s_fu_308[289] <= 1'b0;
            p_Val2_s_fu_308[290] <= 1'b0;
            p_Val2_s_fu_308[291] <= 1'b0;
            p_Val2_s_fu_308[292] <= 1'b0;
            p_Val2_s_fu_308[293] <= 1'b0;
            p_Val2_s_fu_308[294] <= 1'b0;
            p_Val2_s_fu_308[295] <= 1'b0;
            p_Val2_s_fu_308[296] <= 1'b0;
            p_Val2_s_fu_308[297] <= 1'b0;
            p_Val2_s_fu_308[298] <= 1'b0;
            p_Val2_s_fu_308[299] <= 1'b0;
            p_Val2_s_fu_308[300] <= 1'b0;
            p_Val2_s_fu_308[301] <= 1'b0;
            p_Val2_s_fu_308[302] <= 1'b0;
            p_Val2_s_fu_308[303] <= 1'b0;
            p_Val2_s_fu_308[304] <= 1'b0;
            p_Val2_s_fu_308[305] <= 1'b0;
            p_Val2_s_fu_308[306] <= 1'b0;
            p_Val2_s_fu_308[307] <= 1'b0;
            p_Val2_s_fu_308[308] <= 1'b0;
            p_Val2_s_fu_308[309] <= 1'b0;
            p_Val2_s_fu_308[310] <= 1'b0;
            p_Val2_s_fu_308[311] <= 1'b0;
            p_Val2_s_fu_308[312] <= 1'b0;
            p_Val2_s_fu_308[313] <= 1'b0;
            p_Val2_s_fu_308[314] <= 1'b0;
            p_Val2_s_fu_308[315] <= 1'b0;
            p_Val2_s_fu_308[316] <= 1'b0;
            p_Val2_s_fu_308[317] <= 1'b0;
            p_Val2_s_fu_308[318] <= 1'b0;
            p_Val2_s_fu_308[319] <= 1'b0;
            p_Val2_s_fu_308[320] <= 1'b0;
            p_Val2_s_fu_308[321] <= 1'b0;
            p_Val2_s_fu_308[322] <= 1'b0;
            p_Val2_s_fu_308[323] <= 1'b0;
            p_Val2_s_fu_308[324] <= 1'b0;
            p_Val2_s_fu_308[325] <= 1'b0;
            p_Val2_s_fu_308[326] <= 1'b0;
            p_Val2_s_fu_308[327] <= 1'b0;
            p_Val2_s_fu_308[328] <= 1'b0;
            p_Val2_s_fu_308[329] <= 1'b0;
            p_Val2_s_fu_308[330] <= 1'b0;
            p_Val2_s_fu_308[331] <= 1'b0;
            p_Val2_s_fu_308[332] <= 1'b0;
            p_Val2_s_fu_308[333] <= 1'b0;
            p_Val2_s_fu_308[334] <= 1'b0;
            p_Val2_s_fu_308[335] <= 1'b0;
            p_Val2_s_fu_308[336] <= 1'b0;
            p_Val2_s_fu_308[337] <= 1'b0;
            p_Val2_s_fu_308[338] <= 1'b0;
            p_Val2_s_fu_308[339] <= 1'b0;
            p_Val2_s_fu_308[340] <= 1'b0;
            p_Val2_s_fu_308[341] <= 1'b0;
            p_Val2_s_fu_308[342] <= 1'b0;
            p_Val2_s_fu_308[343] <= 1'b0;
            p_Val2_s_fu_308[344] <= 1'b0;
            p_Val2_s_fu_308[345] <= 1'b0;
            p_Val2_s_fu_308[346] <= 1'b0;
            p_Val2_s_fu_308[347] <= 1'b0;
            p_Val2_s_fu_308[348] <= 1'b0;
            p_Val2_s_fu_308[349] <= 1'b0;
            p_Val2_s_fu_308[350] <= 1'b0;
            p_Val2_s_fu_308[351] <= 1'b0;
            p_Val2_s_fu_308[352] <= 1'b0;
            p_Val2_s_fu_308[353] <= 1'b0;
            p_Val2_s_fu_308[354] <= 1'b0;
            p_Val2_s_fu_308[355] <= 1'b0;
            p_Val2_s_fu_308[356] <= 1'b0;
            p_Val2_s_fu_308[357] <= 1'b0;
            p_Val2_s_fu_308[358] <= 1'b0;
            p_Val2_s_fu_308[359] <= 1'b0;
            p_Val2_s_fu_308[360] <= 1'b0;
            p_Val2_s_fu_308[361] <= 1'b0;
            p_Val2_s_fu_308[362] <= 1'b0;
            p_Val2_s_fu_308[363] <= 1'b0;
            p_Val2_s_fu_308[364] <= 1'b0;
            p_Val2_s_fu_308[365] <= 1'b0;
            p_Val2_s_fu_308[366] <= 1'b0;
            p_Val2_s_fu_308[367] <= 1'b0;
            p_Val2_s_fu_308[368] <= 1'b0;
            p_Val2_s_fu_308[369] <= 1'b0;
            p_Val2_s_fu_308[370] <= 1'b0;
            p_Val2_s_fu_308[371] <= 1'b0;
            p_Val2_s_fu_308[372] <= 1'b0;
            p_Val2_s_fu_308[373] <= 1'b0;
            p_Val2_s_fu_308[374] <= 1'b0;
            p_Val2_s_fu_308[375] <= 1'b0;
            p_Val2_s_fu_308[376] <= 1'b0;
            p_Val2_s_fu_308[377] <= 1'b0;
            p_Val2_s_fu_308[378] <= 1'b0;
            p_Val2_s_fu_308[379] <= 1'b0;
            p_Val2_s_fu_308[380] <= 1'b0;
            p_Val2_s_fu_308[381] <= 1'b0;
            p_Val2_s_fu_308[382] <= 1'b0;
            p_Val2_s_fu_308[383] <= 1'b0;
            p_Val2_s_fu_308[384] <= 1'b0;
            p_Val2_s_fu_308[385] <= 1'b0;
            p_Val2_s_fu_308[386] <= 1'b0;
            p_Val2_s_fu_308[387] <= 1'b0;
            p_Val2_s_fu_308[388] <= 1'b0;
            p_Val2_s_fu_308[389] <= 1'b0;
            p_Val2_s_fu_308[390] <= 1'b0;
            p_Val2_s_fu_308[391] <= 1'b0;
            p_Val2_s_fu_308[392] <= 1'b0;
            p_Val2_s_fu_308[393] <= 1'b0;
            p_Val2_s_fu_308[394] <= 1'b0;
            p_Val2_s_fu_308[395] <= 1'b0;
            p_Val2_s_fu_308[396] <= 1'b0;
            p_Val2_s_fu_308[397] <= 1'b0;
            p_Val2_s_fu_308[398] <= 1'b0;
            p_Val2_s_fu_308[399] <= 1'b0;
            p_Val2_s_fu_308[400] <= 1'b0;
            p_Val2_s_fu_308[401] <= 1'b0;
            p_Val2_s_fu_308[402] <= 1'b0;
            p_Val2_s_fu_308[403] <= 1'b0;
            p_Val2_s_fu_308[404] <= 1'b0;
            p_Val2_s_fu_308[405] <= 1'b0;
            p_Val2_s_fu_308[406] <= 1'b0;
            p_Val2_s_fu_308[407] <= 1'b0;
            p_Val2_s_fu_308[408] <= 1'b0;
            p_Val2_s_fu_308[409] <= 1'b0;
            p_Val2_s_fu_308[410] <= 1'b0;
            p_Val2_s_fu_308[411] <= 1'b0;
            p_Val2_s_fu_308[412] <= 1'b0;
            p_Val2_s_fu_308[413] <= 1'b0;
            p_Val2_s_fu_308[414] <= 1'b0;
            p_Val2_s_fu_308[415] <= 1'b0;
            p_Val2_s_fu_308[416] <= 1'b0;
            p_Val2_s_fu_308[417] <= 1'b0;
            p_Val2_s_fu_308[418] <= 1'b0;
            p_Val2_s_fu_308[419] <= 1'b0;
            p_Val2_s_fu_308[420] <= 1'b0;
            p_Val2_s_fu_308[421] <= 1'b0;
            p_Val2_s_fu_308[422] <= 1'b0;
            p_Val2_s_fu_308[423] <= 1'b0;
            p_Val2_s_fu_308[424] <= 1'b0;
            p_Val2_s_fu_308[425] <= 1'b0;
            p_Val2_s_fu_308[426] <= 1'b0;
            p_Val2_s_fu_308[427] <= 1'b0;
            p_Val2_s_fu_308[428] <= 1'b0;
            p_Val2_s_fu_308[429] <= 1'b0;
            p_Val2_s_fu_308[430] <= 1'b0;
            p_Val2_s_fu_308[431] <= 1'b0;
            p_Val2_s_fu_308[432] <= 1'b0;
            p_Val2_s_fu_308[433] <= 1'b0;
            p_Val2_s_fu_308[434] <= 1'b0;
            p_Val2_s_fu_308[435] <= 1'b0;
            p_Val2_s_fu_308[436] <= 1'b0;
            p_Val2_s_fu_308[437] <= 1'b0;
            p_Val2_s_fu_308[438] <= 1'b0;
            p_Val2_s_fu_308[439] <= 1'b0;
            p_Val2_s_fu_308[440] <= 1'b0;
            p_Val2_s_fu_308[441] <= 1'b0;
            p_Val2_s_fu_308[442] <= 1'b0;
            p_Val2_s_fu_308[443] <= 1'b0;
            p_Val2_s_fu_308[444] <= 1'b0;
            p_Val2_s_fu_308[445] <= 1'b0;
            p_Val2_s_fu_308[446] <= 1'b0;
            p_Val2_s_fu_308[447] <= 1'b0;
            p_Val2_s_fu_308[448] <= 1'b0;
            p_Val2_s_fu_308[449] <= 1'b0;
            p_Val2_s_fu_308[450] <= 1'b0;
            p_Val2_s_fu_308[451] <= 1'b0;
            p_Val2_s_fu_308[452] <= 1'b0;
            p_Val2_s_fu_308[453] <= 1'b0;
            p_Val2_s_fu_308[454] <= 1'b0;
            p_Val2_s_fu_308[455] <= 1'b0;
            p_Val2_s_fu_308[456] <= 1'b0;
            p_Val2_s_fu_308[457] <= 1'b0;
            p_Val2_s_fu_308[458] <= 1'b0;
            p_Val2_s_fu_308[459] <= 1'b0;
            p_Val2_s_fu_308[460] <= 1'b0;
            p_Val2_s_fu_308[461] <= 1'b0;
            p_Val2_s_fu_308[462] <= 1'b0;
            p_Val2_s_fu_308[463] <= 1'b0;
            p_Val2_s_fu_308[464] <= 1'b0;
            p_Val2_s_fu_308[465] <= 1'b0;
            p_Val2_s_fu_308[466] <= 1'b0;
            p_Val2_s_fu_308[467] <= 1'b0;
            p_Val2_s_fu_308[468] <= 1'b0;
            p_Val2_s_fu_308[469] <= 1'b0;
            p_Val2_s_fu_308[470] <= 1'b0;
            p_Val2_s_fu_308[471] <= 1'b0;
            p_Val2_s_fu_308[472] <= 1'b0;
            p_Val2_s_fu_308[473] <= 1'b0;
            p_Val2_s_fu_308[474] <= 1'b0;
            p_Val2_s_fu_308[475] <= 1'b0;
            p_Val2_s_fu_308[476] <= 1'b0;
            p_Val2_s_fu_308[477] <= 1'b0;
            p_Val2_s_fu_308[478] <= 1'b0;
            p_Val2_s_fu_308[479] <= 1'b0;
            p_Val2_s_fu_308[480] <= 1'b0;
            p_Val2_s_fu_308[481] <= 1'b0;
            p_Val2_s_fu_308[482] <= 1'b0;
            p_Val2_s_fu_308[483] <= 1'b0;
            p_Val2_s_fu_308[484] <= 1'b0;
            p_Val2_s_fu_308[485] <= 1'b0;
            p_Val2_s_fu_308[486] <= 1'b0;
            p_Val2_s_fu_308[487] <= 1'b0;
            p_Val2_s_fu_308[488] <= 1'b0;
            p_Val2_s_fu_308[489] <= 1'b0;
            p_Val2_s_fu_308[490] <= 1'b0;
            p_Val2_s_fu_308[491] <= 1'b0;
            p_Val2_s_fu_308[492] <= 1'b0;
            p_Val2_s_fu_308[493] <= 1'b0;
            p_Val2_s_fu_308[494] <= 1'b0;
            p_Val2_s_fu_308[495] <= 1'b0;
            p_Val2_s_fu_308[496] <= 1'b0;
            p_Val2_s_fu_308[497] <= 1'b0;
            p_Val2_s_fu_308[498] <= 1'b0;
            p_Val2_s_fu_308[499] <= 1'b0;
            p_Val2_s_fu_308[500] <= 1'b0;
            p_Val2_s_fu_308[501] <= 1'b0;
            p_Val2_s_fu_308[502] <= 1'b0;
            p_Val2_s_fu_308[503] <= 1'b0;
            p_Val2_s_fu_308[504] <= 1'b0;
            p_Val2_s_fu_308[505] <= 1'b0;
            p_Val2_s_fu_308[506] <= 1'b0;
            p_Val2_s_fu_308[507] <= 1'b0;
            p_Val2_s_fu_308[508] <= 1'b0;
            p_Val2_s_fu_308[509] <= 1'b0;
            p_Val2_s_fu_308[510] <= 1'b0;
            p_Val2_s_fu_308[511] <= 1'b0;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
                        p_Val2_s_fu_308[511 : 32] <= empty_fu_2036_p2[511 : 32];
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        icmp_ln120_1_reg_2065_pp0_iter1_reg <= icmp_ln120_1_reg_2065;
        tmp_V_reg_2069 <= keyStrm_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln120_fu_357_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln120_1_reg_2065 <= icmp_ln120_1_fu_369_p2;
    end
end

always @ (*) begin
    if (((icmp_ln120_fu_357_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start_int == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_i_8 = 4'd0;
    end else begin
        ap_sig_allocacmp_i_8 = i_fu_312;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (icmp_ln120_1_reg_2065_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        eKipadStrm6_blk_n = eKipadStrm6_full_n;
    end else begin
        eKipadStrm6_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln120_1_reg_2065_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        eKipadStrm6_write = 1'b1;
    end else begin
        eKipadStrm6_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        keyStrm_blk_n = keyStrm_empty_n;
    end else begin
        keyStrm_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        keyStrm_read = 1'b1;
    end else begin
        keyStrm_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (icmp_ln120_1_reg_2065_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        kipadStrm7_blk_n = kipadStrm7_full_n;
    end else begin
        kipadStrm7_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln120_1_reg_2065_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        kipadStrm7_write = 1'b1;
    end else begin
        kipadStrm7_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (icmp_ln120_1_reg_2065_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        kopadStrm8_blk_n = kopadStrm8_full_n;
    end else begin
        kopadStrm8_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln120_1_reg_2065_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        kopadStrm8_write = 1'b1;
    end else begin
        kopadStrm8_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((ap_enable_reg_pp0_iter2 == 1'b1) & (((eKipadStrm6_full_n == 1'b0) & (icmp_ln120_1_reg_2065_pp0_iter1_reg == 1'd1)) | ((kopadStrm8_full_n == 1'b0) & (icmp_ln120_1_reg_2065_pp0_iter1_reg == 1'd1)) | ((icmp_ln120_1_reg_2065_pp0_iter1_reg == 1'd1) & (kipadStrm7_full_n == 1'b0)))) | ((keyStrm_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((ap_enable_reg_pp0_iter2 == 1'b1) & (((eKipadStrm6_full_n == 1'b0) & (icmp_ln120_1_reg_2065_pp0_iter1_reg == 1'd1)) | ((kopadStrm8_full_n == 1'b0) & (icmp_ln120_1_reg_2065_pp0_iter1_reg == 1'd1)) | ((icmp_ln120_1_reg_2065_pp0_iter1_reg == 1'd1) & (kipadStrm7_full_n == 1'b0)))) | ((keyStrm_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((ap_enable_reg_pp0_iter2 == 1'b1) & (((eKipadStrm6_full_n == 1'b0) & (icmp_ln120_1_reg_2065_pp0_iter1_reg == 1'd1)) | ((kopadStrm8_full_n == 1'b0) & (icmp_ln120_1_reg_2065_pp0_iter1_reg == 1'd1)) | ((icmp_ln120_1_reg_2065_pp0_iter1_reg == 1'd1) & (kipadStrm7_full_n == 1'b0)))) | ((keyStrm_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state2_pp0_stage0_iter1 = (keyStrm_empty_n == 1'b0);
end

always @ (*) begin
    ap_block_state3_pp0_stage0_iter2 = (((eKipadStrm6_full_n == 1'b0) & (icmp_ln120_1_reg_2065_pp0_iter1_reg == 1'd1)) | ((kopadStrm8_full_n == 1'b0) & (icmp_ln120_1_reg_2065_pp0_iter1_reg == 1'd1)) | ((icmp_ln120_1_reg_2065_pp0_iter1_reg == 1'd1) & (kipadStrm7_full_n == 1'b0)));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign eKipadStrm6_din = 1'd0;

assign empty_fu_2036_p2 = p_Result_s_fu_383_p5 << 512'd32;

assign i_9_fu_363_p2 = (ap_sig_allocacmp_i_8 + 4'd1);

assign icmp_ln120_1_fu_369_p2 = ((i_9_fu_363_p2 == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln120_fu_357_p2 = ((ap_sig_allocacmp_i_8 == 4'd8) ? 1'b1 : 1'b0);

assign kipadStrm7_din = {{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{xor_ln414_124_fu_1758_p2}, {xor_ln414_122_fu_1736_p2}}, {xor_ln414_120_fu_1714_p2}}, {xor_ln414_118_fu_1692_p2}}, {xor_ln414_116_fu_1670_p2}}, {xor_ln414_114_fu_1648_p2}}, {xor_ln414_112_fu_1626_p2}}, {xor_ln414_110_fu_1604_p2}}, {xor_ln414_108_fu_1582_p2}}, {xor_ln414_106_fu_1560_p2}}, {xor_ln414_104_fu_1538_p2}}, {xor_ln414_102_fu_1516_p2}}, {xor_ln414_100_fu_1494_p2}}, {xor_ln414_98_fu_1472_p2}}, {xor_ln414_96_fu_1450_p2}}, {xor_ln414_94_fu_1428_p2}}, {xor_ln414_92_fu_1406_p2}}, {xor_ln414_90_fu_1384_p2}}, {xor_ln414_88_fu_1362_p2}}, {xor_ln414_86_fu_1340_p2}}, {xor_ln414_84_fu_1318_p2}}, {xor_ln414_82_fu_1296_p2}}, {xor_ln414_80_fu_1274_p2}}, {xor_ln414_78_fu_1252_p2}}, {xor_ln414_76_fu_1230_p2}}, {xor_ln414_74_fu_1208_p2}}, {xor_ln414_72_fu_1186_p2}}, {xor_ln414_70_fu_1164_p2}}, {xor_ln414_68_fu_1142_p2}}, {xor_ln414_66_fu_1121_p2}}, {xor_ln414_64_fu_1100_p2}}, {xor_ln414_62_fu_1079_p2}}, {xor_ln414_60_fu_1064_p2}}, {xor_ln414_58_fu_1042_p2}}, {xor_ln414_56_fu_1020_p2}}, {xor_ln414_54_fu_998_p2}}, {xor_ln414_52_fu_976_p2}}, {xor_ln414_50_fu_954_p2}}, {xor_ln414_48_fu_932_p2}}, {xor_ln414_46_fu_910_p2}}, {xor_ln414_44_fu_888_p2}}, {xor_ln414_42_fu_866_p2}}, {xor_ln414_40_fu_844_p2}}, {xor_ln414_38_fu_822_p2}}, {xor_ln414_36_fu_800_p2}}, {xor_ln414_34_fu_778_p2}}, {xor_ln414_32_fu_756_p2}}, {xor_ln414_30_fu_734_p2}}, {xor_ln414_28_fu_712_p2}}, {xor_ln414_26_fu_690_p2}}, {xor_ln414_24_fu_668_p2}}, {xor_ln414_22_fu_646_p2}}, {xor_ln414_20_fu_624_p2}}, {xor_ln414_18_fu_602_p2}}, {xor_ln414_16_fu_580_p2}}, {xor_ln414_14_fu_558_p2}}, {xor_ln414_12_fu_536_p2}}, {xor_ln414_10_fu_514_p2}}, {xor_ln414_8_fu_492_p2}}, {xor_ln414_6_fu_470_p2}}, {xor_ln414_4_fu_448_p2}}, {xor_ln414_2_fu_426_p2}}, {xor_ln414_fu_404_p2}}, {8'd54}};

assign kopadStrm8_din = {{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{xor_ln414_125_fu_1897_p2}, {xor_ln414_123_fu_1742_p2}}, {xor_ln414_121_fu_1720_p2}}, {xor_ln414_119_fu_1698_p2}}, {xor_ln414_117_fu_1676_p2}}, {xor_ln414_115_fu_1654_p2}}, {xor_ln414_113_fu_1632_p2}}, {xor_ln414_111_fu_1610_p2}}, {xor_ln414_109_fu_1588_p2}}, {xor_ln414_107_fu_1566_p2}}, {xor_ln414_105_fu_1544_p2}}, {xor_ln414_103_fu_1522_p2}}, {xor_ln414_101_fu_1500_p2}}, {xor_ln414_99_fu_1478_p2}}, {xor_ln414_97_fu_1456_p2}}, {xor_ln414_95_fu_1434_p2}}, {xor_ln414_93_fu_1412_p2}}, {xor_ln414_91_fu_1390_p2}}, {xor_ln414_89_fu_1368_p2}}, {xor_ln414_87_fu_1346_p2}}, {xor_ln414_85_fu_1324_p2}}, {xor_ln414_83_fu_1302_p2}}, {xor_ln414_81_fu_1280_p2}}, {xor_ln414_79_fu_1258_p2}}, {xor_ln414_77_fu_1236_p2}}, {xor_ln414_75_fu_1214_p2}}, {xor_ln414_73_fu_1192_p2}}, {xor_ln414_71_fu_1170_p2}}, {xor_ln414_69_fu_1148_p2}}, {xor_ln414_67_fu_1127_p2}}, {xor_ln414_65_fu_1106_p2}}, {xor_ln414_63_fu_1085_p2}}, {xor_ln414_61_fu_1070_p2}}, {xor_ln414_59_fu_1048_p2}}, {xor_ln414_57_fu_1026_p2}}, {xor_ln414_55_fu_1004_p2}}, {xor_ln414_53_fu_982_p2}}, {xor_ln414_51_fu_960_p2}}, {xor_ln414_49_fu_938_p2}}, {xor_ln414_47_fu_916_p2}}, {xor_ln414_45_fu_894_p2}}, {xor_ln414_43_fu_872_p2}}, {xor_ln414_41_fu_850_p2}}, {xor_ln414_39_fu_828_p2}}, {xor_ln414_37_fu_806_p2}}, {xor_ln414_35_fu_784_p2}}, {xor_ln414_33_fu_762_p2}}, {xor_ln414_31_fu_740_p2}}, {xor_ln414_29_fu_718_p2}}, {xor_ln414_27_fu_696_p2}}, {xor_ln414_25_fu_674_p2}}, {xor_ln414_23_fu_652_p2}}, {xor_ln414_21_fu_630_p2}}, {xor_ln414_19_fu_608_p2}}, {xor_ln414_17_fu_586_p2}}, {xor_ln414_15_fu_564_p2}}, {xor_ln414_13_fu_542_p2}}, {xor_ln414_11_fu_520_p2}}, {xor_ln414_9_fu_498_p2}}, {xor_ln414_7_fu_476_p2}}, {xor_ln414_5_fu_454_p2}}, {xor_ln414_3_fu_432_p2}}, {xor_ln414_1_fu_410_p2}}, {8'd92}};

assign p_Result_s_fu_383_p5 = {{p_Val2_s_fu_308[511:288]}, {tmp_V_reg_2069}, {p_Val2_s_fu_308[255:0]}};

assign tmp_100_fu_1748_p4 = {{p_Val2_s_fu_308[511:504]}};

assign tmp_34_fu_1091_p4 = {{tmp_V_reg_2069[15:8]}};

assign tmp_35_fu_1112_p4 = {{tmp_V_reg_2069[23:16]}};

assign tmp_36_fu_1133_p4 = {{tmp_V_reg_2069[31:24]}};

assign tmp_43_fu_416_p4 = {{p_Val2_s_fu_308[23:16]}};

assign tmp_44_fu_438_p4 = {{p_Val2_s_fu_308[31:24]}};

assign tmp_45_fu_460_p4 = {{p_Val2_s_fu_308[39:32]}};

assign tmp_46_fu_482_p4 = {{p_Val2_s_fu_308[47:40]}};

assign tmp_47_fu_504_p4 = {{p_Val2_s_fu_308[55:48]}};

assign tmp_48_fu_526_p4 = {{p_Val2_s_fu_308[63:56]}};

assign tmp_49_fu_548_p4 = {{p_Val2_s_fu_308[71:64]}};

assign tmp_50_fu_570_p4 = {{p_Val2_s_fu_308[79:72]}};

assign tmp_51_fu_592_p4 = {{p_Val2_s_fu_308[87:80]}};

assign tmp_52_fu_614_p4 = {{p_Val2_s_fu_308[95:88]}};

assign tmp_53_fu_636_p4 = {{p_Val2_s_fu_308[103:96]}};

assign tmp_54_fu_658_p4 = {{p_Val2_s_fu_308[111:104]}};

assign tmp_55_fu_680_p4 = {{p_Val2_s_fu_308[119:112]}};

assign tmp_56_fu_702_p4 = {{p_Val2_s_fu_308[127:120]}};

assign tmp_57_fu_724_p4 = {{p_Val2_s_fu_308[135:128]}};

assign tmp_58_fu_746_p4 = {{p_Val2_s_fu_308[143:136]}};

assign tmp_59_fu_768_p4 = {{p_Val2_s_fu_308[151:144]}};

assign tmp_60_fu_790_p4 = {{p_Val2_s_fu_308[159:152]}};

assign tmp_61_fu_812_p4 = {{p_Val2_s_fu_308[167:160]}};

assign tmp_62_fu_834_p4 = {{p_Val2_s_fu_308[175:168]}};

assign tmp_63_fu_856_p4 = {{p_Val2_s_fu_308[183:176]}};

assign tmp_64_fu_878_p4 = {{p_Val2_s_fu_308[191:184]}};

assign tmp_65_fu_900_p4 = {{p_Val2_s_fu_308[199:192]}};

assign tmp_66_fu_922_p4 = {{p_Val2_s_fu_308[207:200]}};

assign tmp_67_fu_944_p4 = {{p_Val2_s_fu_308[215:208]}};

assign tmp_68_fu_966_p4 = {{p_Val2_s_fu_308[223:216]}};

assign tmp_69_fu_988_p4 = {{p_Val2_s_fu_308[231:224]}};

assign tmp_70_fu_1010_p4 = {{p_Val2_s_fu_308[239:232]}};

assign tmp_71_fu_1032_p4 = {{p_Val2_s_fu_308[247:240]}};

assign tmp_72_fu_1054_p4 = {{p_Val2_s_fu_308[255:248]}};

assign tmp_73_fu_1154_p4 = {{p_Val2_s_fu_308[295:288]}};

assign tmp_74_fu_1176_p4 = {{p_Val2_s_fu_308[303:296]}};

assign tmp_75_fu_1198_p4 = {{p_Val2_s_fu_308[311:304]}};

assign tmp_76_fu_1220_p4 = {{p_Val2_s_fu_308[319:312]}};

assign tmp_77_fu_1242_p4 = {{p_Val2_s_fu_308[327:320]}};

assign tmp_78_fu_1264_p4 = {{p_Val2_s_fu_308[335:328]}};

assign tmp_79_fu_1286_p4 = {{p_Val2_s_fu_308[343:336]}};

assign tmp_80_fu_1308_p4 = {{p_Val2_s_fu_308[351:344]}};

assign tmp_81_fu_1330_p4 = {{p_Val2_s_fu_308[359:352]}};

assign tmp_82_fu_1352_p4 = {{p_Val2_s_fu_308[367:360]}};

assign tmp_83_fu_1374_p4 = {{p_Val2_s_fu_308[375:368]}};

assign tmp_84_fu_1396_p4 = {{p_Val2_s_fu_308[383:376]}};

assign tmp_85_fu_1418_p4 = {{p_Val2_s_fu_308[391:384]}};

assign tmp_86_fu_1440_p4 = {{p_Val2_s_fu_308[399:392]}};

assign tmp_87_fu_1462_p4 = {{p_Val2_s_fu_308[407:400]}};

assign tmp_88_fu_1484_p4 = {{p_Val2_s_fu_308[415:408]}};

assign tmp_89_fu_1506_p4 = {{p_Val2_s_fu_308[423:416]}};

assign tmp_90_fu_1528_p4 = {{p_Val2_s_fu_308[431:424]}};

assign tmp_91_fu_1550_p4 = {{p_Val2_s_fu_308[439:432]}};

assign tmp_92_fu_1572_p4 = {{p_Val2_s_fu_308[447:440]}};

assign tmp_93_fu_1594_p4 = {{p_Val2_s_fu_308[455:448]}};

assign tmp_94_fu_1616_p4 = {{p_Val2_s_fu_308[463:456]}};

assign tmp_95_fu_1638_p4 = {{p_Val2_s_fu_308[471:464]}};

assign tmp_96_fu_1660_p4 = {{p_Val2_s_fu_308[479:472]}};

assign tmp_97_fu_1682_p4 = {{p_Val2_s_fu_308[487:480]}};

assign tmp_98_fu_1704_p4 = {{p_Val2_s_fu_308[495:488]}};

assign tmp_99_fu_1726_p4 = {{p_Val2_s_fu_308[503:496]}};

assign tmp_s_fu_394_p4 = {{p_Val2_s_fu_308[15:8]}};

assign trunc_ln674_fu_1076_p1 = tmp_V_reg_2069[7:0];

assign xor_ln414_100_fu_1494_p2 = (tmp_88_fu_1484_p4 ^ 8'd54);

assign xor_ln414_101_fu_1500_p2 = (tmp_88_fu_1484_p4 ^ 8'd92);

assign xor_ln414_102_fu_1516_p2 = (tmp_89_fu_1506_p4 ^ 8'd54);

assign xor_ln414_103_fu_1522_p2 = (tmp_89_fu_1506_p4 ^ 8'd92);

assign xor_ln414_104_fu_1538_p2 = (tmp_90_fu_1528_p4 ^ 8'd54);

assign xor_ln414_105_fu_1544_p2 = (tmp_90_fu_1528_p4 ^ 8'd92);

assign xor_ln414_106_fu_1560_p2 = (tmp_91_fu_1550_p4 ^ 8'd54);

assign xor_ln414_107_fu_1566_p2 = (tmp_91_fu_1550_p4 ^ 8'd92);

assign xor_ln414_108_fu_1582_p2 = (tmp_92_fu_1572_p4 ^ 8'd54);

assign xor_ln414_109_fu_1588_p2 = (tmp_92_fu_1572_p4 ^ 8'd92);

assign xor_ln414_10_fu_514_p2 = (tmp_47_fu_504_p4 ^ 8'd54);

assign xor_ln414_110_fu_1604_p2 = (tmp_93_fu_1594_p4 ^ 8'd54);

assign xor_ln414_111_fu_1610_p2 = (tmp_93_fu_1594_p4 ^ 8'd92);

assign xor_ln414_112_fu_1626_p2 = (tmp_94_fu_1616_p4 ^ 8'd54);

assign xor_ln414_113_fu_1632_p2 = (tmp_94_fu_1616_p4 ^ 8'd92);

assign xor_ln414_114_fu_1648_p2 = (tmp_95_fu_1638_p4 ^ 8'd54);

assign xor_ln414_115_fu_1654_p2 = (tmp_95_fu_1638_p4 ^ 8'd92);

assign xor_ln414_116_fu_1670_p2 = (tmp_96_fu_1660_p4 ^ 8'd54);

assign xor_ln414_117_fu_1676_p2 = (tmp_96_fu_1660_p4 ^ 8'd92);

assign xor_ln414_118_fu_1692_p2 = (tmp_97_fu_1682_p4 ^ 8'd54);

assign xor_ln414_119_fu_1698_p2 = (tmp_97_fu_1682_p4 ^ 8'd92);

assign xor_ln414_11_fu_520_p2 = (tmp_47_fu_504_p4 ^ 8'd92);

assign xor_ln414_120_fu_1714_p2 = (tmp_98_fu_1704_p4 ^ 8'd54);

assign xor_ln414_121_fu_1720_p2 = (tmp_98_fu_1704_p4 ^ 8'd92);

assign xor_ln414_122_fu_1736_p2 = (tmp_99_fu_1726_p4 ^ 8'd54);

assign xor_ln414_123_fu_1742_p2 = (tmp_99_fu_1726_p4 ^ 8'd92);

assign xor_ln414_124_fu_1758_p2 = (tmp_100_fu_1748_p4 ^ 8'd54);

assign xor_ln414_125_fu_1897_p2 = (tmp_100_fu_1748_p4 ^ 8'd92);

assign xor_ln414_12_fu_536_p2 = (tmp_48_fu_526_p4 ^ 8'd54);

assign xor_ln414_13_fu_542_p2 = (tmp_48_fu_526_p4 ^ 8'd92);

assign xor_ln414_14_fu_558_p2 = (tmp_49_fu_548_p4 ^ 8'd54);

assign xor_ln414_15_fu_564_p2 = (tmp_49_fu_548_p4 ^ 8'd92);

assign xor_ln414_16_fu_580_p2 = (tmp_50_fu_570_p4 ^ 8'd54);

assign xor_ln414_17_fu_586_p2 = (tmp_50_fu_570_p4 ^ 8'd92);

assign xor_ln414_18_fu_602_p2 = (tmp_51_fu_592_p4 ^ 8'd54);

assign xor_ln414_19_fu_608_p2 = (tmp_51_fu_592_p4 ^ 8'd92);

assign xor_ln414_1_fu_410_p2 = (tmp_s_fu_394_p4 ^ 8'd92);

assign xor_ln414_20_fu_624_p2 = (tmp_52_fu_614_p4 ^ 8'd54);

assign xor_ln414_21_fu_630_p2 = (tmp_52_fu_614_p4 ^ 8'd92);

assign xor_ln414_22_fu_646_p2 = (tmp_53_fu_636_p4 ^ 8'd54);

assign xor_ln414_23_fu_652_p2 = (tmp_53_fu_636_p4 ^ 8'd92);

assign xor_ln414_24_fu_668_p2 = (tmp_54_fu_658_p4 ^ 8'd54);

assign xor_ln414_25_fu_674_p2 = (tmp_54_fu_658_p4 ^ 8'd92);

assign xor_ln414_26_fu_690_p2 = (tmp_55_fu_680_p4 ^ 8'd54);

assign xor_ln414_27_fu_696_p2 = (tmp_55_fu_680_p4 ^ 8'd92);

assign xor_ln414_28_fu_712_p2 = (tmp_56_fu_702_p4 ^ 8'd54);

assign xor_ln414_29_fu_718_p2 = (tmp_56_fu_702_p4 ^ 8'd92);

assign xor_ln414_2_fu_426_p2 = (tmp_43_fu_416_p4 ^ 8'd54);

assign xor_ln414_30_fu_734_p2 = (tmp_57_fu_724_p4 ^ 8'd54);

assign xor_ln414_31_fu_740_p2 = (tmp_57_fu_724_p4 ^ 8'd92);

assign xor_ln414_32_fu_756_p2 = (tmp_58_fu_746_p4 ^ 8'd54);

assign xor_ln414_33_fu_762_p2 = (tmp_58_fu_746_p4 ^ 8'd92);

assign xor_ln414_34_fu_778_p2 = (tmp_59_fu_768_p4 ^ 8'd54);

assign xor_ln414_35_fu_784_p2 = (tmp_59_fu_768_p4 ^ 8'd92);

assign xor_ln414_36_fu_800_p2 = (tmp_60_fu_790_p4 ^ 8'd54);

assign xor_ln414_37_fu_806_p2 = (tmp_60_fu_790_p4 ^ 8'd92);

assign xor_ln414_38_fu_822_p2 = (tmp_61_fu_812_p4 ^ 8'd54);

assign xor_ln414_39_fu_828_p2 = (tmp_61_fu_812_p4 ^ 8'd92);

assign xor_ln414_3_fu_432_p2 = (tmp_43_fu_416_p4 ^ 8'd92);

assign xor_ln414_40_fu_844_p2 = (tmp_62_fu_834_p4 ^ 8'd54);

assign xor_ln414_41_fu_850_p2 = (tmp_62_fu_834_p4 ^ 8'd92);

assign xor_ln414_42_fu_866_p2 = (tmp_63_fu_856_p4 ^ 8'd54);

assign xor_ln414_43_fu_872_p2 = (tmp_63_fu_856_p4 ^ 8'd92);

assign xor_ln414_44_fu_888_p2 = (tmp_64_fu_878_p4 ^ 8'd54);

assign xor_ln414_45_fu_894_p2 = (tmp_64_fu_878_p4 ^ 8'd92);

assign xor_ln414_46_fu_910_p2 = (tmp_65_fu_900_p4 ^ 8'd54);

assign xor_ln414_47_fu_916_p2 = (tmp_65_fu_900_p4 ^ 8'd92);

assign xor_ln414_48_fu_932_p2 = (tmp_66_fu_922_p4 ^ 8'd54);

assign xor_ln414_49_fu_938_p2 = (tmp_66_fu_922_p4 ^ 8'd92);

assign xor_ln414_4_fu_448_p2 = (tmp_44_fu_438_p4 ^ 8'd54);

assign xor_ln414_50_fu_954_p2 = (tmp_67_fu_944_p4 ^ 8'd54);

assign xor_ln414_51_fu_960_p2 = (tmp_67_fu_944_p4 ^ 8'd92);

assign xor_ln414_52_fu_976_p2 = (tmp_68_fu_966_p4 ^ 8'd54);

assign xor_ln414_53_fu_982_p2 = (tmp_68_fu_966_p4 ^ 8'd92);

assign xor_ln414_54_fu_998_p2 = (tmp_69_fu_988_p4 ^ 8'd54);

assign xor_ln414_55_fu_1004_p2 = (tmp_69_fu_988_p4 ^ 8'd92);

assign xor_ln414_56_fu_1020_p2 = (tmp_70_fu_1010_p4 ^ 8'd54);

assign xor_ln414_57_fu_1026_p2 = (tmp_70_fu_1010_p4 ^ 8'd92);

assign xor_ln414_58_fu_1042_p2 = (tmp_71_fu_1032_p4 ^ 8'd54);

assign xor_ln414_59_fu_1048_p2 = (tmp_71_fu_1032_p4 ^ 8'd92);

assign xor_ln414_5_fu_454_p2 = (tmp_44_fu_438_p4 ^ 8'd92);

assign xor_ln414_60_fu_1064_p2 = (tmp_72_fu_1054_p4 ^ 8'd54);

assign xor_ln414_61_fu_1070_p2 = (tmp_72_fu_1054_p4 ^ 8'd92);

assign xor_ln414_62_fu_1079_p2 = (trunc_ln674_fu_1076_p1 ^ 8'd54);

assign xor_ln414_63_fu_1085_p2 = (trunc_ln674_fu_1076_p1 ^ 8'd92);

assign xor_ln414_64_fu_1100_p2 = (tmp_34_fu_1091_p4 ^ 8'd54);

assign xor_ln414_65_fu_1106_p2 = (tmp_34_fu_1091_p4 ^ 8'd92);

assign xor_ln414_66_fu_1121_p2 = (tmp_35_fu_1112_p4 ^ 8'd54);

assign xor_ln414_67_fu_1127_p2 = (tmp_35_fu_1112_p4 ^ 8'd92);

assign xor_ln414_68_fu_1142_p2 = (tmp_36_fu_1133_p4 ^ 8'd54);

assign xor_ln414_69_fu_1148_p2 = (tmp_36_fu_1133_p4 ^ 8'd92);

assign xor_ln414_6_fu_470_p2 = (tmp_45_fu_460_p4 ^ 8'd54);

assign xor_ln414_70_fu_1164_p2 = (tmp_73_fu_1154_p4 ^ 8'd54);

assign xor_ln414_71_fu_1170_p2 = (tmp_73_fu_1154_p4 ^ 8'd92);

assign xor_ln414_72_fu_1186_p2 = (tmp_74_fu_1176_p4 ^ 8'd54);

assign xor_ln414_73_fu_1192_p2 = (tmp_74_fu_1176_p4 ^ 8'd92);

assign xor_ln414_74_fu_1208_p2 = (tmp_75_fu_1198_p4 ^ 8'd54);

assign xor_ln414_75_fu_1214_p2 = (tmp_75_fu_1198_p4 ^ 8'd92);

assign xor_ln414_76_fu_1230_p2 = (tmp_76_fu_1220_p4 ^ 8'd54);

assign xor_ln414_77_fu_1236_p2 = (tmp_76_fu_1220_p4 ^ 8'd92);

assign xor_ln414_78_fu_1252_p2 = (tmp_77_fu_1242_p4 ^ 8'd54);

assign xor_ln414_79_fu_1258_p2 = (tmp_77_fu_1242_p4 ^ 8'd92);

assign xor_ln414_7_fu_476_p2 = (tmp_45_fu_460_p4 ^ 8'd92);

assign xor_ln414_80_fu_1274_p2 = (tmp_78_fu_1264_p4 ^ 8'd54);

assign xor_ln414_81_fu_1280_p2 = (tmp_78_fu_1264_p4 ^ 8'd92);

assign xor_ln414_82_fu_1296_p2 = (tmp_79_fu_1286_p4 ^ 8'd54);

assign xor_ln414_83_fu_1302_p2 = (tmp_79_fu_1286_p4 ^ 8'd92);

assign xor_ln414_84_fu_1318_p2 = (tmp_80_fu_1308_p4 ^ 8'd54);

assign xor_ln414_85_fu_1324_p2 = (tmp_80_fu_1308_p4 ^ 8'd92);

assign xor_ln414_86_fu_1340_p2 = (tmp_81_fu_1330_p4 ^ 8'd54);

assign xor_ln414_87_fu_1346_p2 = (tmp_81_fu_1330_p4 ^ 8'd92);

assign xor_ln414_88_fu_1362_p2 = (tmp_82_fu_1352_p4 ^ 8'd54);

assign xor_ln414_89_fu_1368_p2 = (tmp_82_fu_1352_p4 ^ 8'd92);

assign xor_ln414_8_fu_492_p2 = (tmp_46_fu_482_p4 ^ 8'd54);

assign xor_ln414_90_fu_1384_p2 = (tmp_83_fu_1374_p4 ^ 8'd54);

assign xor_ln414_91_fu_1390_p2 = (tmp_83_fu_1374_p4 ^ 8'd92);

assign xor_ln414_92_fu_1406_p2 = (tmp_84_fu_1396_p4 ^ 8'd54);

assign xor_ln414_93_fu_1412_p2 = (tmp_84_fu_1396_p4 ^ 8'd92);

assign xor_ln414_94_fu_1428_p2 = (tmp_85_fu_1418_p4 ^ 8'd54);

assign xor_ln414_95_fu_1434_p2 = (tmp_85_fu_1418_p4 ^ 8'd92);

assign xor_ln414_96_fu_1450_p2 = (tmp_86_fu_1440_p4 ^ 8'd54);

assign xor_ln414_97_fu_1456_p2 = (tmp_86_fu_1440_p4 ^ 8'd92);

assign xor_ln414_98_fu_1472_p2 = (tmp_87_fu_1462_p4 ^ 8'd54);

assign xor_ln414_99_fu_1478_p2 = (tmp_87_fu_1462_p4 ^ 8'd92);

assign xor_ln414_9_fu_498_p2 = (tmp_46_fu_482_p4 ^ 8'd92);

assign xor_ln414_fu_404_p2 = (tmp_s_fu_394_p4 ^ 8'd54);

always @ (posedge ap_clk) begin
    p_Val2_s_fu_308[31:0] <= 32'b00000000000000000000000000000000;
end

endmodule //test_hmac_sha256_kpad_32_64_256_32_64_sha256_wrapper_Pipeline_VITIS_LOOP_120_2
