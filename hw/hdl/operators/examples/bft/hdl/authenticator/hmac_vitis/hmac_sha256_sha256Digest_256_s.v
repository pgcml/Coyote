// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module hmac_sha256_sha256Digest_256_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        nblk_strm210_dout,
        nblk_strm210_num_data_valid,
        nblk_strm210_fifo_cap,
        nblk_strm210_empty_n,
        nblk_strm210_read,
        end_nblk_strm213_dout,
        end_nblk_strm213_num_data_valid,
        end_nblk_strm213_fifo_cap,
        end_nblk_strm213_empty_n,
        end_nblk_strm213_read,
        w_strm14_dout,
        w_strm14_num_data_valid,
        w_strm14_fifo_cap,
        w_strm14_empty_n,
        w_strm14_read,
        msgHashStrm10_din,
        msgHashStrm10_num_data_valid,
        msgHashStrm10_fifo_cap,
        msgHashStrm10_full_n,
        msgHashStrm10_write,
        eMsgHashStrm11_din,
        eMsgHashStrm11_num_data_valid,
        eMsgHashStrm11_fifo_cap,
        eMsgHashStrm11_full_n,
        eMsgHashStrm11_write
);

parameter    ap_ST_fsm_state1 = 5'd1;
parameter    ap_ST_fsm_state2 = 5'd2;
parameter    ap_ST_fsm_state3 = 5'd4;
parameter    ap_ST_fsm_state4 = 5'd8;
parameter    ap_ST_fsm_state5 = 5'd16;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [63:0] nblk_strm210_dout;
input  [5:0] nblk_strm210_num_data_valid;
input  [5:0] nblk_strm210_fifo_cap;
input   nblk_strm210_empty_n;
output   nblk_strm210_read;
input  [0:0] end_nblk_strm213_dout;
input  [5:0] end_nblk_strm213_num_data_valid;
input  [5:0] end_nblk_strm213_fifo_cap;
input   end_nblk_strm213_empty_n;
output   end_nblk_strm213_read;
input  [31:0] w_strm14_dout;
input  [5:0] w_strm14_num_data_valid;
input  [5:0] w_strm14_fifo_cap;
input   w_strm14_empty_n;
output   w_strm14_read;
output  [255:0] msgHashStrm10_din;
input  [2:0] msgHashStrm10_num_data_valid;
input  [2:0] msgHashStrm10_fifo_cap;
input   msgHashStrm10_full_n;
output   msgHashStrm10_write;
output  [0:0] eMsgHashStrm11_din;
input  [2:0] eMsgHashStrm11_num_data_valid;
input  [2:0] eMsgHashStrm11_fifo_cap;
input   eMsgHashStrm11_full_n;
output   eMsgHashStrm11_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg nblk_strm210_read;
reg end_nblk_strm213_read;
reg w_strm14_read;
reg msgHashStrm10_write;
reg[0:0] eMsgHashStrm11_din;
reg eMsgHashStrm11_write;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [4:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    nblk_strm210_blk_n;
wire    ap_CS_fsm_state2;
reg    end_nblk_strm213_blk_n;
wire    ap_CS_fsm_state3;
wire   [0:0] icmp_ln663_fu_304_p2;
reg    msgHashStrm10_blk_n;
reg    eMsgHashStrm11_blk_n;
reg   [63:0] tmp_31_reg_781;
wire   [63:0] n_2_fu_309_p2;
reg   [63:0] n_2_reg_789;
reg    ap_block_state3;
wire   [31:0] add_ln688_fu_680_p2;
wire    ap_CS_fsm_state5;
wire   [31:0] add_ln689_fu_686_p2;
wire   [31:0] add_ln690_fu_692_p2;
wire   [31:0] add_ln691_fu_698_p2;
wire   [31:0] add_ln692_fu_704_p2;
wire   [31:0] add_ln693_fu_710_p2;
wire   [31:0] add_ln694_fu_716_p2;
wire   [31:0] add_ln695_fu_722_p2;
wire    grp_sha256Digest_256_Pipeline_LOOP_SHA256_UPDATE_64_ROUNDS_fu_274_ap_start;
wire    grp_sha256Digest_256_Pipeline_LOOP_SHA256_UPDATE_64_ROUNDS_fu_274_ap_done;
wire    grp_sha256Digest_256_Pipeline_LOOP_SHA256_UPDATE_64_ROUNDS_fu_274_ap_idle;
wire    grp_sha256Digest_256_Pipeline_LOOP_SHA256_UPDATE_64_ROUNDS_fu_274_ap_ready;
wire    grp_sha256Digest_256_Pipeline_LOOP_SHA256_UPDATE_64_ROUNDS_fu_274_w_strm14_read;
wire   [31:0] grp_sha256Digest_256_Pipeline_LOOP_SHA256_UPDATE_64_ROUNDS_fu_274_h_3_out;
wire    grp_sha256Digest_256_Pipeline_LOOP_SHA256_UPDATE_64_ROUNDS_fu_274_h_3_out_ap_vld;
wire   [31:0] grp_sha256Digest_256_Pipeline_LOOP_SHA256_UPDATE_64_ROUNDS_fu_274_g_6_out;
wire    grp_sha256Digest_256_Pipeline_LOOP_SHA256_UPDATE_64_ROUNDS_fu_274_g_6_out_ap_vld;
wire   [31:0] grp_sha256Digest_256_Pipeline_LOOP_SHA256_UPDATE_64_ROUNDS_fu_274_f_6_out;
wire    grp_sha256Digest_256_Pipeline_LOOP_SHA256_UPDATE_64_ROUNDS_fu_274_f_6_out_ap_vld;
wire   [31:0] grp_sha256Digest_256_Pipeline_LOOP_SHA256_UPDATE_64_ROUNDS_fu_274_e_6_out;
wire    grp_sha256Digest_256_Pipeline_LOOP_SHA256_UPDATE_64_ROUNDS_fu_274_e_6_out_ap_vld;
wire   [31:0] grp_sha256Digest_256_Pipeline_LOOP_SHA256_UPDATE_64_ROUNDS_fu_274_d_3_out;
wire    grp_sha256Digest_256_Pipeline_LOOP_SHA256_UPDATE_64_ROUNDS_fu_274_d_3_out_ap_vld;
wire   [31:0] grp_sha256Digest_256_Pipeline_LOOP_SHA256_UPDATE_64_ROUNDS_fu_274_c_6_out;
wire    grp_sha256Digest_256_Pipeline_LOOP_SHA256_UPDATE_64_ROUNDS_fu_274_c_6_out_ap_vld;
wire   [31:0] grp_sha256Digest_256_Pipeline_LOOP_SHA256_UPDATE_64_ROUNDS_fu_274_b_6_out;
wire    grp_sha256Digest_256_Pipeline_LOOP_SHA256_UPDATE_64_ROUNDS_fu_274_b_6_out_ap_vld;
wire   [31:0] grp_sha256Digest_256_Pipeline_LOOP_SHA256_UPDATE_64_ROUNDS_fu_274_a_6_out;
wire    grp_sha256Digest_256_Pipeline_LOOP_SHA256_UPDATE_64_ROUNDS_fu_274_a_6_out_ap_vld;
reg   [0:0] end_flag_3_reg_158;
reg    ap_block_state1;
reg   [31:0] h_reg_167;
reg    ap_block_state2;
reg   [31:0] g_reg_179;
reg   [31:0] f_reg_191;
reg   [31:0] e_reg_203;
reg   [31:0] d_reg_215;
reg   [31:0] c_reg_227;
reg   [31:0] b_reg_239;
reg   [31:0] a_reg_251;
reg   [63:0] n_reg_263;
reg    grp_sha256Digest_256_Pipeline_LOOP_SHA256_UPDATE_64_ROUNDS_fu_274_ap_start_reg;
reg    ap_block_state3_ignore_call4;
wire    ap_CS_fsm_state4;
wire   [7:0] t3_14_fu_423_p1;
wire   [7:0] tmp_fu_427_p4;
wire   [7:0] tmp_s_fu_437_p4;
wire   [7:0] t0_14_fu_413_p4;
wire   [7:0] t3_13_fu_409_p1;
wire   [7:0] tmp_15_fu_447_p4;
wire   [7:0] tmp_16_fu_457_p4;
wire   [7:0] t0_13_fu_399_p4;
wire   [7:0] t3_12_fu_395_p1;
wire   [7:0] tmp_17_fu_467_p4;
wire   [7:0] tmp_18_fu_477_p4;
wire   [7:0] t0_12_fu_385_p4;
wire   [7:0] t3_11_fu_381_p1;
wire   [7:0] tmp_19_fu_487_p4;
wire   [7:0] tmp_20_fu_497_p4;
wire   [7:0] t0_11_fu_371_p4;
wire   [7:0] t3_10_fu_367_p1;
wire   [7:0] tmp_21_fu_507_p4;
wire   [7:0] tmp_22_fu_517_p4;
wire   [7:0] t0_10_fu_357_p4;
wire   [7:0] t3_9_fu_353_p1;
wire   [7:0] tmp_23_fu_527_p4;
wire   [7:0] tmp_24_fu_537_p4;
wire   [7:0] t0_9_fu_343_p4;
wire   [7:0] t3_8_fu_339_p1;
wire   [7:0] tmp_25_fu_547_p4;
wire   [7:0] tmp_26_fu_557_p4;
wire   [7:0] t0_8_fu_329_p4;
wire   [7:0] t3_fu_325_p1;
wire   [7:0] tmp_27_fu_567_p4;
wire   [7:0] tmp_28_fu_577_p4;
wire   [7:0] t0_fu_315_p4;
reg   [4:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
reg    ap_ST_fsm_state2_blk;
reg    ap_ST_fsm_state3_blk;
reg    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 5'd1;
#0 grp_sha256Digest_256_Pipeline_LOOP_SHA256_UPDATE_64_ROUNDS_fu_274_ap_start_reg = 1'b0;
end

hmac_sha256_sha256Digest_256_Pipeline_LOOP_SHA256_UPDATE_64_ROUNDS grp_sha256Digest_256_Pipeline_LOOP_SHA256_UPDATE_64_ROUNDS_fu_274(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_sha256Digest_256_Pipeline_LOOP_SHA256_UPDATE_64_ROUNDS_fu_274_ap_start),
    .ap_done(grp_sha256Digest_256_Pipeline_LOOP_SHA256_UPDATE_64_ROUNDS_fu_274_ap_done),
    .ap_idle(grp_sha256Digest_256_Pipeline_LOOP_SHA256_UPDATE_64_ROUNDS_fu_274_ap_idle),
    .ap_ready(grp_sha256Digest_256_Pipeline_LOOP_SHA256_UPDATE_64_ROUNDS_fu_274_ap_ready),
    .w_strm14_dout(w_strm14_dout),
    .w_strm14_num_data_valid(6'd0),
    .w_strm14_fifo_cap(6'd0),
    .w_strm14_empty_n(w_strm14_empty_n),
    .w_strm14_read(grp_sha256Digest_256_Pipeline_LOOP_SHA256_UPDATE_64_ROUNDS_fu_274_w_strm14_read),
    .h(h_reg_167),
    .g(g_reg_179),
    .f(f_reg_191),
    .e(e_reg_203),
    .d(d_reg_215),
    .c(c_reg_227),
    .b(b_reg_239),
    .a(a_reg_251),
    .h_3_out(grp_sha256Digest_256_Pipeline_LOOP_SHA256_UPDATE_64_ROUNDS_fu_274_h_3_out),
    .h_3_out_ap_vld(grp_sha256Digest_256_Pipeline_LOOP_SHA256_UPDATE_64_ROUNDS_fu_274_h_3_out_ap_vld),
    .g_6_out(grp_sha256Digest_256_Pipeline_LOOP_SHA256_UPDATE_64_ROUNDS_fu_274_g_6_out),
    .g_6_out_ap_vld(grp_sha256Digest_256_Pipeline_LOOP_SHA256_UPDATE_64_ROUNDS_fu_274_g_6_out_ap_vld),
    .f_6_out(grp_sha256Digest_256_Pipeline_LOOP_SHA256_UPDATE_64_ROUNDS_fu_274_f_6_out),
    .f_6_out_ap_vld(grp_sha256Digest_256_Pipeline_LOOP_SHA256_UPDATE_64_ROUNDS_fu_274_f_6_out_ap_vld),
    .e_6_out(grp_sha256Digest_256_Pipeline_LOOP_SHA256_UPDATE_64_ROUNDS_fu_274_e_6_out),
    .e_6_out_ap_vld(grp_sha256Digest_256_Pipeline_LOOP_SHA256_UPDATE_64_ROUNDS_fu_274_e_6_out_ap_vld),
    .d_3_out(grp_sha256Digest_256_Pipeline_LOOP_SHA256_UPDATE_64_ROUNDS_fu_274_d_3_out),
    .d_3_out_ap_vld(grp_sha256Digest_256_Pipeline_LOOP_SHA256_UPDATE_64_ROUNDS_fu_274_d_3_out_ap_vld),
    .c_6_out(grp_sha256Digest_256_Pipeline_LOOP_SHA256_UPDATE_64_ROUNDS_fu_274_c_6_out),
    .c_6_out_ap_vld(grp_sha256Digest_256_Pipeline_LOOP_SHA256_UPDATE_64_ROUNDS_fu_274_c_6_out_ap_vld),
    .b_6_out(grp_sha256Digest_256_Pipeline_LOOP_SHA256_UPDATE_64_ROUNDS_fu_274_b_6_out),
    .b_6_out_ap_vld(grp_sha256Digest_256_Pipeline_LOOP_SHA256_UPDATE_64_ROUNDS_fu_274_b_6_out_ap_vld),
    .a_6_out(grp_sha256Digest_256_Pipeline_LOOP_SHA256_UPDATE_64_ROUNDS_fu_274_a_6_out),
    .a_6_out_ap_vld(grp_sha256Digest_256_Pipeline_LOOP_SHA256_UPDATE_64_ROUNDS_fu_274_a_6_out_ap_vld)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((~(((end_flag_3_reg_158 == 1'd1) & (eMsgHashStrm11_full_n == 1'b0)) | ((end_flag_3_reg_158 == 1'd0) & (nblk_strm210_empty_n == 1'b0))) & (end_flag_3_reg_158 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_sha256Digest_256_Pipeline_LOOP_SHA256_UPDATE_64_ROUNDS_fu_274_ap_start_reg <= 1'b0;
    end else begin
        if ((~(((icmp_ln663_fu_304_p2 == 1'd1) & (end_nblk_strm213_empty_n == 1'b0)) | ((icmp_ln663_fu_304_p2 == 1'd1) & (eMsgHashStrm11_full_n == 1'b0)) | ((icmp_ln663_fu_304_p2 == 1'd1) & (msgHashStrm10_full_n == 1'b0))) & (icmp_ln663_fu_304_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
            grp_sha256Digest_256_Pipeline_LOOP_SHA256_UPDATE_64_ROUNDS_fu_274_ap_start_reg <= 1'b1;
        end else if ((grp_sha256Digest_256_Pipeline_LOOP_SHA256_UPDATE_64_ROUNDS_fu_274_ap_ready == 1'b1)) begin
            grp_sha256Digest_256_Pipeline_LOOP_SHA256_UPDATE_64_ROUNDS_fu_274_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        a_reg_251 <= add_ln688_fu_680_p2;
    end else if ((~(((end_flag_3_reg_158 == 1'd1) & (eMsgHashStrm11_full_n == 1'b0)) | ((end_flag_3_reg_158 == 1'd0) & (nblk_strm210_empty_n == 1'b0))) & (end_flag_3_reg_158 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        a_reg_251 <= 32'd1779033703;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        b_reg_239 <= add_ln689_fu_686_p2;
    end else if ((~(((end_flag_3_reg_158 == 1'd1) & (eMsgHashStrm11_full_n == 1'b0)) | ((end_flag_3_reg_158 == 1'd0) & (nblk_strm210_empty_n == 1'b0))) & (end_flag_3_reg_158 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        b_reg_239 <= 32'd3144134277;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        c_reg_227 <= add_ln690_fu_692_p2;
    end else if ((~(((end_flag_3_reg_158 == 1'd1) & (eMsgHashStrm11_full_n == 1'b0)) | ((end_flag_3_reg_158 == 1'd0) & (nblk_strm210_empty_n == 1'b0))) & (end_flag_3_reg_158 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        c_reg_227 <= 32'd1013904242;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        d_reg_215 <= add_ln691_fu_698_p2;
    end else if ((~(((end_flag_3_reg_158 == 1'd1) & (eMsgHashStrm11_full_n == 1'b0)) | ((end_flag_3_reg_158 == 1'd0) & (nblk_strm210_empty_n == 1'b0))) & (end_flag_3_reg_158 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        d_reg_215 <= 32'd2773480762;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        e_reg_203 <= add_ln692_fu_704_p2;
    end else if ((~(((end_flag_3_reg_158 == 1'd1) & (eMsgHashStrm11_full_n == 1'b0)) | ((end_flag_3_reg_158 == 1'd0) & (nblk_strm210_empty_n == 1'b0))) & (end_flag_3_reg_158 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        e_reg_203 <= 32'd1359893119;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        f_reg_191 <= add_ln693_fu_710_p2;
    end else if ((~(((end_flag_3_reg_158 == 1'd1) & (eMsgHashStrm11_full_n == 1'b0)) | ((end_flag_3_reg_158 == 1'd0) & (nblk_strm210_empty_n == 1'b0))) & (end_flag_3_reg_158 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        f_reg_191 <= 32'd2600822924;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        g_reg_179 <= add_ln694_fu_716_p2;
    end else if ((~(((end_flag_3_reg_158 == 1'd1) & (eMsgHashStrm11_full_n == 1'b0)) | ((end_flag_3_reg_158 == 1'd0) & (nblk_strm210_empty_n == 1'b0))) & (end_flag_3_reg_158 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        g_reg_179 <= 32'd528734635;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        h_reg_167 <= add_ln695_fu_722_p2;
    end else if ((~(((end_flag_3_reg_158 == 1'd1) & (eMsgHashStrm11_full_n == 1'b0)) | ((end_flag_3_reg_158 == 1'd0) & (nblk_strm210_empty_n == 1'b0))) & (end_flag_3_reg_158 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        h_reg_167 <= 32'd1541459225;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        n_reg_263 <= n_2_reg_789;
    end else if ((~(((end_flag_3_reg_158 == 1'd1) & (eMsgHashStrm11_full_n == 1'b0)) | ((end_flag_3_reg_158 == 1'd0) & (nblk_strm210_empty_n == 1'b0))) & (end_flag_3_reg_158 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        n_reg_263 <= 64'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((~((end_nblk_strm213_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1)) | (~(((icmp_ln663_fu_304_p2 == 1'd1) & (end_nblk_strm213_empty_n == 1'b0)) | ((icmp_ln663_fu_304_p2 == 1'd1) & (eMsgHashStrm11_full_n == 1'b0)) | ((icmp_ln663_fu_304_p2 == 1'd1) & (msgHashStrm10_full_n == 1'b0))) & (icmp_ln663_fu_304_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3)))) begin
        end_flag_3_reg_158 <= end_nblk_strm213_dout;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((icmp_ln663_fu_304_p2 == 1'd1) & (end_nblk_strm213_empty_n == 1'b0)) | ((icmp_ln663_fu_304_p2 == 1'd1) & (eMsgHashStrm11_full_n == 1'b0)) | ((icmp_ln663_fu_304_p2 == 1'd1) & (msgHashStrm10_full_n == 1'b0))) & (1'b1 == ap_CS_fsm_state3))) begin
        n_2_reg_789 <= n_2_fu_309_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((end_flag_3_reg_158 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        tmp_31_reg_781 <= nblk_strm210_dout;
    end
end

always @ (*) begin
    if (((end_nblk_strm213_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0))) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

always @ (*) begin
    if ((((end_flag_3_reg_158 == 1'd1) & (eMsgHashStrm11_full_n == 1'b0)) | ((end_flag_3_reg_158 == 1'd0) & (nblk_strm210_empty_n == 1'b0)))) begin
        ap_ST_fsm_state2_blk = 1'b1;
    end else begin
        ap_ST_fsm_state2_blk = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln663_fu_304_p2 == 1'd1) & (end_nblk_strm213_empty_n == 1'b0)) | ((icmp_ln663_fu_304_p2 == 1'd1) & (eMsgHashStrm11_full_n == 1'b0)) | ((icmp_ln663_fu_304_p2 == 1'd1) & (msgHashStrm10_full_n == 1'b0)))) begin
        ap_ST_fsm_state3_blk = 1'b1;
    end else begin
        ap_ST_fsm_state3_blk = 1'b0;
    end
end

always @ (*) begin
    if ((grp_sha256Digest_256_Pipeline_LOOP_SHA256_UPDATE_64_ROUNDS_fu_274_ap_done == 1'b0)) begin
        ap_ST_fsm_state4_blk = 1'b1;
    end else begin
        ap_ST_fsm_state4_blk = 1'b0;
    end
end

assign ap_ST_fsm_state5_blk = 1'b0;

always @ (*) begin
    if ((~(((end_flag_3_reg_158 == 1'd1) & (eMsgHashStrm11_full_n == 1'b0)) | ((end_flag_3_reg_158 == 1'd0) & (nblk_strm210_empty_n == 1'b0))) & (end_flag_3_reg_158 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((~(((end_flag_3_reg_158 == 1'd1) & (eMsgHashStrm11_full_n == 1'b0)) | ((end_flag_3_reg_158 == 1'd0) & (nblk_strm210_empty_n == 1'b0))) & (end_flag_3_reg_158 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((((end_flag_3_reg_158 == 1'd1) & (1'b1 == ap_CS_fsm_state2)) | ((icmp_ln663_fu_304_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3)))) begin
        eMsgHashStrm11_blk_n = eMsgHashStrm11_full_n;
    end else begin
        eMsgHashStrm11_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~(((icmp_ln663_fu_304_p2 == 1'd1) & (end_nblk_strm213_empty_n == 1'b0)) | ((icmp_ln663_fu_304_p2 == 1'd1) & (eMsgHashStrm11_full_n == 1'b0)) | ((icmp_ln663_fu_304_p2 == 1'd1) & (msgHashStrm10_full_n == 1'b0))) & (icmp_ln663_fu_304_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        eMsgHashStrm11_din = 1'd0;
    end else if ((~(((end_flag_3_reg_158 == 1'd1) & (eMsgHashStrm11_full_n == 1'b0)) | ((end_flag_3_reg_158 == 1'd0) & (nblk_strm210_empty_n == 1'b0))) & (end_flag_3_reg_158 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        eMsgHashStrm11_din = 1'd1;
    end else begin
        eMsgHashStrm11_din = 'bx;
    end
end

always @ (*) begin
    if (((~(((end_flag_3_reg_158 == 1'd1) & (eMsgHashStrm11_full_n == 1'b0)) | ((end_flag_3_reg_158 == 1'd0) & (nblk_strm210_empty_n == 1'b0))) & (end_flag_3_reg_158 == 1'd1) & (1'b1 == ap_CS_fsm_state2)) | (~(((icmp_ln663_fu_304_p2 == 1'd1) & (end_nblk_strm213_empty_n == 1'b0)) | ((icmp_ln663_fu_304_p2 == 1'd1) & (eMsgHashStrm11_full_n == 1'b0)) | ((icmp_ln663_fu_304_p2 == 1'd1) & (msgHashStrm10_full_n == 1'b0))) & (icmp_ln663_fu_304_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3)))) begin
        eMsgHashStrm11_write = 1'b1;
    end else begin
        eMsgHashStrm11_write = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln663_fu_304_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3)) | (~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1)))) begin
        end_nblk_strm213_blk_n = end_nblk_strm213_empty_n;
    end else begin
        end_nblk_strm213_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((~((end_nblk_strm213_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1)) | (~(((icmp_ln663_fu_304_p2 == 1'd1) & (end_nblk_strm213_empty_n == 1'b0)) | ((icmp_ln663_fu_304_p2 == 1'd1) & (eMsgHashStrm11_full_n == 1'b0)) | ((icmp_ln663_fu_304_p2 == 1'd1) & (msgHashStrm10_full_n == 1'b0))) & (icmp_ln663_fu_304_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3)))) begin
        end_nblk_strm213_read = 1'b1;
    end else begin
        end_nblk_strm213_read = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln663_fu_304_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        msgHashStrm10_blk_n = msgHashStrm10_full_n;
    end else begin
        msgHashStrm10_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~(((icmp_ln663_fu_304_p2 == 1'd1) & (end_nblk_strm213_empty_n == 1'b0)) | ((icmp_ln663_fu_304_p2 == 1'd1) & (eMsgHashStrm11_full_n == 1'b0)) | ((icmp_ln663_fu_304_p2 == 1'd1) & (msgHashStrm10_full_n == 1'b0))) & (icmp_ln663_fu_304_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        msgHashStrm10_write = 1'b1;
    end else begin
        msgHashStrm10_write = 1'b0;
    end
end

always @ (*) begin
    if (((end_flag_3_reg_158 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        nblk_strm210_blk_n = nblk_strm210_empty_n;
    end else begin
        nblk_strm210_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~(((end_flag_3_reg_158 == 1'd1) & (eMsgHashStrm11_full_n == 1'b0)) | ((end_flag_3_reg_158 == 1'd0) & (nblk_strm210_empty_n == 1'b0))) & (end_flag_3_reg_158 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        nblk_strm210_read = 1'b1;
    end else begin
        nblk_strm210_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        w_strm14_read = grp_sha256Digest_256_Pipeline_LOOP_SHA256_UPDATE_64_ROUNDS_fu_274_w_strm14_read;
    end else begin
        w_strm14_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((end_nblk_strm213_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if ((~(((end_flag_3_reg_158 == 1'd1) & (eMsgHashStrm11_full_n == 1'b0)) | ((end_flag_3_reg_158 == 1'd0) & (nblk_strm210_empty_n == 1'b0))) & (end_flag_3_reg_158 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else if ((~(((end_flag_3_reg_158 == 1'd1) & (eMsgHashStrm11_full_n == 1'b0)) | ((end_flag_3_reg_158 == 1'd0) & (nblk_strm210_empty_n == 1'b0))) & (end_flag_3_reg_158 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if ((~(((icmp_ln663_fu_304_p2 == 1'd1) & (end_nblk_strm213_empty_n == 1'b0)) | ((icmp_ln663_fu_304_p2 == 1'd1) & (eMsgHashStrm11_full_n == 1'b0)) | ((icmp_ln663_fu_304_p2 == 1'd1) & (msgHashStrm10_full_n == 1'b0))) & (icmp_ln663_fu_304_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else if ((~(((icmp_ln663_fu_304_p2 == 1'd1) & (end_nblk_strm213_empty_n == 1'b0)) | ((icmp_ln663_fu_304_p2 == 1'd1) & (eMsgHashStrm11_full_n == 1'b0)) | ((icmp_ln663_fu_304_p2 == 1'd1) & (msgHashStrm10_full_n == 1'b0))) & (icmp_ln663_fu_304_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((1'b1 == ap_CS_fsm_state4) & (grp_sha256Digest_256_Pipeline_LOOP_SHA256_UPDATE_64_ROUNDS_fu_274_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln688_fu_680_p2 = (grp_sha256Digest_256_Pipeline_LOOP_SHA256_UPDATE_64_ROUNDS_fu_274_a_6_out + a_reg_251);

assign add_ln689_fu_686_p2 = (grp_sha256Digest_256_Pipeline_LOOP_SHA256_UPDATE_64_ROUNDS_fu_274_b_6_out + b_reg_239);

assign add_ln690_fu_692_p2 = (grp_sha256Digest_256_Pipeline_LOOP_SHA256_UPDATE_64_ROUNDS_fu_274_c_6_out + c_reg_227);

assign add_ln691_fu_698_p2 = (grp_sha256Digest_256_Pipeline_LOOP_SHA256_UPDATE_64_ROUNDS_fu_274_d_3_out + d_reg_215);

assign add_ln692_fu_704_p2 = (grp_sha256Digest_256_Pipeline_LOOP_SHA256_UPDATE_64_ROUNDS_fu_274_e_6_out + e_reg_203);

assign add_ln693_fu_710_p2 = (grp_sha256Digest_256_Pipeline_LOOP_SHA256_UPDATE_64_ROUNDS_fu_274_f_6_out + f_reg_191);

assign add_ln694_fu_716_p2 = (grp_sha256Digest_256_Pipeline_LOOP_SHA256_UPDATE_64_ROUNDS_fu_274_g_6_out + g_reg_179);

assign add_ln695_fu_722_p2 = (grp_sha256Digest_256_Pipeline_LOOP_SHA256_UPDATE_64_ROUNDS_fu_274_h_3_out + h_reg_167);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

always @ (*) begin
    ap_block_state1 = ((end_nblk_strm213_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0));
end

always @ (*) begin
    ap_block_state2 = (((end_flag_3_reg_158 == 1'd1) & (eMsgHashStrm11_full_n == 1'b0)) | ((end_flag_3_reg_158 == 1'd0) & (nblk_strm210_empty_n == 1'b0)));
end

always @ (*) begin
    ap_block_state3 = (((icmp_ln663_fu_304_p2 == 1'd1) & (end_nblk_strm213_empty_n == 1'b0)) | ((icmp_ln663_fu_304_p2 == 1'd1) & (eMsgHashStrm11_full_n == 1'b0)) | ((icmp_ln663_fu_304_p2 == 1'd1) & (msgHashStrm10_full_n == 1'b0)));
end

always @ (*) begin
    ap_block_state3_ignore_call4 = (((icmp_ln663_fu_304_p2 == 1'd1) & (end_nblk_strm213_empty_n == 1'b0)) | ((icmp_ln663_fu_304_p2 == 1'd1) & (eMsgHashStrm11_full_n == 1'b0)) | ((icmp_ln663_fu_304_p2 == 1'd1) & (msgHashStrm10_full_n == 1'b0)));
end

assign grp_sha256Digest_256_Pipeline_LOOP_SHA256_UPDATE_64_ROUNDS_fu_274_ap_start = grp_sha256Digest_256_Pipeline_LOOP_SHA256_UPDATE_64_ROUNDS_fu_274_ap_start_reg;

assign icmp_ln663_fu_304_p2 = ((n_reg_263 == tmp_31_reg_781) ? 1'b1 : 1'b0);

assign msgHashStrm10_din = {{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{t3_14_fu_423_p1}, {tmp_fu_427_p4}}, {tmp_s_fu_437_p4}}, {t0_14_fu_413_p4}}, {t3_13_fu_409_p1}}, {tmp_15_fu_447_p4}}, {tmp_16_fu_457_p4}}, {t0_13_fu_399_p4}}, {t3_12_fu_395_p1}}, {tmp_17_fu_467_p4}}, {tmp_18_fu_477_p4}}, {t0_12_fu_385_p4}}, {t3_11_fu_381_p1}}, {tmp_19_fu_487_p4}}, {tmp_20_fu_497_p4}}, {t0_11_fu_371_p4}}, {t3_10_fu_367_p1}}, {tmp_21_fu_507_p4}}, {tmp_22_fu_517_p4}}, {t0_10_fu_357_p4}}, {t3_9_fu_353_p1}}, {tmp_23_fu_527_p4}}, {tmp_24_fu_537_p4}}, {t0_9_fu_343_p4}}, {t3_8_fu_339_p1}}, {tmp_25_fu_547_p4}}, {tmp_26_fu_557_p4}}, {t0_8_fu_329_p4}}, {t3_fu_325_p1}}, {tmp_27_fu_567_p4}}, {tmp_28_fu_577_p4}}, {t0_fu_315_p4}};

assign n_2_fu_309_p2 = (n_reg_263 + 64'd1);

assign t0_10_fu_357_p4 = {{d_reg_215[31:24]}};

assign t0_11_fu_371_p4 = {{e_reg_203[31:24]}};

assign t0_12_fu_385_p4 = {{f_reg_191[31:24]}};

assign t0_13_fu_399_p4 = {{g_reg_179[31:24]}};

assign t0_14_fu_413_p4 = {{h_reg_167[31:24]}};

assign t0_8_fu_329_p4 = {{b_reg_239[31:24]}};

assign t0_9_fu_343_p4 = {{c_reg_227[31:24]}};

assign t0_fu_315_p4 = {{a_reg_251[31:24]}};

assign t3_10_fu_367_p1 = d_reg_215[7:0];

assign t3_11_fu_381_p1 = e_reg_203[7:0];

assign t3_12_fu_395_p1 = f_reg_191[7:0];

assign t3_13_fu_409_p1 = g_reg_179[7:0];

assign t3_14_fu_423_p1 = h_reg_167[7:0];

assign t3_8_fu_339_p1 = b_reg_239[7:0];

assign t3_9_fu_353_p1 = c_reg_227[7:0];

assign t3_fu_325_p1 = a_reg_251[7:0];

assign tmp_15_fu_447_p4 = {{g_reg_179[15:8]}};

assign tmp_16_fu_457_p4 = {{g_reg_179[23:16]}};

assign tmp_17_fu_467_p4 = {{f_reg_191[15:8]}};

assign tmp_18_fu_477_p4 = {{f_reg_191[23:16]}};

assign tmp_19_fu_487_p4 = {{e_reg_203[15:8]}};

assign tmp_20_fu_497_p4 = {{e_reg_203[23:16]}};

assign tmp_21_fu_507_p4 = {{d_reg_215[15:8]}};

assign tmp_22_fu_517_p4 = {{d_reg_215[23:16]}};

assign tmp_23_fu_527_p4 = {{c_reg_227[15:8]}};

assign tmp_24_fu_537_p4 = {{c_reg_227[23:16]}};

assign tmp_25_fu_547_p4 = {{b_reg_239[15:8]}};

assign tmp_26_fu_557_p4 = {{b_reg_239[23:16]}};

assign tmp_27_fu_567_p4 = {{a_reg_251[15:8]}};

assign tmp_28_fu_577_p4 = {{a_reg_251[23:16]}};

assign tmp_fu_427_p4 = {{h_reg_167[15:8]}};

assign tmp_s_fu_437_p4 = {{h_reg_167[23:16]}};

endmodule //hmac_sha256_sha256Digest_256_s
