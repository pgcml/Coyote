// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module hmac_sha256_kpad_32_64_256_32_64_sha256_wrapper_Pipeline_VITIS_LOOP_120_2 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        keyStrm_TVALID,
        kipadStrm7_din,
        kipadStrm7_num_data_valid,
        kipadStrm7_fifo_cap,
        kipadStrm7_full_n,
        kipadStrm7_write,
        kopadStrm8_din,
        kopadStrm8_num_data_valid,
        kopadStrm8_fifo_cap,
        kopadStrm8_full_n,
        kopadStrm8_write,
        eKipadStrm6_din,
        eKipadStrm6_num_data_valid,
        eKipadStrm6_fifo_cap,
        eKipadStrm6_full_n,
        eKipadStrm6_write,
        keyStrm_TDATA,
        keyStrm_TREADY
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input   keyStrm_TVALID;
output  [511:0] kipadStrm7_din;
input  [2:0] kipadStrm7_num_data_valid;
input  [2:0] kipadStrm7_fifo_cap;
input   kipadStrm7_full_n;
output   kipadStrm7_write;
output  [511:0] kopadStrm8_din;
input  [2:0] kopadStrm8_num_data_valid;
input  [2:0] kopadStrm8_fifo_cap;
input   kopadStrm8_full_n;
output   kopadStrm8_write;
output  [0:0] eKipadStrm6_din;
input  [2:0] eKipadStrm6_num_data_valid;
input  [2:0] eKipadStrm6_fifo_cap;
input   eKipadStrm6_full_n;
output   eKipadStrm6_write;
input  [31:0] keyStrm_TDATA;
output   keyStrm_TREADY;

reg ap_idle;
reg kipadStrm7_write;
reg kopadStrm8_write;
reg eKipadStrm6_write;
reg keyStrm_TREADY;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire   [0:0] icmp_ln120_fu_361_p2;
reg    ap_block_state1_pp0_stage0_iter0;
reg   [0:0] icmp_ln120_1_reg_2077;
reg    ap_block_state2_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    keyStrm_TDATA_blk_n;
wire    ap_block_pp0_stage0;
reg    kipadStrm7_blk_n;
reg    kopadStrm8_blk_n;
reg    eKipadStrm6_blk_n;
reg   [31:0] tmp_V_reg_2068;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln120_1_fu_373_p2;
reg   [511:0] p_Val2_s_fu_312;
wire   [511:0] empty_fu_2040_p2;
wire    ap_loop_init;
reg   [3:0] i_fu_316;
wire   [3:0] i_9_fu_367_p2;
reg   [3:0] ap_sig_allocacmp_i_8;
reg    ap_block_pp0_stage0_01001;
wire   [7:0] tmp_s_fu_398_p4;
wire   [7:0] tmp_43_fu_420_p4;
wire   [7:0] tmp_44_fu_442_p4;
wire   [7:0] tmp_45_fu_464_p4;
wire   [7:0] tmp_46_fu_486_p4;
wire   [7:0] tmp_47_fu_508_p4;
wire   [7:0] tmp_48_fu_530_p4;
wire   [7:0] tmp_49_fu_552_p4;
wire   [7:0] tmp_50_fu_574_p4;
wire   [7:0] tmp_51_fu_596_p4;
wire   [7:0] tmp_52_fu_618_p4;
wire   [7:0] tmp_53_fu_640_p4;
wire   [7:0] tmp_54_fu_662_p4;
wire   [7:0] tmp_55_fu_684_p4;
wire   [7:0] tmp_56_fu_706_p4;
wire   [7:0] tmp_57_fu_728_p4;
wire   [7:0] tmp_58_fu_750_p4;
wire   [7:0] tmp_59_fu_772_p4;
wire   [7:0] tmp_60_fu_794_p4;
wire   [7:0] tmp_61_fu_816_p4;
wire   [7:0] tmp_62_fu_838_p4;
wire   [7:0] tmp_63_fu_860_p4;
wire   [7:0] tmp_64_fu_882_p4;
wire   [7:0] tmp_65_fu_904_p4;
wire   [7:0] tmp_66_fu_926_p4;
wire   [7:0] tmp_67_fu_948_p4;
wire   [7:0] tmp_68_fu_970_p4;
wire   [7:0] tmp_69_fu_992_p4;
wire   [7:0] tmp_70_fu_1014_p4;
wire   [7:0] tmp_71_fu_1036_p4;
wire   [7:0] tmp_72_fu_1058_p4;
wire   [7:0] trunc_ln674_fu_1080_p1;
wire   [7:0] tmp_34_fu_1095_p4;
wire   [7:0] tmp_35_fu_1116_p4;
wire   [7:0] tmp_36_fu_1137_p4;
wire   [7:0] tmp_73_fu_1158_p4;
wire   [7:0] tmp_74_fu_1180_p4;
wire   [7:0] tmp_75_fu_1202_p4;
wire   [7:0] tmp_76_fu_1224_p4;
wire   [7:0] tmp_77_fu_1246_p4;
wire   [7:0] tmp_78_fu_1268_p4;
wire   [7:0] tmp_79_fu_1290_p4;
wire   [7:0] tmp_80_fu_1312_p4;
wire   [7:0] tmp_81_fu_1334_p4;
wire   [7:0] tmp_82_fu_1356_p4;
wire   [7:0] tmp_83_fu_1378_p4;
wire   [7:0] tmp_84_fu_1400_p4;
wire   [7:0] tmp_85_fu_1422_p4;
wire   [7:0] tmp_86_fu_1444_p4;
wire   [7:0] tmp_87_fu_1466_p4;
wire   [7:0] tmp_88_fu_1488_p4;
wire   [7:0] tmp_89_fu_1510_p4;
wire   [7:0] tmp_90_fu_1532_p4;
wire   [7:0] tmp_91_fu_1554_p4;
wire   [7:0] tmp_92_fu_1576_p4;
wire   [7:0] tmp_93_fu_1598_p4;
wire   [7:0] tmp_94_fu_1620_p4;
wire   [7:0] tmp_95_fu_1642_p4;
wire   [7:0] tmp_96_fu_1664_p4;
wire   [7:0] tmp_97_fu_1686_p4;
wire   [7:0] tmp_98_fu_1708_p4;
wire   [7:0] tmp_99_fu_1730_p4;
wire   [7:0] tmp_100_fu_1752_p4;
wire   [7:0] xor_ln414_124_fu_1762_p2;
wire   [7:0] xor_ln414_122_fu_1740_p2;
wire   [7:0] xor_ln414_120_fu_1718_p2;
wire   [7:0] xor_ln414_118_fu_1696_p2;
wire   [7:0] xor_ln414_116_fu_1674_p2;
wire   [7:0] xor_ln414_114_fu_1652_p2;
wire   [7:0] xor_ln414_112_fu_1630_p2;
wire   [7:0] xor_ln414_110_fu_1608_p2;
wire   [7:0] xor_ln414_108_fu_1586_p2;
wire   [7:0] xor_ln414_106_fu_1564_p2;
wire   [7:0] xor_ln414_104_fu_1542_p2;
wire   [7:0] xor_ln414_102_fu_1520_p2;
wire   [7:0] xor_ln414_100_fu_1498_p2;
wire   [7:0] xor_ln414_98_fu_1476_p2;
wire   [7:0] xor_ln414_96_fu_1454_p2;
wire   [7:0] xor_ln414_94_fu_1432_p2;
wire   [7:0] xor_ln414_92_fu_1410_p2;
wire   [7:0] xor_ln414_90_fu_1388_p2;
wire   [7:0] xor_ln414_88_fu_1366_p2;
wire   [7:0] xor_ln414_86_fu_1344_p2;
wire   [7:0] xor_ln414_84_fu_1322_p2;
wire   [7:0] xor_ln414_82_fu_1300_p2;
wire   [7:0] xor_ln414_80_fu_1278_p2;
wire   [7:0] xor_ln414_78_fu_1256_p2;
wire   [7:0] xor_ln414_76_fu_1234_p2;
wire   [7:0] xor_ln414_74_fu_1212_p2;
wire   [7:0] xor_ln414_72_fu_1190_p2;
wire   [7:0] xor_ln414_70_fu_1168_p2;
wire   [7:0] xor_ln414_68_fu_1146_p2;
wire   [7:0] xor_ln414_66_fu_1125_p2;
wire   [7:0] xor_ln414_64_fu_1104_p2;
wire   [7:0] xor_ln414_62_fu_1083_p2;
wire   [7:0] xor_ln414_60_fu_1068_p2;
wire   [7:0] xor_ln414_58_fu_1046_p2;
wire   [7:0] xor_ln414_56_fu_1024_p2;
wire   [7:0] xor_ln414_54_fu_1002_p2;
wire   [7:0] xor_ln414_52_fu_980_p2;
wire   [7:0] xor_ln414_50_fu_958_p2;
wire   [7:0] xor_ln414_48_fu_936_p2;
wire   [7:0] xor_ln414_46_fu_914_p2;
wire   [7:0] xor_ln414_44_fu_892_p2;
wire   [7:0] xor_ln414_42_fu_870_p2;
wire   [7:0] xor_ln414_40_fu_848_p2;
wire   [7:0] xor_ln414_38_fu_826_p2;
wire   [7:0] xor_ln414_36_fu_804_p2;
wire   [7:0] xor_ln414_34_fu_782_p2;
wire   [7:0] xor_ln414_32_fu_760_p2;
wire   [7:0] xor_ln414_30_fu_738_p2;
wire   [7:0] xor_ln414_28_fu_716_p2;
wire   [7:0] xor_ln414_26_fu_694_p2;
wire   [7:0] xor_ln414_24_fu_672_p2;
wire   [7:0] xor_ln414_22_fu_650_p2;
wire   [7:0] xor_ln414_20_fu_628_p2;
wire   [7:0] xor_ln414_18_fu_606_p2;
wire   [7:0] xor_ln414_16_fu_584_p2;
wire   [7:0] xor_ln414_14_fu_562_p2;
wire   [7:0] xor_ln414_12_fu_540_p2;
wire   [7:0] xor_ln414_10_fu_518_p2;
wire   [7:0] xor_ln414_8_fu_496_p2;
wire   [7:0] xor_ln414_6_fu_474_p2;
wire   [7:0] xor_ln414_4_fu_452_p2;
wire   [7:0] xor_ln414_2_fu_430_p2;
wire   [7:0] xor_ln414_fu_408_p2;
wire   [7:0] xor_ln414_125_fu_1901_p2;
wire   [7:0] xor_ln414_123_fu_1746_p2;
wire   [7:0] xor_ln414_121_fu_1724_p2;
wire   [7:0] xor_ln414_119_fu_1702_p2;
wire   [7:0] xor_ln414_117_fu_1680_p2;
wire   [7:0] xor_ln414_115_fu_1658_p2;
wire   [7:0] xor_ln414_113_fu_1636_p2;
wire   [7:0] xor_ln414_111_fu_1614_p2;
wire   [7:0] xor_ln414_109_fu_1592_p2;
wire   [7:0] xor_ln414_107_fu_1570_p2;
wire   [7:0] xor_ln414_105_fu_1548_p2;
wire   [7:0] xor_ln414_103_fu_1526_p2;
wire   [7:0] xor_ln414_101_fu_1504_p2;
wire   [7:0] xor_ln414_99_fu_1482_p2;
wire   [7:0] xor_ln414_97_fu_1460_p2;
wire   [7:0] xor_ln414_95_fu_1438_p2;
wire   [7:0] xor_ln414_93_fu_1416_p2;
wire   [7:0] xor_ln414_91_fu_1394_p2;
wire   [7:0] xor_ln414_89_fu_1372_p2;
wire   [7:0] xor_ln414_87_fu_1350_p2;
wire   [7:0] xor_ln414_85_fu_1328_p2;
wire   [7:0] xor_ln414_83_fu_1306_p2;
wire   [7:0] xor_ln414_81_fu_1284_p2;
wire   [7:0] xor_ln414_79_fu_1262_p2;
wire   [7:0] xor_ln414_77_fu_1240_p2;
wire   [7:0] xor_ln414_75_fu_1218_p2;
wire   [7:0] xor_ln414_73_fu_1196_p2;
wire   [7:0] xor_ln414_71_fu_1174_p2;
wire   [7:0] xor_ln414_69_fu_1152_p2;
wire   [7:0] xor_ln414_67_fu_1131_p2;
wire   [7:0] xor_ln414_65_fu_1110_p2;
wire   [7:0] xor_ln414_63_fu_1089_p2;
wire   [7:0] xor_ln414_61_fu_1074_p2;
wire   [7:0] xor_ln414_59_fu_1052_p2;
wire   [7:0] xor_ln414_57_fu_1030_p2;
wire   [7:0] xor_ln414_55_fu_1008_p2;
wire   [7:0] xor_ln414_53_fu_986_p2;
wire   [7:0] xor_ln414_51_fu_964_p2;
wire   [7:0] xor_ln414_49_fu_942_p2;
wire   [7:0] xor_ln414_47_fu_920_p2;
wire   [7:0] xor_ln414_45_fu_898_p2;
wire   [7:0] xor_ln414_43_fu_876_p2;
wire   [7:0] xor_ln414_41_fu_854_p2;
wire   [7:0] xor_ln414_39_fu_832_p2;
wire   [7:0] xor_ln414_37_fu_810_p2;
wire   [7:0] xor_ln414_35_fu_788_p2;
wire   [7:0] xor_ln414_33_fu_766_p2;
wire   [7:0] xor_ln414_31_fu_744_p2;
wire   [7:0] xor_ln414_29_fu_722_p2;
wire   [7:0] xor_ln414_27_fu_700_p2;
wire   [7:0] xor_ln414_25_fu_678_p2;
wire   [7:0] xor_ln414_23_fu_656_p2;
wire   [7:0] xor_ln414_21_fu_634_p2;
wire   [7:0] xor_ln414_19_fu_612_p2;
wire   [7:0] xor_ln414_17_fu_590_p2;
wire   [7:0] xor_ln414_15_fu_568_p2;
wire   [7:0] xor_ln414_13_fu_546_p2;
wire   [7:0] xor_ln414_11_fu_524_p2;
wire   [7:0] xor_ln414_9_fu_502_p2;
wire   [7:0] xor_ln414_7_fu_480_p2;
wire   [7:0] xor_ln414_5_fu_458_p2;
wire   [7:0] xor_ln414_3_fu_436_p2;
wire   [7:0] xor_ln414_1_fu_414_p2;
wire   [511:0] p_Result_s_fu_387_p5;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_done_reg = 1'b0;
end

hmac_sha256_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln120_fu_361_p2 == 1'd0) & (ap_start_int == 1'b1))) begin
            i_fu_316 <= i_9_fu_367_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            i_fu_316 <= 4'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
                        p_Val2_s_fu_312[32] <= 1'b0;
            p_Val2_s_fu_312[33] <= 1'b0;
            p_Val2_s_fu_312[34] <= 1'b0;
            p_Val2_s_fu_312[35] <= 1'b0;
            p_Val2_s_fu_312[36] <= 1'b0;
            p_Val2_s_fu_312[37] <= 1'b0;
            p_Val2_s_fu_312[38] <= 1'b0;
            p_Val2_s_fu_312[39] <= 1'b0;
            p_Val2_s_fu_312[40] <= 1'b0;
            p_Val2_s_fu_312[41] <= 1'b0;
            p_Val2_s_fu_312[42] <= 1'b0;
            p_Val2_s_fu_312[43] <= 1'b0;
            p_Val2_s_fu_312[44] <= 1'b0;
            p_Val2_s_fu_312[45] <= 1'b0;
            p_Val2_s_fu_312[46] <= 1'b0;
            p_Val2_s_fu_312[47] <= 1'b0;
            p_Val2_s_fu_312[48] <= 1'b0;
            p_Val2_s_fu_312[49] <= 1'b0;
            p_Val2_s_fu_312[50] <= 1'b0;
            p_Val2_s_fu_312[51] <= 1'b0;
            p_Val2_s_fu_312[52] <= 1'b0;
            p_Val2_s_fu_312[53] <= 1'b0;
            p_Val2_s_fu_312[54] <= 1'b0;
            p_Val2_s_fu_312[55] <= 1'b0;
            p_Val2_s_fu_312[56] <= 1'b0;
            p_Val2_s_fu_312[57] <= 1'b0;
            p_Val2_s_fu_312[58] <= 1'b0;
            p_Val2_s_fu_312[59] <= 1'b0;
            p_Val2_s_fu_312[60] <= 1'b0;
            p_Val2_s_fu_312[61] <= 1'b0;
            p_Val2_s_fu_312[62] <= 1'b0;
            p_Val2_s_fu_312[63] <= 1'b0;
            p_Val2_s_fu_312[64] <= 1'b0;
            p_Val2_s_fu_312[65] <= 1'b0;
            p_Val2_s_fu_312[66] <= 1'b0;
            p_Val2_s_fu_312[67] <= 1'b0;
            p_Val2_s_fu_312[68] <= 1'b0;
            p_Val2_s_fu_312[69] <= 1'b0;
            p_Val2_s_fu_312[70] <= 1'b0;
            p_Val2_s_fu_312[71] <= 1'b0;
            p_Val2_s_fu_312[72] <= 1'b0;
            p_Val2_s_fu_312[73] <= 1'b0;
            p_Val2_s_fu_312[74] <= 1'b0;
            p_Val2_s_fu_312[75] <= 1'b0;
            p_Val2_s_fu_312[76] <= 1'b0;
            p_Val2_s_fu_312[77] <= 1'b0;
            p_Val2_s_fu_312[78] <= 1'b0;
            p_Val2_s_fu_312[79] <= 1'b0;
            p_Val2_s_fu_312[80] <= 1'b0;
            p_Val2_s_fu_312[81] <= 1'b0;
            p_Val2_s_fu_312[82] <= 1'b0;
            p_Val2_s_fu_312[83] <= 1'b0;
            p_Val2_s_fu_312[84] <= 1'b0;
            p_Val2_s_fu_312[85] <= 1'b0;
            p_Val2_s_fu_312[86] <= 1'b0;
            p_Val2_s_fu_312[87] <= 1'b0;
            p_Val2_s_fu_312[88] <= 1'b0;
            p_Val2_s_fu_312[89] <= 1'b0;
            p_Val2_s_fu_312[90] <= 1'b0;
            p_Val2_s_fu_312[91] <= 1'b0;
            p_Val2_s_fu_312[92] <= 1'b0;
            p_Val2_s_fu_312[93] <= 1'b0;
            p_Val2_s_fu_312[94] <= 1'b0;
            p_Val2_s_fu_312[95] <= 1'b0;
            p_Val2_s_fu_312[96] <= 1'b0;
            p_Val2_s_fu_312[97] <= 1'b0;
            p_Val2_s_fu_312[98] <= 1'b0;
            p_Val2_s_fu_312[99] <= 1'b0;
            p_Val2_s_fu_312[100] <= 1'b0;
            p_Val2_s_fu_312[101] <= 1'b0;
            p_Val2_s_fu_312[102] <= 1'b0;
            p_Val2_s_fu_312[103] <= 1'b0;
            p_Val2_s_fu_312[104] <= 1'b0;
            p_Val2_s_fu_312[105] <= 1'b0;
            p_Val2_s_fu_312[106] <= 1'b0;
            p_Val2_s_fu_312[107] <= 1'b0;
            p_Val2_s_fu_312[108] <= 1'b0;
            p_Val2_s_fu_312[109] <= 1'b0;
            p_Val2_s_fu_312[110] <= 1'b0;
            p_Val2_s_fu_312[111] <= 1'b0;
            p_Val2_s_fu_312[112] <= 1'b0;
            p_Val2_s_fu_312[113] <= 1'b0;
            p_Val2_s_fu_312[114] <= 1'b0;
            p_Val2_s_fu_312[115] <= 1'b0;
            p_Val2_s_fu_312[116] <= 1'b0;
            p_Val2_s_fu_312[117] <= 1'b0;
            p_Val2_s_fu_312[118] <= 1'b0;
            p_Val2_s_fu_312[119] <= 1'b0;
            p_Val2_s_fu_312[120] <= 1'b0;
            p_Val2_s_fu_312[121] <= 1'b0;
            p_Val2_s_fu_312[122] <= 1'b0;
            p_Val2_s_fu_312[123] <= 1'b0;
            p_Val2_s_fu_312[124] <= 1'b0;
            p_Val2_s_fu_312[125] <= 1'b0;
            p_Val2_s_fu_312[126] <= 1'b0;
            p_Val2_s_fu_312[127] <= 1'b0;
            p_Val2_s_fu_312[128] <= 1'b0;
            p_Val2_s_fu_312[129] <= 1'b0;
            p_Val2_s_fu_312[130] <= 1'b0;
            p_Val2_s_fu_312[131] <= 1'b0;
            p_Val2_s_fu_312[132] <= 1'b0;
            p_Val2_s_fu_312[133] <= 1'b0;
            p_Val2_s_fu_312[134] <= 1'b0;
            p_Val2_s_fu_312[135] <= 1'b0;
            p_Val2_s_fu_312[136] <= 1'b0;
            p_Val2_s_fu_312[137] <= 1'b0;
            p_Val2_s_fu_312[138] <= 1'b0;
            p_Val2_s_fu_312[139] <= 1'b0;
            p_Val2_s_fu_312[140] <= 1'b0;
            p_Val2_s_fu_312[141] <= 1'b0;
            p_Val2_s_fu_312[142] <= 1'b0;
            p_Val2_s_fu_312[143] <= 1'b0;
            p_Val2_s_fu_312[144] <= 1'b0;
            p_Val2_s_fu_312[145] <= 1'b0;
            p_Val2_s_fu_312[146] <= 1'b0;
            p_Val2_s_fu_312[147] <= 1'b0;
            p_Val2_s_fu_312[148] <= 1'b0;
            p_Val2_s_fu_312[149] <= 1'b0;
            p_Val2_s_fu_312[150] <= 1'b0;
            p_Val2_s_fu_312[151] <= 1'b0;
            p_Val2_s_fu_312[152] <= 1'b0;
            p_Val2_s_fu_312[153] <= 1'b0;
            p_Val2_s_fu_312[154] <= 1'b0;
            p_Val2_s_fu_312[155] <= 1'b0;
            p_Val2_s_fu_312[156] <= 1'b0;
            p_Val2_s_fu_312[157] <= 1'b0;
            p_Val2_s_fu_312[158] <= 1'b0;
            p_Val2_s_fu_312[159] <= 1'b0;
            p_Val2_s_fu_312[160] <= 1'b0;
            p_Val2_s_fu_312[161] <= 1'b0;
            p_Val2_s_fu_312[162] <= 1'b0;
            p_Val2_s_fu_312[163] <= 1'b0;
            p_Val2_s_fu_312[164] <= 1'b0;
            p_Val2_s_fu_312[165] <= 1'b0;
            p_Val2_s_fu_312[166] <= 1'b0;
            p_Val2_s_fu_312[167] <= 1'b0;
            p_Val2_s_fu_312[168] <= 1'b0;
            p_Val2_s_fu_312[169] <= 1'b0;
            p_Val2_s_fu_312[170] <= 1'b0;
            p_Val2_s_fu_312[171] <= 1'b0;
            p_Val2_s_fu_312[172] <= 1'b0;
            p_Val2_s_fu_312[173] <= 1'b0;
            p_Val2_s_fu_312[174] <= 1'b0;
            p_Val2_s_fu_312[175] <= 1'b0;
            p_Val2_s_fu_312[176] <= 1'b0;
            p_Val2_s_fu_312[177] <= 1'b0;
            p_Val2_s_fu_312[178] <= 1'b0;
            p_Val2_s_fu_312[179] <= 1'b0;
            p_Val2_s_fu_312[180] <= 1'b0;
            p_Val2_s_fu_312[181] <= 1'b0;
            p_Val2_s_fu_312[182] <= 1'b0;
            p_Val2_s_fu_312[183] <= 1'b0;
            p_Val2_s_fu_312[184] <= 1'b0;
            p_Val2_s_fu_312[185] <= 1'b0;
            p_Val2_s_fu_312[186] <= 1'b0;
            p_Val2_s_fu_312[187] <= 1'b0;
            p_Val2_s_fu_312[188] <= 1'b0;
            p_Val2_s_fu_312[189] <= 1'b0;
            p_Val2_s_fu_312[190] <= 1'b0;
            p_Val2_s_fu_312[191] <= 1'b0;
            p_Val2_s_fu_312[192] <= 1'b0;
            p_Val2_s_fu_312[193] <= 1'b0;
            p_Val2_s_fu_312[194] <= 1'b0;
            p_Val2_s_fu_312[195] <= 1'b0;
            p_Val2_s_fu_312[196] <= 1'b0;
            p_Val2_s_fu_312[197] <= 1'b0;
            p_Val2_s_fu_312[198] <= 1'b0;
            p_Val2_s_fu_312[199] <= 1'b0;
            p_Val2_s_fu_312[200] <= 1'b0;
            p_Val2_s_fu_312[201] <= 1'b0;
            p_Val2_s_fu_312[202] <= 1'b0;
            p_Val2_s_fu_312[203] <= 1'b0;
            p_Val2_s_fu_312[204] <= 1'b0;
            p_Val2_s_fu_312[205] <= 1'b0;
            p_Val2_s_fu_312[206] <= 1'b0;
            p_Val2_s_fu_312[207] <= 1'b0;
            p_Val2_s_fu_312[208] <= 1'b0;
            p_Val2_s_fu_312[209] <= 1'b0;
            p_Val2_s_fu_312[210] <= 1'b0;
            p_Val2_s_fu_312[211] <= 1'b0;
            p_Val2_s_fu_312[212] <= 1'b0;
            p_Val2_s_fu_312[213] <= 1'b0;
            p_Val2_s_fu_312[214] <= 1'b0;
            p_Val2_s_fu_312[215] <= 1'b0;
            p_Val2_s_fu_312[216] <= 1'b0;
            p_Val2_s_fu_312[217] <= 1'b0;
            p_Val2_s_fu_312[218] <= 1'b0;
            p_Val2_s_fu_312[219] <= 1'b0;
            p_Val2_s_fu_312[220] <= 1'b0;
            p_Val2_s_fu_312[221] <= 1'b0;
            p_Val2_s_fu_312[222] <= 1'b0;
            p_Val2_s_fu_312[223] <= 1'b0;
            p_Val2_s_fu_312[224] <= 1'b0;
            p_Val2_s_fu_312[225] <= 1'b0;
            p_Val2_s_fu_312[226] <= 1'b0;
            p_Val2_s_fu_312[227] <= 1'b0;
            p_Val2_s_fu_312[228] <= 1'b0;
            p_Val2_s_fu_312[229] <= 1'b0;
            p_Val2_s_fu_312[230] <= 1'b0;
            p_Val2_s_fu_312[231] <= 1'b0;
            p_Val2_s_fu_312[232] <= 1'b0;
            p_Val2_s_fu_312[233] <= 1'b0;
            p_Val2_s_fu_312[234] <= 1'b0;
            p_Val2_s_fu_312[235] <= 1'b0;
            p_Val2_s_fu_312[236] <= 1'b0;
            p_Val2_s_fu_312[237] <= 1'b0;
            p_Val2_s_fu_312[238] <= 1'b0;
            p_Val2_s_fu_312[239] <= 1'b0;
            p_Val2_s_fu_312[240] <= 1'b0;
            p_Val2_s_fu_312[241] <= 1'b0;
            p_Val2_s_fu_312[242] <= 1'b0;
            p_Val2_s_fu_312[243] <= 1'b0;
            p_Val2_s_fu_312[244] <= 1'b0;
            p_Val2_s_fu_312[245] <= 1'b0;
            p_Val2_s_fu_312[246] <= 1'b0;
            p_Val2_s_fu_312[247] <= 1'b0;
            p_Val2_s_fu_312[248] <= 1'b0;
            p_Val2_s_fu_312[249] <= 1'b0;
            p_Val2_s_fu_312[250] <= 1'b0;
            p_Val2_s_fu_312[251] <= 1'b0;
            p_Val2_s_fu_312[252] <= 1'b0;
            p_Val2_s_fu_312[253] <= 1'b0;
            p_Val2_s_fu_312[254] <= 1'b0;
            p_Val2_s_fu_312[255] <= 1'b0;
            p_Val2_s_fu_312[256] <= 1'b0;
            p_Val2_s_fu_312[257] <= 1'b0;
            p_Val2_s_fu_312[258] <= 1'b0;
            p_Val2_s_fu_312[259] <= 1'b0;
            p_Val2_s_fu_312[260] <= 1'b0;
            p_Val2_s_fu_312[261] <= 1'b0;
            p_Val2_s_fu_312[262] <= 1'b0;
            p_Val2_s_fu_312[263] <= 1'b0;
            p_Val2_s_fu_312[264] <= 1'b0;
            p_Val2_s_fu_312[265] <= 1'b0;
            p_Val2_s_fu_312[266] <= 1'b0;
            p_Val2_s_fu_312[267] <= 1'b0;
            p_Val2_s_fu_312[268] <= 1'b0;
            p_Val2_s_fu_312[269] <= 1'b0;
            p_Val2_s_fu_312[270] <= 1'b0;
            p_Val2_s_fu_312[271] <= 1'b0;
            p_Val2_s_fu_312[272] <= 1'b0;
            p_Val2_s_fu_312[273] <= 1'b0;
            p_Val2_s_fu_312[274] <= 1'b0;
            p_Val2_s_fu_312[275] <= 1'b0;
            p_Val2_s_fu_312[276] <= 1'b0;
            p_Val2_s_fu_312[277] <= 1'b0;
            p_Val2_s_fu_312[278] <= 1'b0;
            p_Val2_s_fu_312[279] <= 1'b0;
            p_Val2_s_fu_312[280] <= 1'b0;
            p_Val2_s_fu_312[281] <= 1'b0;
            p_Val2_s_fu_312[282] <= 1'b0;
            p_Val2_s_fu_312[283] <= 1'b0;
            p_Val2_s_fu_312[284] <= 1'b0;
            p_Val2_s_fu_312[285] <= 1'b0;
            p_Val2_s_fu_312[286] <= 1'b0;
            p_Val2_s_fu_312[287] <= 1'b0;
            p_Val2_s_fu_312[288] <= 1'b0;
            p_Val2_s_fu_312[289] <= 1'b0;
            p_Val2_s_fu_312[290] <= 1'b0;
            p_Val2_s_fu_312[291] <= 1'b0;
            p_Val2_s_fu_312[292] <= 1'b0;
            p_Val2_s_fu_312[293] <= 1'b0;
            p_Val2_s_fu_312[294] <= 1'b0;
            p_Val2_s_fu_312[295] <= 1'b0;
            p_Val2_s_fu_312[296] <= 1'b0;
            p_Val2_s_fu_312[297] <= 1'b0;
            p_Val2_s_fu_312[298] <= 1'b0;
            p_Val2_s_fu_312[299] <= 1'b0;
            p_Val2_s_fu_312[300] <= 1'b0;
            p_Val2_s_fu_312[301] <= 1'b0;
            p_Val2_s_fu_312[302] <= 1'b0;
            p_Val2_s_fu_312[303] <= 1'b0;
            p_Val2_s_fu_312[304] <= 1'b0;
            p_Val2_s_fu_312[305] <= 1'b0;
            p_Val2_s_fu_312[306] <= 1'b0;
            p_Val2_s_fu_312[307] <= 1'b0;
            p_Val2_s_fu_312[308] <= 1'b0;
            p_Val2_s_fu_312[309] <= 1'b0;
            p_Val2_s_fu_312[310] <= 1'b0;
            p_Val2_s_fu_312[311] <= 1'b0;
            p_Val2_s_fu_312[312] <= 1'b0;
            p_Val2_s_fu_312[313] <= 1'b0;
            p_Val2_s_fu_312[314] <= 1'b0;
            p_Val2_s_fu_312[315] <= 1'b0;
            p_Val2_s_fu_312[316] <= 1'b0;
            p_Val2_s_fu_312[317] <= 1'b0;
            p_Val2_s_fu_312[318] <= 1'b0;
            p_Val2_s_fu_312[319] <= 1'b0;
            p_Val2_s_fu_312[320] <= 1'b0;
            p_Val2_s_fu_312[321] <= 1'b0;
            p_Val2_s_fu_312[322] <= 1'b0;
            p_Val2_s_fu_312[323] <= 1'b0;
            p_Val2_s_fu_312[324] <= 1'b0;
            p_Val2_s_fu_312[325] <= 1'b0;
            p_Val2_s_fu_312[326] <= 1'b0;
            p_Val2_s_fu_312[327] <= 1'b0;
            p_Val2_s_fu_312[328] <= 1'b0;
            p_Val2_s_fu_312[329] <= 1'b0;
            p_Val2_s_fu_312[330] <= 1'b0;
            p_Val2_s_fu_312[331] <= 1'b0;
            p_Val2_s_fu_312[332] <= 1'b0;
            p_Val2_s_fu_312[333] <= 1'b0;
            p_Val2_s_fu_312[334] <= 1'b0;
            p_Val2_s_fu_312[335] <= 1'b0;
            p_Val2_s_fu_312[336] <= 1'b0;
            p_Val2_s_fu_312[337] <= 1'b0;
            p_Val2_s_fu_312[338] <= 1'b0;
            p_Val2_s_fu_312[339] <= 1'b0;
            p_Val2_s_fu_312[340] <= 1'b0;
            p_Val2_s_fu_312[341] <= 1'b0;
            p_Val2_s_fu_312[342] <= 1'b0;
            p_Val2_s_fu_312[343] <= 1'b0;
            p_Val2_s_fu_312[344] <= 1'b0;
            p_Val2_s_fu_312[345] <= 1'b0;
            p_Val2_s_fu_312[346] <= 1'b0;
            p_Val2_s_fu_312[347] <= 1'b0;
            p_Val2_s_fu_312[348] <= 1'b0;
            p_Val2_s_fu_312[349] <= 1'b0;
            p_Val2_s_fu_312[350] <= 1'b0;
            p_Val2_s_fu_312[351] <= 1'b0;
            p_Val2_s_fu_312[352] <= 1'b0;
            p_Val2_s_fu_312[353] <= 1'b0;
            p_Val2_s_fu_312[354] <= 1'b0;
            p_Val2_s_fu_312[355] <= 1'b0;
            p_Val2_s_fu_312[356] <= 1'b0;
            p_Val2_s_fu_312[357] <= 1'b0;
            p_Val2_s_fu_312[358] <= 1'b0;
            p_Val2_s_fu_312[359] <= 1'b0;
            p_Val2_s_fu_312[360] <= 1'b0;
            p_Val2_s_fu_312[361] <= 1'b0;
            p_Val2_s_fu_312[362] <= 1'b0;
            p_Val2_s_fu_312[363] <= 1'b0;
            p_Val2_s_fu_312[364] <= 1'b0;
            p_Val2_s_fu_312[365] <= 1'b0;
            p_Val2_s_fu_312[366] <= 1'b0;
            p_Val2_s_fu_312[367] <= 1'b0;
            p_Val2_s_fu_312[368] <= 1'b0;
            p_Val2_s_fu_312[369] <= 1'b0;
            p_Val2_s_fu_312[370] <= 1'b0;
            p_Val2_s_fu_312[371] <= 1'b0;
            p_Val2_s_fu_312[372] <= 1'b0;
            p_Val2_s_fu_312[373] <= 1'b0;
            p_Val2_s_fu_312[374] <= 1'b0;
            p_Val2_s_fu_312[375] <= 1'b0;
            p_Val2_s_fu_312[376] <= 1'b0;
            p_Val2_s_fu_312[377] <= 1'b0;
            p_Val2_s_fu_312[378] <= 1'b0;
            p_Val2_s_fu_312[379] <= 1'b0;
            p_Val2_s_fu_312[380] <= 1'b0;
            p_Val2_s_fu_312[381] <= 1'b0;
            p_Val2_s_fu_312[382] <= 1'b0;
            p_Val2_s_fu_312[383] <= 1'b0;
            p_Val2_s_fu_312[384] <= 1'b0;
            p_Val2_s_fu_312[385] <= 1'b0;
            p_Val2_s_fu_312[386] <= 1'b0;
            p_Val2_s_fu_312[387] <= 1'b0;
            p_Val2_s_fu_312[388] <= 1'b0;
            p_Val2_s_fu_312[389] <= 1'b0;
            p_Val2_s_fu_312[390] <= 1'b0;
            p_Val2_s_fu_312[391] <= 1'b0;
            p_Val2_s_fu_312[392] <= 1'b0;
            p_Val2_s_fu_312[393] <= 1'b0;
            p_Val2_s_fu_312[394] <= 1'b0;
            p_Val2_s_fu_312[395] <= 1'b0;
            p_Val2_s_fu_312[396] <= 1'b0;
            p_Val2_s_fu_312[397] <= 1'b0;
            p_Val2_s_fu_312[398] <= 1'b0;
            p_Val2_s_fu_312[399] <= 1'b0;
            p_Val2_s_fu_312[400] <= 1'b0;
            p_Val2_s_fu_312[401] <= 1'b0;
            p_Val2_s_fu_312[402] <= 1'b0;
            p_Val2_s_fu_312[403] <= 1'b0;
            p_Val2_s_fu_312[404] <= 1'b0;
            p_Val2_s_fu_312[405] <= 1'b0;
            p_Val2_s_fu_312[406] <= 1'b0;
            p_Val2_s_fu_312[407] <= 1'b0;
            p_Val2_s_fu_312[408] <= 1'b0;
            p_Val2_s_fu_312[409] <= 1'b0;
            p_Val2_s_fu_312[410] <= 1'b0;
            p_Val2_s_fu_312[411] <= 1'b0;
            p_Val2_s_fu_312[412] <= 1'b0;
            p_Val2_s_fu_312[413] <= 1'b0;
            p_Val2_s_fu_312[414] <= 1'b0;
            p_Val2_s_fu_312[415] <= 1'b0;
            p_Val2_s_fu_312[416] <= 1'b0;
            p_Val2_s_fu_312[417] <= 1'b0;
            p_Val2_s_fu_312[418] <= 1'b0;
            p_Val2_s_fu_312[419] <= 1'b0;
            p_Val2_s_fu_312[420] <= 1'b0;
            p_Val2_s_fu_312[421] <= 1'b0;
            p_Val2_s_fu_312[422] <= 1'b0;
            p_Val2_s_fu_312[423] <= 1'b0;
            p_Val2_s_fu_312[424] <= 1'b0;
            p_Val2_s_fu_312[425] <= 1'b0;
            p_Val2_s_fu_312[426] <= 1'b0;
            p_Val2_s_fu_312[427] <= 1'b0;
            p_Val2_s_fu_312[428] <= 1'b0;
            p_Val2_s_fu_312[429] <= 1'b0;
            p_Val2_s_fu_312[430] <= 1'b0;
            p_Val2_s_fu_312[431] <= 1'b0;
            p_Val2_s_fu_312[432] <= 1'b0;
            p_Val2_s_fu_312[433] <= 1'b0;
            p_Val2_s_fu_312[434] <= 1'b0;
            p_Val2_s_fu_312[435] <= 1'b0;
            p_Val2_s_fu_312[436] <= 1'b0;
            p_Val2_s_fu_312[437] <= 1'b0;
            p_Val2_s_fu_312[438] <= 1'b0;
            p_Val2_s_fu_312[439] <= 1'b0;
            p_Val2_s_fu_312[440] <= 1'b0;
            p_Val2_s_fu_312[441] <= 1'b0;
            p_Val2_s_fu_312[442] <= 1'b0;
            p_Val2_s_fu_312[443] <= 1'b0;
            p_Val2_s_fu_312[444] <= 1'b0;
            p_Val2_s_fu_312[445] <= 1'b0;
            p_Val2_s_fu_312[446] <= 1'b0;
            p_Val2_s_fu_312[447] <= 1'b0;
            p_Val2_s_fu_312[448] <= 1'b0;
            p_Val2_s_fu_312[449] <= 1'b0;
            p_Val2_s_fu_312[450] <= 1'b0;
            p_Val2_s_fu_312[451] <= 1'b0;
            p_Val2_s_fu_312[452] <= 1'b0;
            p_Val2_s_fu_312[453] <= 1'b0;
            p_Val2_s_fu_312[454] <= 1'b0;
            p_Val2_s_fu_312[455] <= 1'b0;
            p_Val2_s_fu_312[456] <= 1'b0;
            p_Val2_s_fu_312[457] <= 1'b0;
            p_Val2_s_fu_312[458] <= 1'b0;
            p_Val2_s_fu_312[459] <= 1'b0;
            p_Val2_s_fu_312[460] <= 1'b0;
            p_Val2_s_fu_312[461] <= 1'b0;
            p_Val2_s_fu_312[462] <= 1'b0;
            p_Val2_s_fu_312[463] <= 1'b0;
            p_Val2_s_fu_312[464] <= 1'b0;
            p_Val2_s_fu_312[465] <= 1'b0;
            p_Val2_s_fu_312[466] <= 1'b0;
            p_Val2_s_fu_312[467] <= 1'b0;
            p_Val2_s_fu_312[468] <= 1'b0;
            p_Val2_s_fu_312[469] <= 1'b0;
            p_Val2_s_fu_312[470] <= 1'b0;
            p_Val2_s_fu_312[471] <= 1'b0;
            p_Val2_s_fu_312[472] <= 1'b0;
            p_Val2_s_fu_312[473] <= 1'b0;
            p_Val2_s_fu_312[474] <= 1'b0;
            p_Val2_s_fu_312[475] <= 1'b0;
            p_Val2_s_fu_312[476] <= 1'b0;
            p_Val2_s_fu_312[477] <= 1'b0;
            p_Val2_s_fu_312[478] <= 1'b0;
            p_Val2_s_fu_312[479] <= 1'b0;
            p_Val2_s_fu_312[480] <= 1'b0;
            p_Val2_s_fu_312[481] <= 1'b0;
            p_Val2_s_fu_312[482] <= 1'b0;
            p_Val2_s_fu_312[483] <= 1'b0;
            p_Val2_s_fu_312[484] <= 1'b0;
            p_Val2_s_fu_312[485] <= 1'b0;
            p_Val2_s_fu_312[486] <= 1'b0;
            p_Val2_s_fu_312[487] <= 1'b0;
            p_Val2_s_fu_312[488] <= 1'b0;
            p_Val2_s_fu_312[489] <= 1'b0;
            p_Val2_s_fu_312[490] <= 1'b0;
            p_Val2_s_fu_312[491] <= 1'b0;
            p_Val2_s_fu_312[492] <= 1'b0;
            p_Val2_s_fu_312[493] <= 1'b0;
            p_Val2_s_fu_312[494] <= 1'b0;
            p_Val2_s_fu_312[495] <= 1'b0;
            p_Val2_s_fu_312[496] <= 1'b0;
            p_Val2_s_fu_312[497] <= 1'b0;
            p_Val2_s_fu_312[498] <= 1'b0;
            p_Val2_s_fu_312[499] <= 1'b0;
            p_Val2_s_fu_312[500] <= 1'b0;
            p_Val2_s_fu_312[501] <= 1'b0;
            p_Val2_s_fu_312[502] <= 1'b0;
            p_Val2_s_fu_312[503] <= 1'b0;
            p_Val2_s_fu_312[504] <= 1'b0;
            p_Val2_s_fu_312[505] <= 1'b0;
            p_Val2_s_fu_312[506] <= 1'b0;
            p_Val2_s_fu_312[507] <= 1'b0;
            p_Val2_s_fu_312[508] <= 1'b0;
            p_Val2_s_fu_312[509] <= 1'b0;
            p_Val2_s_fu_312[510] <= 1'b0;
            p_Val2_s_fu_312[511] <= 1'b0;
        end else if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
                        p_Val2_s_fu_312[511 : 32] <= empty_fu_2040_p2[511 : 32];
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln120_fu_361_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln120_1_reg_2077 <= icmp_ln120_1_fu_373_p2;
        tmp_V_reg_2068 <= keyStrm_TDATA;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln120_fu_361_p2 == 1'd1) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start_int == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_i_8 = 4'd0;
    end else begin
        ap_sig_allocacmp_i_8 = i_fu_316;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (icmp_ln120_1_reg_2077 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        eKipadStrm6_blk_n = eKipadStrm6_full_n;
    end else begin
        eKipadStrm6_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln120_1_reg_2077 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        eKipadStrm6_write = 1'b1;
    end else begin
        eKipadStrm6_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (icmp_ln120_fu_361_p2 == 1'd0) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        keyStrm_TDATA_blk_n = keyStrm_TVALID;
    end else begin
        keyStrm_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln120_fu_361_p2 == 1'd0) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        keyStrm_TREADY = 1'b1;
    end else begin
        keyStrm_TREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (icmp_ln120_1_reg_2077 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        kipadStrm7_blk_n = kipadStrm7_full_n;
    end else begin
        kipadStrm7_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln120_1_reg_2077 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        kipadStrm7_write = 1'b1;
    end else begin
        kipadStrm7_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (icmp_ln120_1_reg_2077 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        kopadStrm8_blk_n = kopadStrm8_full_n;
    end else begin
        kopadStrm8_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln120_1_reg_2077 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        kopadStrm8_write = 1'b1;
    end else begin
        kopadStrm8_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((ap_enable_reg_pp0_iter1 == 1'b1) & (((eKipadStrm6_full_n == 1'b0) & (icmp_ln120_1_reg_2077 == 1'd1)) | ((kopadStrm8_full_n == 1'b0) & (icmp_ln120_1_reg_2077 == 1'd1)) | ((icmp_ln120_1_reg_2077 == 1'd1) & (kipadStrm7_full_n == 1'b0)))) | ((icmp_ln120_fu_361_p2 == 1'd0) & (keyStrm_TVALID == 1'b0) & (ap_start_int == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((ap_enable_reg_pp0_iter1 == 1'b1) & (((eKipadStrm6_full_n == 1'b0) & (icmp_ln120_1_reg_2077 == 1'd1)) | ((kopadStrm8_full_n == 1'b0) & (icmp_ln120_1_reg_2077 == 1'd1)) | ((icmp_ln120_1_reg_2077 == 1'd1) & (kipadStrm7_full_n == 1'b0)))) | ((icmp_ln120_fu_361_p2 == 1'd0) & (keyStrm_TVALID == 1'b0) & (ap_start_int == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((ap_enable_reg_pp0_iter1 == 1'b1) & (((eKipadStrm6_full_n == 1'b0) & (icmp_ln120_1_reg_2077 == 1'd1)) | ((kopadStrm8_full_n == 1'b0) & (icmp_ln120_1_reg_2077 == 1'd1)) | ((icmp_ln120_1_reg_2077 == 1'd1) & (kipadStrm7_full_n == 1'b0)))) | ((icmp_ln120_fu_361_p2 == 1'd0) & (keyStrm_TVALID == 1'b0) & (ap_start_int == 1'b1)));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = ((icmp_ln120_fu_361_p2 == 1'd0) & (keyStrm_TVALID == 1'b0));
end

always @ (*) begin
    ap_block_state2_pp0_stage0_iter1 = (((eKipadStrm6_full_n == 1'b0) & (icmp_ln120_1_reg_2077 == 1'd1)) | ((kopadStrm8_full_n == 1'b0) & (icmp_ln120_1_reg_2077 == 1'd1)) | ((icmp_ln120_1_reg_2077 == 1'd1) & (kipadStrm7_full_n == 1'b0)));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign eKipadStrm6_din = 1'd0;

assign empty_fu_2040_p2 = p_Result_s_fu_387_p5 << 512'd32;

assign i_9_fu_367_p2 = (ap_sig_allocacmp_i_8 + 4'd1);

assign icmp_ln120_1_fu_373_p2 = ((i_9_fu_367_p2 == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln120_fu_361_p2 = ((ap_sig_allocacmp_i_8 == 4'd8) ? 1'b1 : 1'b0);

assign kipadStrm7_din = {{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{xor_ln414_124_fu_1762_p2}, {xor_ln414_122_fu_1740_p2}}, {xor_ln414_120_fu_1718_p2}}, {xor_ln414_118_fu_1696_p2}}, {xor_ln414_116_fu_1674_p2}}, {xor_ln414_114_fu_1652_p2}}, {xor_ln414_112_fu_1630_p2}}, {xor_ln414_110_fu_1608_p2}}, {xor_ln414_108_fu_1586_p2}}, {xor_ln414_106_fu_1564_p2}}, {xor_ln414_104_fu_1542_p2}}, {xor_ln414_102_fu_1520_p2}}, {xor_ln414_100_fu_1498_p2}}, {xor_ln414_98_fu_1476_p2}}, {xor_ln414_96_fu_1454_p2}}, {xor_ln414_94_fu_1432_p2}}, {xor_ln414_92_fu_1410_p2}}, {xor_ln414_90_fu_1388_p2}}, {xor_ln414_88_fu_1366_p2}}, {xor_ln414_86_fu_1344_p2}}, {xor_ln414_84_fu_1322_p2}}, {xor_ln414_82_fu_1300_p2}}, {xor_ln414_80_fu_1278_p2}}, {xor_ln414_78_fu_1256_p2}}, {xor_ln414_76_fu_1234_p2}}, {xor_ln414_74_fu_1212_p2}}, {xor_ln414_72_fu_1190_p2}}, {xor_ln414_70_fu_1168_p2}}, {xor_ln414_68_fu_1146_p2}}, {xor_ln414_66_fu_1125_p2}}, {xor_ln414_64_fu_1104_p2}}, {xor_ln414_62_fu_1083_p2}}, {xor_ln414_60_fu_1068_p2}}, {xor_ln414_58_fu_1046_p2}}, {xor_ln414_56_fu_1024_p2}}, {xor_ln414_54_fu_1002_p2}}, {xor_ln414_52_fu_980_p2}}, {xor_ln414_50_fu_958_p2}}, {xor_ln414_48_fu_936_p2}}, {xor_ln414_46_fu_914_p2}}, {xor_ln414_44_fu_892_p2}}, {xor_ln414_42_fu_870_p2}}, {xor_ln414_40_fu_848_p2}}, {xor_ln414_38_fu_826_p2}}, {xor_ln414_36_fu_804_p2}}, {xor_ln414_34_fu_782_p2}}, {xor_ln414_32_fu_760_p2}}, {xor_ln414_30_fu_738_p2}}, {xor_ln414_28_fu_716_p2}}, {xor_ln414_26_fu_694_p2}}, {xor_ln414_24_fu_672_p2}}, {xor_ln414_22_fu_650_p2}}, {xor_ln414_20_fu_628_p2}}, {xor_ln414_18_fu_606_p2}}, {xor_ln414_16_fu_584_p2}}, {xor_ln414_14_fu_562_p2}}, {xor_ln414_12_fu_540_p2}}, {xor_ln414_10_fu_518_p2}}, {xor_ln414_8_fu_496_p2}}, {xor_ln414_6_fu_474_p2}}, {xor_ln414_4_fu_452_p2}}, {xor_ln414_2_fu_430_p2}}, {xor_ln414_fu_408_p2}}, {8'd54}};

assign kopadStrm8_din = {{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{xor_ln414_125_fu_1901_p2}, {xor_ln414_123_fu_1746_p2}}, {xor_ln414_121_fu_1724_p2}}, {xor_ln414_119_fu_1702_p2}}, {xor_ln414_117_fu_1680_p2}}, {xor_ln414_115_fu_1658_p2}}, {xor_ln414_113_fu_1636_p2}}, {xor_ln414_111_fu_1614_p2}}, {xor_ln414_109_fu_1592_p2}}, {xor_ln414_107_fu_1570_p2}}, {xor_ln414_105_fu_1548_p2}}, {xor_ln414_103_fu_1526_p2}}, {xor_ln414_101_fu_1504_p2}}, {xor_ln414_99_fu_1482_p2}}, {xor_ln414_97_fu_1460_p2}}, {xor_ln414_95_fu_1438_p2}}, {xor_ln414_93_fu_1416_p2}}, {xor_ln414_91_fu_1394_p2}}, {xor_ln414_89_fu_1372_p2}}, {xor_ln414_87_fu_1350_p2}}, {xor_ln414_85_fu_1328_p2}}, {xor_ln414_83_fu_1306_p2}}, {xor_ln414_81_fu_1284_p2}}, {xor_ln414_79_fu_1262_p2}}, {xor_ln414_77_fu_1240_p2}}, {xor_ln414_75_fu_1218_p2}}, {xor_ln414_73_fu_1196_p2}}, {xor_ln414_71_fu_1174_p2}}, {xor_ln414_69_fu_1152_p2}}, {xor_ln414_67_fu_1131_p2}}, {xor_ln414_65_fu_1110_p2}}, {xor_ln414_63_fu_1089_p2}}, {xor_ln414_61_fu_1074_p2}}, {xor_ln414_59_fu_1052_p2}}, {xor_ln414_57_fu_1030_p2}}, {xor_ln414_55_fu_1008_p2}}, {xor_ln414_53_fu_986_p2}}, {xor_ln414_51_fu_964_p2}}, {xor_ln414_49_fu_942_p2}}, {xor_ln414_47_fu_920_p2}}, {xor_ln414_45_fu_898_p2}}, {xor_ln414_43_fu_876_p2}}, {xor_ln414_41_fu_854_p2}}, {xor_ln414_39_fu_832_p2}}, {xor_ln414_37_fu_810_p2}}, {xor_ln414_35_fu_788_p2}}, {xor_ln414_33_fu_766_p2}}, {xor_ln414_31_fu_744_p2}}, {xor_ln414_29_fu_722_p2}}, {xor_ln414_27_fu_700_p2}}, {xor_ln414_25_fu_678_p2}}, {xor_ln414_23_fu_656_p2}}, {xor_ln414_21_fu_634_p2}}, {xor_ln414_19_fu_612_p2}}, {xor_ln414_17_fu_590_p2}}, {xor_ln414_15_fu_568_p2}}, {xor_ln414_13_fu_546_p2}}, {xor_ln414_11_fu_524_p2}}, {xor_ln414_9_fu_502_p2}}, {xor_ln414_7_fu_480_p2}}, {xor_ln414_5_fu_458_p2}}, {xor_ln414_3_fu_436_p2}}, {xor_ln414_1_fu_414_p2}}, {8'd92}};

assign p_Result_s_fu_387_p5 = {{p_Val2_s_fu_312[511:288]}, {tmp_V_reg_2068}, {p_Val2_s_fu_312[255:0]}};

assign tmp_100_fu_1752_p4 = {{p_Val2_s_fu_312[511:504]}};

assign tmp_34_fu_1095_p4 = {{tmp_V_reg_2068[15:8]}};

assign tmp_35_fu_1116_p4 = {{tmp_V_reg_2068[23:16]}};

assign tmp_36_fu_1137_p4 = {{tmp_V_reg_2068[31:24]}};

assign tmp_43_fu_420_p4 = {{p_Val2_s_fu_312[23:16]}};

assign tmp_44_fu_442_p4 = {{p_Val2_s_fu_312[31:24]}};

assign tmp_45_fu_464_p4 = {{p_Val2_s_fu_312[39:32]}};

assign tmp_46_fu_486_p4 = {{p_Val2_s_fu_312[47:40]}};

assign tmp_47_fu_508_p4 = {{p_Val2_s_fu_312[55:48]}};

assign tmp_48_fu_530_p4 = {{p_Val2_s_fu_312[63:56]}};

assign tmp_49_fu_552_p4 = {{p_Val2_s_fu_312[71:64]}};

assign tmp_50_fu_574_p4 = {{p_Val2_s_fu_312[79:72]}};

assign tmp_51_fu_596_p4 = {{p_Val2_s_fu_312[87:80]}};

assign tmp_52_fu_618_p4 = {{p_Val2_s_fu_312[95:88]}};

assign tmp_53_fu_640_p4 = {{p_Val2_s_fu_312[103:96]}};

assign tmp_54_fu_662_p4 = {{p_Val2_s_fu_312[111:104]}};

assign tmp_55_fu_684_p4 = {{p_Val2_s_fu_312[119:112]}};

assign tmp_56_fu_706_p4 = {{p_Val2_s_fu_312[127:120]}};

assign tmp_57_fu_728_p4 = {{p_Val2_s_fu_312[135:128]}};

assign tmp_58_fu_750_p4 = {{p_Val2_s_fu_312[143:136]}};

assign tmp_59_fu_772_p4 = {{p_Val2_s_fu_312[151:144]}};

assign tmp_60_fu_794_p4 = {{p_Val2_s_fu_312[159:152]}};

assign tmp_61_fu_816_p4 = {{p_Val2_s_fu_312[167:160]}};

assign tmp_62_fu_838_p4 = {{p_Val2_s_fu_312[175:168]}};

assign tmp_63_fu_860_p4 = {{p_Val2_s_fu_312[183:176]}};

assign tmp_64_fu_882_p4 = {{p_Val2_s_fu_312[191:184]}};

assign tmp_65_fu_904_p4 = {{p_Val2_s_fu_312[199:192]}};

assign tmp_66_fu_926_p4 = {{p_Val2_s_fu_312[207:200]}};

assign tmp_67_fu_948_p4 = {{p_Val2_s_fu_312[215:208]}};

assign tmp_68_fu_970_p4 = {{p_Val2_s_fu_312[223:216]}};

assign tmp_69_fu_992_p4 = {{p_Val2_s_fu_312[231:224]}};

assign tmp_70_fu_1014_p4 = {{p_Val2_s_fu_312[239:232]}};

assign tmp_71_fu_1036_p4 = {{p_Val2_s_fu_312[247:240]}};

assign tmp_72_fu_1058_p4 = {{p_Val2_s_fu_312[255:248]}};

assign tmp_73_fu_1158_p4 = {{p_Val2_s_fu_312[295:288]}};

assign tmp_74_fu_1180_p4 = {{p_Val2_s_fu_312[303:296]}};

assign tmp_75_fu_1202_p4 = {{p_Val2_s_fu_312[311:304]}};

assign tmp_76_fu_1224_p4 = {{p_Val2_s_fu_312[319:312]}};

assign tmp_77_fu_1246_p4 = {{p_Val2_s_fu_312[327:320]}};

assign tmp_78_fu_1268_p4 = {{p_Val2_s_fu_312[335:328]}};

assign tmp_79_fu_1290_p4 = {{p_Val2_s_fu_312[343:336]}};

assign tmp_80_fu_1312_p4 = {{p_Val2_s_fu_312[351:344]}};

assign tmp_81_fu_1334_p4 = {{p_Val2_s_fu_312[359:352]}};

assign tmp_82_fu_1356_p4 = {{p_Val2_s_fu_312[367:360]}};

assign tmp_83_fu_1378_p4 = {{p_Val2_s_fu_312[375:368]}};

assign tmp_84_fu_1400_p4 = {{p_Val2_s_fu_312[383:376]}};

assign tmp_85_fu_1422_p4 = {{p_Val2_s_fu_312[391:384]}};

assign tmp_86_fu_1444_p4 = {{p_Val2_s_fu_312[399:392]}};

assign tmp_87_fu_1466_p4 = {{p_Val2_s_fu_312[407:400]}};

assign tmp_88_fu_1488_p4 = {{p_Val2_s_fu_312[415:408]}};

assign tmp_89_fu_1510_p4 = {{p_Val2_s_fu_312[423:416]}};

assign tmp_90_fu_1532_p4 = {{p_Val2_s_fu_312[431:424]}};

assign tmp_91_fu_1554_p4 = {{p_Val2_s_fu_312[439:432]}};

assign tmp_92_fu_1576_p4 = {{p_Val2_s_fu_312[447:440]}};

assign tmp_93_fu_1598_p4 = {{p_Val2_s_fu_312[455:448]}};

assign tmp_94_fu_1620_p4 = {{p_Val2_s_fu_312[463:456]}};

assign tmp_95_fu_1642_p4 = {{p_Val2_s_fu_312[471:464]}};

assign tmp_96_fu_1664_p4 = {{p_Val2_s_fu_312[479:472]}};

assign tmp_97_fu_1686_p4 = {{p_Val2_s_fu_312[487:480]}};

assign tmp_98_fu_1708_p4 = {{p_Val2_s_fu_312[495:488]}};

assign tmp_99_fu_1730_p4 = {{p_Val2_s_fu_312[503:496]}};

assign tmp_s_fu_398_p4 = {{p_Val2_s_fu_312[15:8]}};

assign trunc_ln674_fu_1080_p1 = tmp_V_reg_2068[7:0];

assign xor_ln414_100_fu_1498_p2 = (tmp_88_fu_1488_p4 ^ 8'd54);

assign xor_ln414_101_fu_1504_p2 = (tmp_88_fu_1488_p4 ^ 8'd92);

assign xor_ln414_102_fu_1520_p2 = (tmp_89_fu_1510_p4 ^ 8'd54);

assign xor_ln414_103_fu_1526_p2 = (tmp_89_fu_1510_p4 ^ 8'd92);

assign xor_ln414_104_fu_1542_p2 = (tmp_90_fu_1532_p4 ^ 8'd54);

assign xor_ln414_105_fu_1548_p2 = (tmp_90_fu_1532_p4 ^ 8'd92);

assign xor_ln414_106_fu_1564_p2 = (tmp_91_fu_1554_p4 ^ 8'd54);

assign xor_ln414_107_fu_1570_p2 = (tmp_91_fu_1554_p4 ^ 8'd92);

assign xor_ln414_108_fu_1586_p2 = (tmp_92_fu_1576_p4 ^ 8'd54);

assign xor_ln414_109_fu_1592_p2 = (tmp_92_fu_1576_p4 ^ 8'd92);

assign xor_ln414_10_fu_518_p2 = (tmp_47_fu_508_p4 ^ 8'd54);

assign xor_ln414_110_fu_1608_p2 = (tmp_93_fu_1598_p4 ^ 8'd54);

assign xor_ln414_111_fu_1614_p2 = (tmp_93_fu_1598_p4 ^ 8'd92);

assign xor_ln414_112_fu_1630_p2 = (tmp_94_fu_1620_p4 ^ 8'd54);

assign xor_ln414_113_fu_1636_p2 = (tmp_94_fu_1620_p4 ^ 8'd92);

assign xor_ln414_114_fu_1652_p2 = (tmp_95_fu_1642_p4 ^ 8'd54);

assign xor_ln414_115_fu_1658_p2 = (tmp_95_fu_1642_p4 ^ 8'd92);

assign xor_ln414_116_fu_1674_p2 = (tmp_96_fu_1664_p4 ^ 8'd54);

assign xor_ln414_117_fu_1680_p2 = (tmp_96_fu_1664_p4 ^ 8'd92);

assign xor_ln414_118_fu_1696_p2 = (tmp_97_fu_1686_p4 ^ 8'd54);

assign xor_ln414_119_fu_1702_p2 = (tmp_97_fu_1686_p4 ^ 8'd92);

assign xor_ln414_11_fu_524_p2 = (tmp_47_fu_508_p4 ^ 8'd92);

assign xor_ln414_120_fu_1718_p2 = (tmp_98_fu_1708_p4 ^ 8'd54);

assign xor_ln414_121_fu_1724_p2 = (tmp_98_fu_1708_p4 ^ 8'd92);

assign xor_ln414_122_fu_1740_p2 = (tmp_99_fu_1730_p4 ^ 8'd54);

assign xor_ln414_123_fu_1746_p2 = (tmp_99_fu_1730_p4 ^ 8'd92);

assign xor_ln414_124_fu_1762_p2 = (tmp_100_fu_1752_p4 ^ 8'd54);

assign xor_ln414_125_fu_1901_p2 = (tmp_100_fu_1752_p4 ^ 8'd92);

assign xor_ln414_12_fu_540_p2 = (tmp_48_fu_530_p4 ^ 8'd54);

assign xor_ln414_13_fu_546_p2 = (tmp_48_fu_530_p4 ^ 8'd92);

assign xor_ln414_14_fu_562_p2 = (tmp_49_fu_552_p4 ^ 8'd54);

assign xor_ln414_15_fu_568_p2 = (tmp_49_fu_552_p4 ^ 8'd92);

assign xor_ln414_16_fu_584_p2 = (tmp_50_fu_574_p4 ^ 8'd54);

assign xor_ln414_17_fu_590_p2 = (tmp_50_fu_574_p4 ^ 8'd92);

assign xor_ln414_18_fu_606_p2 = (tmp_51_fu_596_p4 ^ 8'd54);

assign xor_ln414_19_fu_612_p2 = (tmp_51_fu_596_p4 ^ 8'd92);

assign xor_ln414_1_fu_414_p2 = (tmp_s_fu_398_p4 ^ 8'd92);

assign xor_ln414_20_fu_628_p2 = (tmp_52_fu_618_p4 ^ 8'd54);

assign xor_ln414_21_fu_634_p2 = (tmp_52_fu_618_p4 ^ 8'd92);

assign xor_ln414_22_fu_650_p2 = (tmp_53_fu_640_p4 ^ 8'd54);

assign xor_ln414_23_fu_656_p2 = (tmp_53_fu_640_p4 ^ 8'd92);

assign xor_ln414_24_fu_672_p2 = (tmp_54_fu_662_p4 ^ 8'd54);

assign xor_ln414_25_fu_678_p2 = (tmp_54_fu_662_p4 ^ 8'd92);

assign xor_ln414_26_fu_694_p2 = (tmp_55_fu_684_p4 ^ 8'd54);

assign xor_ln414_27_fu_700_p2 = (tmp_55_fu_684_p4 ^ 8'd92);

assign xor_ln414_28_fu_716_p2 = (tmp_56_fu_706_p4 ^ 8'd54);

assign xor_ln414_29_fu_722_p2 = (tmp_56_fu_706_p4 ^ 8'd92);

assign xor_ln414_2_fu_430_p2 = (tmp_43_fu_420_p4 ^ 8'd54);

assign xor_ln414_30_fu_738_p2 = (tmp_57_fu_728_p4 ^ 8'd54);

assign xor_ln414_31_fu_744_p2 = (tmp_57_fu_728_p4 ^ 8'd92);

assign xor_ln414_32_fu_760_p2 = (tmp_58_fu_750_p4 ^ 8'd54);

assign xor_ln414_33_fu_766_p2 = (tmp_58_fu_750_p4 ^ 8'd92);

assign xor_ln414_34_fu_782_p2 = (tmp_59_fu_772_p4 ^ 8'd54);

assign xor_ln414_35_fu_788_p2 = (tmp_59_fu_772_p4 ^ 8'd92);

assign xor_ln414_36_fu_804_p2 = (tmp_60_fu_794_p4 ^ 8'd54);

assign xor_ln414_37_fu_810_p2 = (tmp_60_fu_794_p4 ^ 8'd92);

assign xor_ln414_38_fu_826_p2 = (tmp_61_fu_816_p4 ^ 8'd54);

assign xor_ln414_39_fu_832_p2 = (tmp_61_fu_816_p4 ^ 8'd92);

assign xor_ln414_3_fu_436_p2 = (tmp_43_fu_420_p4 ^ 8'd92);

assign xor_ln414_40_fu_848_p2 = (tmp_62_fu_838_p4 ^ 8'd54);

assign xor_ln414_41_fu_854_p2 = (tmp_62_fu_838_p4 ^ 8'd92);

assign xor_ln414_42_fu_870_p2 = (tmp_63_fu_860_p4 ^ 8'd54);

assign xor_ln414_43_fu_876_p2 = (tmp_63_fu_860_p4 ^ 8'd92);

assign xor_ln414_44_fu_892_p2 = (tmp_64_fu_882_p4 ^ 8'd54);

assign xor_ln414_45_fu_898_p2 = (tmp_64_fu_882_p4 ^ 8'd92);

assign xor_ln414_46_fu_914_p2 = (tmp_65_fu_904_p4 ^ 8'd54);

assign xor_ln414_47_fu_920_p2 = (tmp_65_fu_904_p4 ^ 8'd92);

assign xor_ln414_48_fu_936_p2 = (tmp_66_fu_926_p4 ^ 8'd54);

assign xor_ln414_49_fu_942_p2 = (tmp_66_fu_926_p4 ^ 8'd92);

assign xor_ln414_4_fu_452_p2 = (tmp_44_fu_442_p4 ^ 8'd54);

assign xor_ln414_50_fu_958_p2 = (tmp_67_fu_948_p4 ^ 8'd54);

assign xor_ln414_51_fu_964_p2 = (tmp_67_fu_948_p4 ^ 8'd92);

assign xor_ln414_52_fu_980_p2 = (tmp_68_fu_970_p4 ^ 8'd54);

assign xor_ln414_53_fu_986_p2 = (tmp_68_fu_970_p4 ^ 8'd92);

assign xor_ln414_54_fu_1002_p2 = (tmp_69_fu_992_p4 ^ 8'd54);

assign xor_ln414_55_fu_1008_p2 = (tmp_69_fu_992_p4 ^ 8'd92);

assign xor_ln414_56_fu_1024_p2 = (tmp_70_fu_1014_p4 ^ 8'd54);

assign xor_ln414_57_fu_1030_p2 = (tmp_70_fu_1014_p4 ^ 8'd92);

assign xor_ln414_58_fu_1046_p2 = (tmp_71_fu_1036_p4 ^ 8'd54);

assign xor_ln414_59_fu_1052_p2 = (tmp_71_fu_1036_p4 ^ 8'd92);

assign xor_ln414_5_fu_458_p2 = (tmp_44_fu_442_p4 ^ 8'd92);

assign xor_ln414_60_fu_1068_p2 = (tmp_72_fu_1058_p4 ^ 8'd54);

assign xor_ln414_61_fu_1074_p2 = (tmp_72_fu_1058_p4 ^ 8'd92);

assign xor_ln414_62_fu_1083_p2 = (trunc_ln674_fu_1080_p1 ^ 8'd54);

assign xor_ln414_63_fu_1089_p2 = (trunc_ln674_fu_1080_p1 ^ 8'd92);

assign xor_ln414_64_fu_1104_p2 = (tmp_34_fu_1095_p4 ^ 8'd54);

assign xor_ln414_65_fu_1110_p2 = (tmp_34_fu_1095_p4 ^ 8'd92);

assign xor_ln414_66_fu_1125_p2 = (tmp_35_fu_1116_p4 ^ 8'd54);

assign xor_ln414_67_fu_1131_p2 = (tmp_35_fu_1116_p4 ^ 8'd92);

assign xor_ln414_68_fu_1146_p2 = (tmp_36_fu_1137_p4 ^ 8'd54);

assign xor_ln414_69_fu_1152_p2 = (tmp_36_fu_1137_p4 ^ 8'd92);

assign xor_ln414_6_fu_474_p2 = (tmp_45_fu_464_p4 ^ 8'd54);

assign xor_ln414_70_fu_1168_p2 = (tmp_73_fu_1158_p4 ^ 8'd54);

assign xor_ln414_71_fu_1174_p2 = (tmp_73_fu_1158_p4 ^ 8'd92);

assign xor_ln414_72_fu_1190_p2 = (tmp_74_fu_1180_p4 ^ 8'd54);

assign xor_ln414_73_fu_1196_p2 = (tmp_74_fu_1180_p4 ^ 8'd92);

assign xor_ln414_74_fu_1212_p2 = (tmp_75_fu_1202_p4 ^ 8'd54);

assign xor_ln414_75_fu_1218_p2 = (tmp_75_fu_1202_p4 ^ 8'd92);

assign xor_ln414_76_fu_1234_p2 = (tmp_76_fu_1224_p4 ^ 8'd54);

assign xor_ln414_77_fu_1240_p2 = (tmp_76_fu_1224_p4 ^ 8'd92);

assign xor_ln414_78_fu_1256_p2 = (tmp_77_fu_1246_p4 ^ 8'd54);

assign xor_ln414_79_fu_1262_p2 = (tmp_77_fu_1246_p4 ^ 8'd92);

assign xor_ln414_7_fu_480_p2 = (tmp_45_fu_464_p4 ^ 8'd92);

assign xor_ln414_80_fu_1278_p2 = (tmp_78_fu_1268_p4 ^ 8'd54);

assign xor_ln414_81_fu_1284_p2 = (tmp_78_fu_1268_p4 ^ 8'd92);

assign xor_ln414_82_fu_1300_p2 = (tmp_79_fu_1290_p4 ^ 8'd54);

assign xor_ln414_83_fu_1306_p2 = (tmp_79_fu_1290_p4 ^ 8'd92);

assign xor_ln414_84_fu_1322_p2 = (tmp_80_fu_1312_p4 ^ 8'd54);

assign xor_ln414_85_fu_1328_p2 = (tmp_80_fu_1312_p4 ^ 8'd92);

assign xor_ln414_86_fu_1344_p2 = (tmp_81_fu_1334_p4 ^ 8'd54);

assign xor_ln414_87_fu_1350_p2 = (tmp_81_fu_1334_p4 ^ 8'd92);

assign xor_ln414_88_fu_1366_p2 = (tmp_82_fu_1356_p4 ^ 8'd54);

assign xor_ln414_89_fu_1372_p2 = (tmp_82_fu_1356_p4 ^ 8'd92);

assign xor_ln414_8_fu_496_p2 = (tmp_46_fu_486_p4 ^ 8'd54);

assign xor_ln414_90_fu_1388_p2 = (tmp_83_fu_1378_p4 ^ 8'd54);

assign xor_ln414_91_fu_1394_p2 = (tmp_83_fu_1378_p4 ^ 8'd92);

assign xor_ln414_92_fu_1410_p2 = (tmp_84_fu_1400_p4 ^ 8'd54);

assign xor_ln414_93_fu_1416_p2 = (tmp_84_fu_1400_p4 ^ 8'd92);

assign xor_ln414_94_fu_1432_p2 = (tmp_85_fu_1422_p4 ^ 8'd54);

assign xor_ln414_95_fu_1438_p2 = (tmp_85_fu_1422_p4 ^ 8'd92);

assign xor_ln414_96_fu_1454_p2 = (tmp_86_fu_1444_p4 ^ 8'd54);

assign xor_ln414_97_fu_1460_p2 = (tmp_86_fu_1444_p4 ^ 8'd92);

assign xor_ln414_98_fu_1476_p2 = (tmp_87_fu_1466_p4 ^ 8'd54);

assign xor_ln414_99_fu_1482_p2 = (tmp_87_fu_1466_p4 ^ 8'd92);

assign xor_ln414_9_fu_502_p2 = (tmp_46_fu_486_p4 ^ 8'd92);

assign xor_ln414_fu_408_p2 = (tmp_s_fu_398_p4 ^ 8'd54);

always @ (posedge ap_clk) begin
    p_Val2_s_fu_312[31:0] <= 32'b00000000000000000000000000000000;
end

endmodule //hmac_sha256_kpad_32_64_256_32_64_sha256_wrapper_Pipeline_VITIS_LOOP_120_2
