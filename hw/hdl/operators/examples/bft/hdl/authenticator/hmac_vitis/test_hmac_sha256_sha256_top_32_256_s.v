// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module test_hmac_sha256_sha256_top_32_256_s (
        mergeKipadStrm3_dout,
        mergeKipadStrm3_empty_n,
        mergeKipadStrm3_read,
        mergeKipadLenStrm4_dout,
        mergeKipadLenStrm4_empty_n,
        mergeKipadLenStrm4_read,
        eMergeKipadLenStrm5_dout,
        eMergeKipadLenStrm5_empty_n,
        eMergeKipadLenStrm5_read,
        msgHashStrm10_din,
        msgHashStrm10_full_n,
        msgHashStrm10_write,
        eMsgHashStrm11_din,
        eMsgHashStrm11_full_n,
        eMsgHashStrm11_write,
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_ready,
        ap_idle,
        ap_continue
);


input  [31:0] mergeKipadStrm3_dout;
input   mergeKipadStrm3_empty_n;
output   mergeKipadStrm3_read;
input  [63:0] mergeKipadLenStrm4_dout;
input   mergeKipadLenStrm4_empty_n;
output   mergeKipadLenStrm4_read;
input  [0:0] eMergeKipadLenStrm5_dout;
input   eMergeKipadLenStrm5_empty_n;
output   eMergeKipadLenStrm5_read;
output  [255:0] msgHashStrm10_din;
input   msgHashStrm10_full_n;
output   msgHashStrm10_write;
output  [0:0] eMsgHashStrm11_din;
input   eMsgHashStrm11_full_n;
output   eMsgHashStrm11_write;
input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_ready;
output   ap_idle;
input   ap_continue;

wire    preProcessing1_U0_ap_start;
wire    preProcessing1_U0_start_full_n;
wire    preProcessing1_U0_ap_done;
wire    preProcessing1_U0_ap_continue;
wire    preProcessing1_U0_ap_idle;
wire    preProcessing1_U0_ap_ready;
wire    preProcessing1_U0_start_out;
wire    preProcessing1_U0_start_write;
wire    preProcessing1_U0_mergeKopadStrm3_read;
wire    preProcessing1_U0_mergeKopadLenStrm4_read;
wire    preProcessing1_U0_eMergeKopadLenStrm5_read;
wire   [511:0] preProcessing1_U0_blk_strm_din;
wire    preProcessing1_U0_blk_strm_write;
wire   [63:0] preProcessing1_U0_nblk_strm8_din;
wire    preProcessing1_U0_nblk_strm8_write;
wire   [0:0] preProcessing1_U0_end_nblk_strm11_din;
wire    preProcessing1_U0_end_nblk_strm11_write;
wire    dup_strm2_U0_ap_start;
wire    dup_strm2_U0_ap_done;
wire    dup_strm2_U0_ap_continue;
wire    dup_strm2_U0_ap_idle;
wire    dup_strm2_U0_ap_ready;
wire    dup_strm2_U0_start_out;
wire    dup_strm2_U0_start_write;
wire    dup_strm2_U0_nblk_strm8_read;
wire    dup_strm2_U0_end_nblk_strm11_read;
wire   [63:0] dup_strm2_U0_nblk_strm19_din;
wire    dup_strm2_U0_nblk_strm19_write;
wire   [0:0] dup_strm2_U0_end_nblk_strm112_din;
wire    dup_strm2_U0_end_nblk_strm112_write;
wire   [63:0] dup_strm2_U0_nblk_strm210_din;
wire    dup_strm2_U0_nblk_strm210_write;
wire   [0:0] dup_strm2_U0_end_nblk_strm213_din;
wire    dup_strm2_U0_end_nblk_strm213_write;
wire    generateMsgSchedule3_U0_ap_start;
wire    generateMsgSchedule3_U0_ap_done;
wire    generateMsgSchedule3_U0_ap_continue;
wire    generateMsgSchedule3_U0_ap_idle;
wire    generateMsgSchedule3_U0_ap_ready;
wire    generateMsgSchedule3_U0_blk_strm_read;
wire    generateMsgSchedule3_U0_nblk_strm19_read;
wire    generateMsgSchedule3_U0_end_nblk_strm112_read;
wire   [31:0] generateMsgSchedule3_U0_w_strm14_din;
wire    generateMsgSchedule3_U0_w_strm14_write;
wire    sha256Digest_256_U0_ap_start;
wire    sha256Digest_256_U0_ap_done;
wire    sha256Digest_256_U0_ap_continue;
wire    sha256Digest_256_U0_ap_idle;
wire    sha256Digest_256_U0_ap_ready;
wire    sha256Digest_256_U0_nblk_strm210_read;
wire    sha256Digest_256_U0_end_nblk_strm213_read;
wire    sha256Digest_256_U0_w_strm14_read;
wire   [255:0] sha256Digest_256_U0_msgHashStrm10_din;
wire    sha256Digest_256_U0_msgHashStrm10_write;
wire   [0:0] sha256Digest_256_U0_eMsgHashStrm11_din;
wire    sha256Digest_256_U0_eMsgHashStrm11_write;
wire    blk_strm_full_n;
wire   [511:0] blk_strm_dout;
wire   [5:0] blk_strm_num_data_valid;
wire   [5:0] blk_strm_fifo_cap;
wire    blk_strm_empty_n;
wire    nblk_strm_full_n;
wire   [63:0] nblk_strm_dout;
wire   [5:0] nblk_strm_num_data_valid;
wire   [5:0] nblk_strm_fifo_cap;
wire    nblk_strm_empty_n;
wire    end_nblk_strm_full_n;
wire   [0:0] end_nblk_strm_dout;
wire   [5:0] end_nblk_strm_num_data_valid;
wire   [5:0] end_nblk_strm_fifo_cap;
wire    end_nblk_strm_empty_n;
wire    nblk_strm1_full_n;
wire   [63:0] nblk_strm1_dout;
wire   [5:0] nblk_strm1_num_data_valid;
wire   [5:0] nblk_strm1_fifo_cap;
wire    nblk_strm1_empty_n;
wire    end_nblk_strm1_full_n;
wire   [0:0] end_nblk_strm1_dout;
wire   [5:0] end_nblk_strm1_num_data_valid;
wire   [5:0] end_nblk_strm1_fifo_cap;
wire    end_nblk_strm1_empty_n;
wire    nblk_strm2_full_n;
wire   [63:0] nblk_strm2_dout;
wire   [5:0] nblk_strm2_num_data_valid;
wire   [5:0] nblk_strm2_fifo_cap;
wire    nblk_strm2_empty_n;
wire    end_nblk_strm2_full_n;
wire   [0:0] end_nblk_strm2_dout;
wire   [5:0] end_nblk_strm2_num_data_valid;
wire   [5:0] end_nblk_strm2_fifo_cap;
wire    end_nblk_strm2_empty_n;
wire    w_strm_full_n;
wire   [31:0] w_strm_dout;
wire   [5:0] w_strm_num_data_valid;
wire   [5:0] w_strm_fifo_cap;
wire    w_strm_empty_n;
wire   [0:0] start_for_dup_strm2_U0_din;
wire    start_for_dup_strm2_U0_full_n;
wire   [0:0] start_for_dup_strm2_U0_dout;
wire    start_for_dup_strm2_U0_empty_n;
wire   [0:0] start_for_generateMsgSchedule3_U0_din;
wire    start_for_generateMsgSchedule3_U0_full_n;
wire   [0:0] start_for_generateMsgSchedule3_U0_dout;
wire    start_for_generateMsgSchedule3_U0_empty_n;
wire   [0:0] start_for_sha256Digest_256_U0_din;
wire    start_for_sha256Digest_256_U0_full_n;
wire   [0:0] start_for_sha256Digest_256_U0_dout;
wire    start_for_sha256Digest_256_U0_empty_n;

test_hmac_sha256_preProcessing1 preProcessing1_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(preProcessing1_U0_ap_start),
    .start_full_n(preProcessing1_U0_start_full_n),
    .ap_done(preProcessing1_U0_ap_done),
    .ap_continue(preProcessing1_U0_ap_continue),
    .ap_idle(preProcessing1_U0_ap_idle),
    .ap_ready(preProcessing1_U0_ap_ready),
    .start_out(preProcessing1_U0_start_out),
    .start_write(preProcessing1_U0_start_write),
    .mergeKopadStrm3_dout(mergeKipadStrm3_dout),
    .mergeKopadStrm3_num_data_valid(8'd0),
    .mergeKopadStrm3_fifo_cap(8'd0),
    .mergeKopadStrm3_empty_n(mergeKipadStrm3_empty_n),
    .mergeKopadStrm3_read(preProcessing1_U0_mergeKopadStrm3_read),
    .mergeKopadLenStrm4_dout(mergeKipadLenStrm4_dout),
    .mergeKopadLenStrm4_num_data_valid(3'd0),
    .mergeKopadLenStrm4_fifo_cap(3'd0),
    .mergeKopadLenStrm4_empty_n(mergeKipadLenStrm4_empty_n),
    .mergeKopadLenStrm4_read(preProcessing1_U0_mergeKopadLenStrm4_read),
    .eMergeKopadLenStrm5_dout(eMergeKipadLenStrm5_dout),
    .eMergeKopadLenStrm5_num_data_valid(3'd0),
    .eMergeKopadLenStrm5_fifo_cap(3'd0),
    .eMergeKopadLenStrm5_empty_n(eMergeKipadLenStrm5_empty_n),
    .eMergeKopadLenStrm5_read(preProcessing1_U0_eMergeKopadLenStrm5_read),
    .blk_strm_din(preProcessing1_U0_blk_strm_din),
    .blk_strm_num_data_valid(blk_strm_num_data_valid),
    .blk_strm_fifo_cap(blk_strm_fifo_cap),
    .blk_strm_full_n(blk_strm_full_n),
    .blk_strm_write(preProcessing1_U0_blk_strm_write),
    .nblk_strm8_din(preProcessing1_U0_nblk_strm8_din),
    .nblk_strm8_num_data_valid(nblk_strm_num_data_valid),
    .nblk_strm8_fifo_cap(nblk_strm_fifo_cap),
    .nblk_strm8_full_n(nblk_strm_full_n),
    .nblk_strm8_write(preProcessing1_U0_nblk_strm8_write),
    .end_nblk_strm11_din(preProcessing1_U0_end_nblk_strm11_din),
    .end_nblk_strm11_num_data_valid(end_nblk_strm_num_data_valid),
    .end_nblk_strm11_fifo_cap(end_nblk_strm_fifo_cap),
    .end_nblk_strm11_full_n(end_nblk_strm_full_n),
    .end_nblk_strm11_write(preProcessing1_U0_end_nblk_strm11_write)
);

test_hmac_sha256_dup_strm2 dup_strm2_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(dup_strm2_U0_ap_start),
    .start_full_n(start_for_sha256Digest_256_U0_full_n),
    .ap_done(dup_strm2_U0_ap_done),
    .ap_continue(dup_strm2_U0_ap_continue),
    .ap_idle(dup_strm2_U0_ap_idle),
    .ap_ready(dup_strm2_U0_ap_ready),
    .start_out(dup_strm2_U0_start_out),
    .start_write(dup_strm2_U0_start_write),
    .nblk_strm8_dout(nblk_strm_dout),
    .nblk_strm8_num_data_valid(nblk_strm_num_data_valid),
    .nblk_strm8_fifo_cap(nblk_strm_fifo_cap),
    .nblk_strm8_empty_n(nblk_strm_empty_n),
    .nblk_strm8_read(dup_strm2_U0_nblk_strm8_read),
    .end_nblk_strm11_dout(end_nblk_strm_dout),
    .end_nblk_strm11_num_data_valid(end_nblk_strm_num_data_valid),
    .end_nblk_strm11_fifo_cap(end_nblk_strm_fifo_cap),
    .end_nblk_strm11_empty_n(end_nblk_strm_empty_n),
    .end_nblk_strm11_read(dup_strm2_U0_end_nblk_strm11_read),
    .nblk_strm19_din(dup_strm2_U0_nblk_strm19_din),
    .nblk_strm19_num_data_valid(nblk_strm1_num_data_valid),
    .nblk_strm19_fifo_cap(nblk_strm1_fifo_cap),
    .nblk_strm19_full_n(nblk_strm1_full_n),
    .nblk_strm19_write(dup_strm2_U0_nblk_strm19_write),
    .end_nblk_strm112_din(dup_strm2_U0_end_nblk_strm112_din),
    .end_nblk_strm112_num_data_valid(end_nblk_strm1_num_data_valid),
    .end_nblk_strm112_fifo_cap(end_nblk_strm1_fifo_cap),
    .end_nblk_strm112_full_n(end_nblk_strm1_full_n),
    .end_nblk_strm112_write(dup_strm2_U0_end_nblk_strm112_write),
    .nblk_strm210_din(dup_strm2_U0_nblk_strm210_din),
    .nblk_strm210_num_data_valid(nblk_strm2_num_data_valid),
    .nblk_strm210_fifo_cap(nblk_strm2_fifo_cap),
    .nblk_strm210_full_n(nblk_strm2_full_n),
    .nblk_strm210_write(dup_strm2_U0_nblk_strm210_write),
    .end_nblk_strm213_din(dup_strm2_U0_end_nblk_strm213_din),
    .end_nblk_strm213_num_data_valid(end_nblk_strm2_num_data_valid),
    .end_nblk_strm213_fifo_cap(end_nblk_strm2_fifo_cap),
    .end_nblk_strm213_full_n(end_nblk_strm2_full_n),
    .end_nblk_strm213_write(dup_strm2_U0_end_nblk_strm213_write)
);

test_hmac_sha256_generateMsgSchedule3 generateMsgSchedule3_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(generateMsgSchedule3_U0_ap_start),
    .ap_done(generateMsgSchedule3_U0_ap_done),
    .ap_continue(generateMsgSchedule3_U0_ap_continue),
    .ap_idle(generateMsgSchedule3_U0_ap_idle),
    .ap_ready(generateMsgSchedule3_U0_ap_ready),
    .blk_strm_dout(blk_strm_dout),
    .blk_strm_num_data_valid(blk_strm_num_data_valid),
    .blk_strm_fifo_cap(blk_strm_fifo_cap),
    .blk_strm_empty_n(blk_strm_empty_n),
    .blk_strm_read(generateMsgSchedule3_U0_blk_strm_read),
    .nblk_strm19_dout(nblk_strm1_dout),
    .nblk_strm19_num_data_valid(nblk_strm1_num_data_valid),
    .nblk_strm19_fifo_cap(nblk_strm1_fifo_cap),
    .nblk_strm19_empty_n(nblk_strm1_empty_n),
    .nblk_strm19_read(generateMsgSchedule3_U0_nblk_strm19_read),
    .end_nblk_strm112_dout(end_nblk_strm1_dout),
    .end_nblk_strm112_num_data_valid(end_nblk_strm1_num_data_valid),
    .end_nblk_strm112_fifo_cap(end_nblk_strm1_fifo_cap),
    .end_nblk_strm112_empty_n(end_nblk_strm1_empty_n),
    .end_nblk_strm112_read(generateMsgSchedule3_U0_end_nblk_strm112_read),
    .w_strm14_din(generateMsgSchedule3_U0_w_strm14_din),
    .w_strm14_num_data_valid(w_strm_num_data_valid),
    .w_strm14_fifo_cap(w_strm_fifo_cap),
    .w_strm14_full_n(w_strm_full_n),
    .w_strm14_write(generateMsgSchedule3_U0_w_strm14_write)
);

test_hmac_sha256_sha256Digest_256_s sha256Digest_256_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(sha256Digest_256_U0_ap_start),
    .ap_done(sha256Digest_256_U0_ap_done),
    .ap_continue(sha256Digest_256_U0_ap_continue),
    .ap_idle(sha256Digest_256_U0_ap_idle),
    .ap_ready(sha256Digest_256_U0_ap_ready),
    .nblk_strm210_dout(nblk_strm2_dout),
    .nblk_strm210_num_data_valid(nblk_strm2_num_data_valid),
    .nblk_strm210_fifo_cap(nblk_strm2_fifo_cap),
    .nblk_strm210_empty_n(nblk_strm2_empty_n),
    .nblk_strm210_read(sha256Digest_256_U0_nblk_strm210_read),
    .end_nblk_strm213_dout(end_nblk_strm2_dout),
    .end_nblk_strm213_num_data_valid(end_nblk_strm2_num_data_valid),
    .end_nblk_strm213_fifo_cap(end_nblk_strm2_fifo_cap),
    .end_nblk_strm213_empty_n(end_nblk_strm2_empty_n),
    .end_nblk_strm213_read(sha256Digest_256_U0_end_nblk_strm213_read),
    .w_strm14_dout(w_strm_dout),
    .w_strm14_num_data_valid(w_strm_num_data_valid),
    .w_strm14_fifo_cap(w_strm_fifo_cap),
    .w_strm14_empty_n(w_strm_empty_n),
    .w_strm14_read(sha256Digest_256_U0_w_strm14_read),
    .msgHashStrm10_din(sha256Digest_256_U0_msgHashStrm10_din),
    .msgHashStrm10_num_data_valid(3'd0),
    .msgHashStrm10_fifo_cap(3'd0),
    .msgHashStrm10_full_n(msgHashStrm10_full_n),
    .msgHashStrm10_write(sha256Digest_256_U0_msgHashStrm10_write),
    .eMsgHashStrm11_din(sha256Digest_256_U0_eMsgHashStrm11_din),
    .eMsgHashStrm11_num_data_valid(3'd0),
    .eMsgHashStrm11_fifo_cap(3'd0),
    .eMsgHashStrm11_full_n(eMsgHashStrm11_full_n),
    .eMsgHashStrm11_write(sha256Digest_256_U0_eMsgHashStrm11_write)
);

test_hmac_sha256_fifo_w512_d32_D blk_strm_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(preProcessing1_U0_blk_strm_din),
    .if_full_n(blk_strm_full_n),
    .if_write(preProcessing1_U0_blk_strm_write),
    .if_dout(blk_strm_dout),
    .if_num_data_valid(blk_strm_num_data_valid),
    .if_fifo_cap(blk_strm_fifo_cap),
    .if_empty_n(blk_strm_empty_n),
    .if_read(generateMsgSchedule3_U0_blk_strm_read)
);

test_hmac_sha256_fifo_w64_d32_D nblk_strm_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(preProcessing1_U0_nblk_strm8_din),
    .if_full_n(nblk_strm_full_n),
    .if_write(preProcessing1_U0_nblk_strm8_write),
    .if_dout(nblk_strm_dout),
    .if_num_data_valid(nblk_strm_num_data_valid),
    .if_fifo_cap(nblk_strm_fifo_cap),
    .if_empty_n(nblk_strm_empty_n),
    .if_read(dup_strm2_U0_nblk_strm8_read)
);

test_hmac_sha256_fifo_w1_d32_D end_nblk_strm_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(preProcessing1_U0_end_nblk_strm11_din),
    .if_full_n(end_nblk_strm_full_n),
    .if_write(preProcessing1_U0_end_nblk_strm11_write),
    .if_dout(end_nblk_strm_dout),
    .if_num_data_valid(end_nblk_strm_num_data_valid),
    .if_fifo_cap(end_nblk_strm_fifo_cap),
    .if_empty_n(end_nblk_strm_empty_n),
    .if_read(dup_strm2_U0_end_nblk_strm11_read)
);

test_hmac_sha256_fifo_w64_d32_D nblk_strm1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(dup_strm2_U0_nblk_strm19_din),
    .if_full_n(nblk_strm1_full_n),
    .if_write(dup_strm2_U0_nblk_strm19_write),
    .if_dout(nblk_strm1_dout),
    .if_num_data_valid(nblk_strm1_num_data_valid),
    .if_fifo_cap(nblk_strm1_fifo_cap),
    .if_empty_n(nblk_strm1_empty_n),
    .if_read(generateMsgSchedule3_U0_nblk_strm19_read)
);

test_hmac_sha256_fifo_w1_d32_D end_nblk_strm1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(dup_strm2_U0_end_nblk_strm112_din),
    .if_full_n(end_nblk_strm1_full_n),
    .if_write(dup_strm2_U0_end_nblk_strm112_write),
    .if_dout(end_nblk_strm1_dout),
    .if_num_data_valid(end_nblk_strm1_num_data_valid),
    .if_fifo_cap(end_nblk_strm1_fifo_cap),
    .if_empty_n(end_nblk_strm1_empty_n),
    .if_read(generateMsgSchedule3_U0_end_nblk_strm112_read)
);

test_hmac_sha256_fifo_w64_d32_D nblk_strm2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(dup_strm2_U0_nblk_strm210_din),
    .if_full_n(nblk_strm2_full_n),
    .if_write(dup_strm2_U0_nblk_strm210_write),
    .if_dout(nblk_strm2_dout),
    .if_num_data_valid(nblk_strm2_num_data_valid),
    .if_fifo_cap(nblk_strm2_fifo_cap),
    .if_empty_n(nblk_strm2_empty_n),
    .if_read(sha256Digest_256_U0_nblk_strm210_read)
);

test_hmac_sha256_fifo_w1_d32_D end_nblk_strm2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(dup_strm2_U0_end_nblk_strm213_din),
    .if_full_n(end_nblk_strm2_full_n),
    .if_write(dup_strm2_U0_end_nblk_strm213_write),
    .if_dout(end_nblk_strm2_dout),
    .if_num_data_valid(end_nblk_strm2_num_data_valid),
    .if_fifo_cap(end_nblk_strm2_fifo_cap),
    .if_empty_n(end_nblk_strm2_empty_n),
    .if_read(sha256Digest_256_U0_end_nblk_strm213_read)
);

test_hmac_sha256_fifo_w32_d32_D w_strm_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(generateMsgSchedule3_U0_w_strm14_din),
    .if_full_n(w_strm_full_n),
    .if_write(generateMsgSchedule3_U0_w_strm14_write),
    .if_dout(w_strm_dout),
    .if_num_data_valid(w_strm_num_data_valid),
    .if_fifo_cap(w_strm_fifo_cap),
    .if_empty_n(w_strm_empty_n),
    .if_read(sha256Digest_256_U0_w_strm14_read)
);

test_hmac_sha256_start_for_dup_strm2_U0 start_for_dup_strm2_U0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_dup_strm2_U0_din),
    .if_full_n(start_for_dup_strm2_U0_full_n),
    .if_write(preProcessing1_U0_start_write),
    .if_dout(start_for_dup_strm2_U0_dout),
    .if_empty_n(start_for_dup_strm2_U0_empty_n),
    .if_read(dup_strm2_U0_ap_ready)
);

test_hmac_sha256_start_for_generateMsgSchedule3_U0 start_for_generateMsgSchedule3_U0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_generateMsgSchedule3_U0_din),
    .if_full_n(start_for_generateMsgSchedule3_U0_full_n),
    .if_write(preProcessing1_U0_start_write),
    .if_dout(start_for_generateMsgSchedule3_U0_dout),
    .if_empty_n(start_for_generateMsgSchedule3_U0_empty_n),
    .if_read(generateMsgSchedule3_U0_ap_ready)
);

test_hmac_sha256_start_for_sha256Digest_256_U0 start_for_sha256Digest_256_U0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_sha256Digest_256_U0_din),
    .if_full_n(start_for_sha256Digest_256_U0_full_n),
    .if_write(dup_strm2_U0_start_write),
    .if_dout(start_for_sha256Digest_256_U0_dout),
    .if_empty_n(start_for_sha256Digest_256_U0_empty_n),
    .if_read(sha256Digest_256_U0_ap_ready)
);

assign ap_done = sha256Digest_256_U0_ap_done;

assign ap_idle = (sha256Digest_256_U0_ap_idle & preProcessing1_U0_ap_idle & generateMsgSchedule3_U0_ap_idle & dup_strm2_U0_ap_idle);

assign ap_ready = preProcessing1_U0_ap_ready;

assign dup_strm2_U0_ap_continue = 1'b1;

assign dup_strm2_U0_ap_start = start_for_dup_strm2_U0_empty_n;

assign eMergeKipadLenStrm5_read = preProcessing1_U0_eMergeKopadLenStrm5_read;

assign eMsgHashStrm11_din = sha256Digest_256_U0_eMsgHashStrm11_din;

assign eMsgHashStrm11_write = sha256Digest_256_U0_eMsgHashStrm11_write;

assign generateMsgSchedule3_U0_ap_continue = 1'b1;

assign generateMsgSchedule3_U0_ap_start = start_for_generateMsgSchedule3_U0_empty_n;

assign mergeKipadLenStrm4_read = preProcessing1_U0_mergeKopadLenStrm4_read;

assign mergeKipadStrm3_read = preProcessing1_U0_mergeKopadStrm3_read;

assign msgHashStrm10_din = sha256Digest_256_U0_msgHashStrm10_din;

assign msgHashStrm10_write = sha256Digest_256_U0_msgHashStrm10_write;

assign preProcessing1_U0_ap_continue = 1'b1;

assign preProcessing1_U0_ap_start = ap_start;

assign preProcessing1_U0_start_full_n = (start_for_generateMsgSchedule3_U0_full_n & start_for_dup_strm2_U0_full_n);

assign sha256Digest_256_U0_ap_continue = ap_continue;

assign sha256Digest_256_U0_ap_start = start_for_sha256Digest_256_U0_empty_n;

assign start_for_dup_strm2_U0_din = 1'b1;

assign start_for_generateMsgSchedule3_U0_din = 1'b1;

assign start_for_sha256Digest_256_U0_din = 1'b1;

endmodule //test_hmac_sha256_sha256_top_32_256_s
