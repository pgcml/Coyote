// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module test_hmac_sha256_mergeKipad_32_64_256_64_s (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        kipadStrm7_dout,
        kipadStrm7_num_data_valid,
        kipadStrm7_fifo_cap,
        kipadStrm7_empty_n,
        kipadStrm7_read,
        kopadStrm8_dout,
        kopadStrm8_num_data_valid,
        kopadStrm8_fifo_cap,
        kopadStrm8_empty_n,
        kopadStrm8_read,
        msgStrm_dout,
        msgStrm_empty_n,
        msgStrm_read,
        lenStrm_dout,
        lenStrm_empty_n,
        lenStrm_read,
        eKipadStrm6_dout,
        eKipadStrm6_num_data_valid,
        eKipadStrm6_fifo_cap,
        eKipadStrm6_empty_n,
        eKipadStrm6_read,
        mergeKipadStrm3_din,
        mergeKipadStrm3_num_data_valid,
        mergeKipadStrm3_fifo_cap,
        mergeKipadStrm3_full_n,
        mergeKipadStrm3_write,
        mergeKipadLenStrm4_din,
        mergeKipadLenStrm4_num_data_valid,
        mergeKipadLenStrm4_fifo_cap,
        mergeKipadLenStrm4_full_n,
        mergeKipadLenStrm4_write,
        eMergeKipadLenStrm5_din,
        eMergeKipadLenStrm5_num_data_valid,
        eMergeKipadLenStrm5_fifo_cap,
        eMergeKipadLenStrm5_full_n,
        eMergeKipadLenStrm5_write,
        kopad2Strm9_din,
        kopad2Strm9_num_data_valid,
        kopad2Strm9_fifo_cap,
        kopad2Strm9_full_n,
        kopad2Strm9_write
);

parameter    ap_ST_fsm_state1 = 9'd1;
parameter    ap_ST_fsm_state2 = 9'd2;
parameter    ap_ST_fsm_state3 = 9'd4;
parameter    ap_ST_fsm_state4 = 9'd8;
parameter    ap_ST_fsm_state5 = 9'd16;
parameter    ap_ST_fsm_state6 = 9'd32;
parameter    ap_ST_fsm_state7 = 9'd64;
parameter    ap_ST_fsm_state8 = 9'd128;
parameter    ap_ST_fsm_state9 = 9'd256;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
input  [511:0] kipadStrm7_dout;
input  [2:0] kipadStrm7_num_data_valid;
input  [2:0] kipadStrm7_fifo_cap;
input   kipadStrm7_empty_n;
output   kipadStrm7_read;
input  [511:0] kopadStrm8_dout;
input  [2:0] kopadStrm8_num_data_valid;
input  [2:0] kopadStrm8_fifo_cap;
input   kopadStrm8_empty_n;
output   kopadStrm8_read;
input  [31:0] msgStrm_dout;
input   msgStrm_empty_n;
output   msgStrm_read;
input  [63:0] lenStrm_dout;
input   lenStrm_empty_n;
output   lenStrm_read;
input  [0:0] eKipadStrm6_dout;
input  [2:0] eKipadStrm6_num_data_valid;
input  [2:0] eKipadStrm6_fifo_cap;
input   eKipadStrm6_empty_n;
output   eKipadStrm6_read;
output  [31:0] mergeKipadStrm3_din;
input  [7:0] mergeKipadStrm3_num_data_valid;
input  [7:0] mergeKipadStrm3_fifo_cap;
input   mergeKipadStrm3_full_n;
output   mergeKipadStrm3_write;
output  [63:0] mergeKipadLenStrm4_din;
input  [2:0] mergeKipadLenStrm4_num_data_valid;
input  [2:0] mergeKipadLenStrm4_fifo_cap;
input   mergeKipadLenStrm4_full_n;
output   mergeKipadLenStrm4_write;
output  [0:0] eMergeKipadLenStrm5_din;
input  [2:0] eMergeKipadLenStrm5_num_data_valid;
input  [2:0] eMergeKipadLenStrm5_fifo_cap;
input   eMergeKipadLenStrm5_full_n;
output   eMergeKipadLenStrm5_write;
output  [511:0] kopad2Strm9_din;
input  [2:0] kopad2Strm9_num_data_valid;
input  [2:0] kopad2Strm9_fifo_cap;
input   kopad2Strm9_full_n;
output   kopad2Strm9_write;

reg ap_done;
reg ap_idle;
reg start_write;
reg kipadStrm7_read;
reg kopadStrm8_read;
reg msgStrm_read;
reg lenStrm_read;
reg eKipadStrm6_read;
reg[31:0] mergeKipadStrm3_din;
reg mergeKipadStrm3_write;
reg mergeKipadLenStrm4_write;
reg[0:0] eMergeKipadLenStrm5_din;
reg eMergeKipadLenStrm5_write;
reg kopad2Strm9_write;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [8:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
reg    kipadStrm7_blk_n;
wire    ap_CS_fsm_state2;
reg    kopadStrm8_blk_n;
wire    ap_CS_fsm_state7;
reg    lenStrm_blk_n;
reg    eKipadStrm6_blk_n;
reg    mergeKipadLenStrm4_blk_n;
wire    ap_CS_fsm_state4;
reg    eMergeKipadLenStrm5_blk_n;
reg    kopad2Strm9_blk_n;
reg   [63:0] ml_V_reg_177;
reg   [511:0] kipad_V_reg_183;
wire   [63:0] mergeKipadLen_V_fu_142_p2;
reg   [63:0] mergeKipadLen_V_reg_188;
wire    ap_CS_fsm_state3;
reg   [62:0] trunc_ln_reg_193;
wire    grp_mergeKipad_32_64_256_64_Pipeline_VITIS_LOOP_162_2_fu_126_ap_start;
wire    grp_mergeKipad_32_64_256_64_Pipeline_VITIS_LOOP_162_2_fu_126_ap_done;
wire    grp_mergeKipad_32_64_256_64_Pipeline_VITIS_LOOP_162_2_fu_126_ap_idle;
wire    grp_mergeKipad_32_64_256_64_Pipeline_VITIS_LOOP_162_2_fu_126_ap_ready;
wire   [31:0] grp_mergeKipad_32_64_256_64_Pipeline_VITIS_LOOP_162_2_fu_126_mergeKipadStrm3_din;
wire    grp_mergeKipad_32_64_256_64_Pipeline_VITIS_LOOP_162_2_fu_126_mergeKipadStrm3_write;
wire    grp_mergeKipad_32_64_256_64_Pipeline_VITIS_LOOP_171_3_fu_133_ap_start;
wire    grp_mergeKipad_32_64_256_64_Pipeline_VITIS_LOOP_171_3_fu_133_ap_done;
wire    grp_mergeKipad_32_64_256_64_Pipeline_VITIS_LOOP_171_3_fu_133_ap_idle;
wire    grp_mergeKipad_32_64_256_64_Pipeline_VITIS_LOOP_171_3_fu_133_ap_ready;
wire    grp_mergeKipad_32_64_256_64_Pipeline_VITIS_LOOP_171_3_fu_133_msgStrm_read;
wire   [31:0] grp_mergeKipad_32_64_256_64_Pipeline_VITIS_LOOP_171_3_fu_133_mergeKipadStrm3_din;
wire    grp_mergeKipad_32_64_256_64_Pipeline_VITIS_LOOP_171_3_fu_133_mergeKipadStrm3_write;
reg    grp_mergeKipad_32_64_256_64_Pipeline_VITIS_LOOP_162_2_fu_126_ap_start_reg;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_state6;
reg    grp_mergeKipad_32_64_256_64_Pipeline_VITIS_LOOP_171_3_fu_133_ap_start_reg;
reg   [8:0] ap_NS_fsm;
wire    ap_NS_fsm_state8;
wire    ap_CS_fsm_state9;
reg    ap_block_state2;
reg    ap_block_state4;
reg    ap_block_state7;
wire   [66:0] mul_i_i_fu_147_p3;
wire   [67:0] mul_i_i_cast_fu_154_p1;
wire   [67:0] sub_i_i_tr_fu_158_p2;
reg    ap_block_state1;
reg    ap_ST_fsm_state1_blk;
reg    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
reg    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
reg    ap_ST_fsm_state6_blk;
reg    ap_ST_fsm_state7_blk;
wire    ap_ST_fsm_state8_blk;
reg    ap_ST_fsm_state9_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 9'd1;
#0 grp_mergeKipad_32_64_256_64_Pipeline_VITIS_LOOP_162_2_fu_126_ap_start_reg = 1'b0;
#0 grp_mergeKipad_32_64_256_64_Pipeline_VITIS_LOOP_171_3_fu_133_ap_start_reg = 1'b0;
end

test_hmac_sha256_mergeKipad_32_64_256_64_Pipeline_VITIS_LOOP_162_2 grp_mergeKipad_32_64_256_64_Pipeline_VITIS_LOOP_162_2_fu_126(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_mergeKipad_32_64_256_64_Pipeline_VITIS_LOOP_162_2_fu_126_ap_start),
    .ap_done(grp_mergeKipad_32_64_256_64_Pipeline_VITIS_LOOP_162_2_fu_126_ap_done),
    .ap_idle(grp_mergeKipad_32_64_256_64_Pipeline_VITIS_LOOP_162_2_fu_126_ap_idle),
    .ap_ready(grp_mergeKipad_32_64_256_64_Pipeline_VITIS_LOOP_162_2_fu_126_ap_ready),
    .mergeKipadStrm3_din(grp_mergeKipad_32_64_256_64_Pipeline_VITIS_LOOP_162_2_fu_126_mergeKipadStrm3_din),
    .mergeKipadStrm3_num_data_valid(8'd0),
    .mergeKipadStrm3_fifo_cap(8'd0),
    .mergeKipadStrm3_full_n(mergeKipadStrm3_full_n),
    .mergeKipadStrm3_write(grp_mergeKipad_32_64_256_64_Pipeline_VITIS_LOOP_162_2_fu_126_mergeKipadStrm3_write),
    .kipad_V_1(kipad_V_reg_183)
);

test_hmac_sha256_mergeKipad_32_64_256_64_Pipeline_VITIS_LOOP_171_3 grp_mergeKipad_32_64_256_64_Pipeline_VITIS_LOOP_171_3_fu_133(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_mergeKipad_32_64_256_64_Pipeline_VITIS_LOOP_171_3_fu_133_ap_start),
    .ap_done(grp_mergeKipad_32_64_256_64_Pipeline_VITIS_LOOP_171_3_fu_133_ap_done),
    .ap_idle(grp_mergeKipad_32_64_256_64_Pipeline_VITIS_LOOP_171_3_fu_133_ap_idle),
    .ap_ready(grp_mergeKipad_32_64_256_64_Pipeline_VITIS_LOOP_171_3_fu_133_ap_ready),
    .msgStrm_dout(msgStrm_dout),
    .msgStrm_empty_n(msgStrm_empty_n),
    .msgStrm_read(grp_mergeKipad_32_64_256_64_Pipeline_VITIS_LOOP_171_3_fu_133_msgStrm_read),
    .mergeKipadStrm3_din(grp_mergeKipad_32_64_256_64_Pipeline_VITIS_LOOP_171_3_fu_133_mergeKipadStrm3_din),
    .mergeKipadStrm3_num_data_valid(8'd0),
    .mergeKipadStrm3_fifo_cap(8'd0),
    .mergeKipadStrm3_full_n(mergeKipadStrm3_full_n),
    .mergeKipadStrm3_write(grp_mergeKipad_32_64_256_64_Pipeline_VITIS_LOOP_171_3_fu_133_mergeKipadStrm3_write),
    .empty(trunc_ln_reg_193)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((~((eKipadStrm6_empty_n == 1'b0) | ((eMergeKipadLenStrm5_full_n == 1'b0) & (eKipadStrm6_dout == 1'd1)) | ((kipadStrm7_empty_n == 1'b0) & (eKipadStrm6_dout == 1'd0)) | ((lenStrm_empty_n == 1'b0) & (eKipadStrm6_dout == 1'd0))) & (1'b1 == ap_CS_fsm_state2) & (eKipadStrm6_dout == 1'd1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_mergeKipad_32_64_256_64_Pipeline_VITIS_LOOP_162_2_fu_126_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state5)) begin
            grp_mergeKipad_32_64_256_64_Pipeline_VITIS_LOOP_162_2_fu_126_ap_start_reg <= 1'b1;
        end else if ((grp_mergeKipad_32_64_256_64_Pipeline_VITIS_LOOP_162_2_fu_126_ap_ready == 1'b1)) begin
            grp_mergeKipad_32_64_256_64_Pipeline_VITIS_LOOP_162_2_fu_126_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_mergeKipad_32_64_256_64_Pipeline_VITIS_LOOP_171_3_fu_133_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_NS_fsm_state8) & (1'b1 == ap_CS_fsm_state7))) begin
            grp_mergeKipad_32_64_256_64_Pipeline_VITIS_LOOP_171_3_fu_133_ap_start_reg <= 1'b1;
        end else if ((grp_mergeKipad_32_64_256_64_Pipeline_VITIS_LOOP_171_3_fu_133_ap_ready == 1'b1)) begin
            grp_mergeKipad_32_64_256_64_Pipeline_VITIS_LOOP_171_3_fu_133_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((internal_ap_ready == 1'b0) & (real_start == 1'b1))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (eKipadStrm6_dout == 1'd0))) begin
        kipad_V_reg_183 <= kipadStrm7_dout;
        ml_V_reg_177 <= lenStrm_dout;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        mergeKipadLen_V_reg_188 <= mergeKipadLen_V_fu_142_p2;
        trunc_ln_reg_193 <= {{sub_i_i_tr_fu_158_p2[67:5]}};
    end
end

always @ (*) begin
    if (((ap_done_reg == 1'b1) | (real_start == 1'b0))) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

always @ (*) begin
    if (((eKipadStrm6_empty_n == 1'b0) | ((eMergeKipadLenStrm5_full_n == 1'b0) & (eKipadStrm6_dout == 1'd1)) | ((kipadStrm7_empty_n == 1'b0) & (eKipadStrm6_dout == 1'd0)) | ((lenStrm_empty_n == 1'b0) & (eKipadStrm6_dout == 1'd0)))) begin
        ap_ST_fsm_state2_blk = 1'b1;
    end else begin
        ap_ST_fsm_state2_blk = 1'b0;
    end
end

assign ap_ST_fsm_state3_blk = 1'b0;

always @ (*) begin
    if (((eMergeKipadLenStrm5_full_n == 1'b0) | (mergeKipadLenStrm4_full_n == 1'b0))) begin
        ap_ST_fsm_state4_blk = 1'b1;
    end else begin
        ap_ST_fsm_state4_blk = 1'b0;
    end
end

assign ap_ST_fsm_state5_blk = 1'b0;

always @ (*) begin
    if ((grp_mergeKipad_32_64_256_64_Pipeline_VITIS_LOOP_162_2_fu_126_ap_done == 1'b0)) begin
        ap_ST_fsm_state6_blk = 1'b1;
    end else begin
        ap_ST_fsm_state6_blk = 1'b0;
    end
end

always @ (*) begin
    if (((kopad2Strm9_full_n == 1'b0) | (kopadStrm8_empty_n == 1'b0))) begin
        ap_ST_fsm_state7_blk = 1'b1;
    end else begin
        ap_ST_fsm_state7_blk = 1'b0;
    end
end

assign ap_ST_fsm_state8_blk = 1'b0;

always @ (*) begin
    if ((grp_mergeKipad_32_64_256_64_Pipeline_VITIS_LOOP_171_3_fu_133_ap_done == 1'b0)) begin
        ap_ST_fsm_state9_blk = 1'b1;
    end else begin
        ap_ST_fsm_state9_blk = 1'b0;
    end
end

always @ (*) begin
    if ((~((eKipadStrm6_empty_n == 1'b0) | ((eMergeKipadLenStrm5_full_n == 1'b0) & (eKipadStrm6_dout == 1'd1)) | ((kipadStrm7_empty_n == 1'b0) & (eKipadStrm6_dout == 1'd0)) | ((lenStrm_empty_n == 1'b0) & (eKipadStrm6_dout == 1'd0))) & (1'b1 == ap_CS_fsm_state2) & (eKipadStrm6_dout == 1'd1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (real_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        eKipadStrm6_blk_n = eKipadStrm6_empty_n;
    end else begin
        eKipadStrm6_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((eKipadStrm6_empty_n == 1'b0) | ((eMergeKipadLenStrm5_full_n == 1'b0) & (eKipadStrm6_dout == 1'd1)) | ((kipadStrm7_empty_n == 1'b0) & (eKipadStrm6_dout == 1'd0)) | ((lenStrm_empty_n == 1'b0) & (eKipadStrm6_dout == 1'd0))) & (1'b1 == ap_CS_fsm_state2))) begin
        eKipadStrm6_read = 1'b1;
    end else begin
        eKipadStrm6_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | ((1'b1 == ap_CS_fsm_state2) & (eKipadStrm6_dout == 1'd1)))) begin
        eMergeKipadLenStrm5_blk_n = eMergeKipadLenStrm5_full_n;
    end else begin
        eMergeKipadLenStrm5_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((eMergeKipadLenStrm5_full_n == 1'b0) | (mergeKipadLenStrm4_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state4))) begin
        eMergeKipadLenStrm5_din = 1'd0;
    end else if ((~((eKipadStrm6_empty_n == 1'b0) | ((eMergeKipadLenStrm5_full_n == 1'b0) & (eKipadStrm6_dout == 1'd1)) | ((kipadStrm7_empty_n == 1'b0) & (eKipadStrm6_dout == 1'd0)) | ((lenStrm_empty_n == 1'b0) & (eKipadStrm6_dout == 1'd0))) & (1'b1 == ap_CS_fsm_state2) & (eKipadStrm6_dout == 1'd1))) begin
        eMergeKipadLenStrm5_din = 1'd1;
    end else begin
        eMergeKipadLenStrm5_din = 'bx;
    end
end

always @ (*) begin
    if (((~((eMergeKipadLenStrm5_full_n == 1'b0) | (mergeKipadLenStrm4_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state4)) | (~((eKipadStrm6_empty_n == 1'b0) | ((eMergeKipadLenStrm5_full_n == 1'b0) & (eKipadStrm6_dout == 1'd1)) | ((kipadStrm7_empty_n == 1'b0) & (eKipadStrm6_dout == 1'd0)) | ((lenStrm_empty_n == 1'b0) & (eKipadStrm6_dout == 1'd0))) & (1'b1 == ap_CS_fsm_state2) & (eKipadStrm6_dout == 1'd1)))) begin
        eMergeKipadLenStrm5_write = 1'b1;
    end else begin
        eMergeKipadLenStrm5_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((eKipadStrm6_empty_n == 1'b0) | ((eMergeKipadLenStrm5_full_n == 1'b0) & (eKipadStrm6_dout == 1'd1)) | ((kipadStrm7_empty_n == 1'b0) & (eKipadStrm6_dout == 1'd0)) | ((lenStrm_empty_n == 1'b0) & (eKipadStrm6_dout == 1'd0))) & (1'b1 == ap_CS_fsm_state2) & (eKipadStrm6_dout == 1'd1))) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (eKipadStrm6_dout == 1'd0))) begin
        kipadStrm7_blk_n = kipadStrm7_empty_n;
    end else begin
        kipadStrm7_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((eKipadStrm6_empty_n == 1'b0) | ((eMergeKipadLenStrm5_full_n == 1'b0) & (eKipadStrm6_dout == 1'd1)) | ((kipadStrm7_empty_n == 1'b0) & (eKipadStrm6_dout == 1'd0)) | ((lenStrm_empty_n == 1'b0) & (eKipadStrm6_dout == 1'd0))) & (1'b1 == ap_CS_fsm_state2) & (eKipadStrm6_dout == 1'd0))) begin
        kipadStrm7_read = 1'b1;
    end else begin
        kipadStrm7_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        kopad2Strm9_blk_n = kopad2Strm9_full_n;
    end else begin
        kopad2Strm9_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((kopad2Strm9_full_n == 1'b0) | (kopadStrm8_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state7))) begin
        kopad2Strm9_write = 1'b1;
    end else begin
        kopad2Strm9_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        kopadStrm8_blk_n = kopadStrm8_empty_n;
    end else begin
        kopadStrm8_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((kopad2Strm9_full_n == 1'b0) | (kopadStrm8_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state7))) begin
        kopadStrm8_read = 1'b1;
    end else begin
        kopadStrm8_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (eKipadStrm6_dout == 1'd0))) begin
        lenStrm_blk_n = lenStrm_empty_n;
    end else begin
        lenStrm_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((eKipadStrm6_empty_n == 1'b0) | ((eMergeKipadLenStrm5_full_n == 1'b0) & (eKipadStrm6_dout == 1'd1)) | ((kipadStrm7_empty_n == 1'b0) & (eKipadStrm6_dout == 1'd0)) | ((lenStrm_empty_n == 1'b0) & (eKipadStrm6_dout == 1'd0))) & (1'b1 == ap_CS_fsm_state2) & (eKipadStrm6_dout == 1'd0))) begin
        lenStrm_read = 1'b1;
    end else begin
        lenStrm_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        mergeKipadLenStrm4_blk_n = mergeKipadLenStrm4_full_n;
    end else begin
        mergeKipadLenStrm4_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((eMergeKipadLenStrm5_full_n == 1'b0) | (mergeKipadLenStrm4_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state4))) begin
        mergeKipadLenStrm4_write = 1'b1;
    end else begin
        mergeKipadLenStrm4_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        mergeKipadStrm3_din = grp_mergeKipad_32_64_256_64_Pipeline_VITIS_LOOP_171_3_fu_133_mergeKipadStrm3_din;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        mergeKipadStrm3_din = grp_mergeKipad_32_64_256_64_Pipeline_VITIS_LOOP_162_2_fu_126_mergeKipadStrm3_din;
    end else begin
        mergeKipadStrm3_din = grp_mergeKipad_32_64_256_64_Pipeline_VITIS_LOOP_171_3_fu_133_mergeKipadStrm3_din;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        mergeKipadStrm3_write = grp_mergeKipad_32_64_256_64_Pipeline_VITIS_LOOP_171_3_fu_133_mergeKipadStrm3_write;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        mergeKipadStrm3_write = grp_mergeKipad_32_64_256_64_Pipeline_VITIS_LOOP_162_2_fu_126_mergeKipadStrm3_write;
    end else begin
        mergeKipadStrm3_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        msgStrm_read = grp_mergeKipad_32_64_256_64_Pipeline_VITIS_LOOP_171_3_fu_133_msgStrm_read;
    end else begin
        msgStrm_read = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (start_full_n == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (real_start == 1'b1))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if ((~((eKipadStrm6_empty_n == 1'b0) | ((eMergeKipadLenStrm5_full_n == 1'b0) & (eKipadStrm6_dout == 1'd1)) | ((kipadStrm7_empty_n == 1'b0) & (eKipadStrm6_dout == 1'd0)) | ((lenStrm_empty_n == 1'b0) & (eKipadStrm6_dout == 1'd0))) & (1'b1 == ap_CS_fsm_state2) & (eKipadStrm6_dout == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else if ((~((eKipadStrm6_empty_n == 1'b0) | ((eMergeKipadLenStrm5_full_n == 1'b0) & (eKipadStrm6_dout == 1'd1)) | ((kipadStrm7_empty_n == 1'b0) & (eKipadStrm6_dout == 1'd0)) | ((lenStrm_empty_n == 1'b0) & (eKipadStrm6_dout == 1'd0))) & (1'b1 == ap_CS_fsm_state2) & (eKipadStrm6_dout == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            if ((~((eMergeKipadLenStrm5_full_n == 1'b0) | (mergeKipadLenStrm4_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            if (((1'b1 == ap_CS_fsm_state6) & (grp_mergeKipad_32_64_256_64_Pipeline_VITIS_LOOP_162_2_fu_126_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state7 : begin
            if ((~((kopad2Strm9_full_n == 1'b0) | (kopadStrm8_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state7))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            if (((1'b1 == ap_CS_fsm_state9) & (grp_mergeKipad_32_64_256_64_Pipeline_VITIS_LOOP_171_3_fu_133_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_NS_fsm_state8 = ap_NS_fsm[32'd7];

always @ (*) begin
    ap_block_state1 = ((ap_done_reg == 1'b1) | (real_start == 1'b0));
end

always @ (*) begin
    ap_block_state2 = ((eKipadStrm6_empty_n == 1'b0) | ((eMergeKipadLenStrm5_full_n == 1'b0) & (eKipadStrm6_dout == 1'd1)) | ((kipadStrm7_empty_n == 1'b0) & (eKipadStrm6_dout == 1'd0)) | ((lenStrm_empty_n == 1'b0) & (eKipadStrm6_dout == 1'd0)));
end

always @ (*) begin
    ap_block_state4 = ((eMergeKipadLenStrm5_full_n == 1'b0) | (mergeKipadLenStrm4_full_n == 1'b0));
end

always @ (*) begin
    ap_block_state7 = ((kopad2Strm9_full_n == 1'b0) | (kopadStrm8_empty_n == 1'b0));
end

assign ap_ready = internal_ap_ready;

assign grp_mergeKipad_32_64_256_64_Pipeline_VITIS_LOOP_162_2_fu_126_ap_start = grp_mergeKipad_32_64_256_64_Pipeline_VITIS_LOOP_162_2_fu_126_ap_start_reg;

assign grp_mergeKipad_32_64_256_64_Pipeline_VITIS_LOOP_171_3_fu_133_ap_start = grp_mergeKipad_32_64_256_64_Pipeline_VITIS_LOOP_171_3_fu_133_ap_start_reg;

assign kopad2Strm9_din = kopadStrm8_dout;

assign mergeKipadLenStrm4_din = mergeKipadLen_V_reg_188;

assign mergeKipadLen_V_fu_142_p2 = (ml_V_reg_177 + 64'd64);

assign mul_i_i_cast_fu_154_p1 = mul_i_i_fu_147_p3;

assign mul_i_i_fu_147_p3 = {{ml_V_reg_177}, {3'd0}};

assign start_out = real_start;

assign sub_i_i_tr_fu_158_p2 = (mul_i_i_cast_fu_154_p1 + 68'd31);

endmodule //test_hmac_sha256_mergeKipad_32_64_256_64_s
